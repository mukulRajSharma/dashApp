{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/drawer/ui.drawer.rendering.strategy.shrink.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { animation } from \"./ui.drawer.animation\";\nimport DrawerStrategy from \"./ui.drawer.rendering.strategy\";\nimport $ from \"../../core/renderer\";\nimport { camelize } from \"../../core/utils/inflector\";\n\nclass ShrinkStrategy extends DrawerStrategy {\n  _internalRenderPosition(changePositionUsingFxAnimation, whenAnimationCompleted) {\n    var drawer = this.getDrawerInstance();\n    var direction = drawer.calcTargetPosition();\n    var $panel = $(drawer.content());\n\n    var panelSize = this._getPanelSize(drawer.option(\"opened\"));\n\n    var panelOffset = this._getPanelOffset(drawer.option(\"opened\"));\n\n    var revealMode = drawer.option(\"revealMode\");\n\n    if (changePositionUsingFxAnimation) {\n      if (\"slide\" === revealMode) {\n        animation.margin({\n          complete: () => {\n            whenAnimationCompleted.resolve();\n          },\n          $element: $panel,\n          duration: drawer.option(\"animationDuration\"),\n          direction: direction,\n          margin: panelOffset\n        });\n      } else if (\"expand\" === revealMode) {\n        animation.size({\n          complete: () => {\n            whenAnimationCompleted.resolve();\n          },\n          $element: $panel,\n          duration: drawer.option(\"animationDuration\"),\n          direction: direction,\n          size: panelSize\n        });\n      }\n    } else if (\"slide\" === revealMode) {\n      $panel.css(\"margin\" + camelize(direction, true), panelOffset);\n    } else if (\"expand\" === revealMode) {\n      $panel.css(drawer.isHorizontalDirection() ? \"width\" : \"height\", panelSize);\n    }\n  }\n\n  isViewContentFirst(position, isRtl) {\n    return (isRtl ? \"left\" === position : \"right\" === position) || \"bottom\" === position;\n  }\n\n}\n\nexport default ShrinkStrategy;","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/node_modules/devextreme/esm/ui/drawer/ui.drawer.rendering.strategy.shrink.js"],"names":["animation","DrawerStrategy","$","camelize","ShrinkStrategy","_internalRenderPosition","changePositionUsingFxAnimation","whenAnimationCompleted","drawer","getDrawerInstance","direction","calcTargetPosition","$panel","content","panelSize","_getPanelSize","option","panelOffset","_getPanelOffset","revealMode","margin","complete","resolve","$element","duration","size","css","isHorizontalDirection","isViewContentFirst","position","isRtl"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,SADJ,QAEO,uBAFP;AAGA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,CAAP,MAAc,qBAAd;AACA,SACIC,QADJ,QAEO,4BAFP;;AAGA,MAAMC,cAAN,SAA6BH,cAA7B,CAA4C;AACxCI,EAAAA,uBAAuB,CAACC,8BAAD,EAAiCC,sBAAjC,EAAyD;AAC5E,QAAIC,MAAM,GAAG,KAAKC,iBAAL,EAAb;AACA,QAAIC,SAAS,GAAGF,MAAM,CAACG,kBAAP,EAAhB;AACA,QAAIC,MAAM,GAAGV,CAAC,CAACM,MAAM,CAACK,OAAP,EAAD,CAAd;;AACA,QAAIC,SAAS,GAAG,KAAKC,aAAL,CAAmBP,MAAM,CAACQ,MAAP,CAAc,QAAd,CAAnB,CAAhB;;AACA,QAAIC,WAAW,GAAG,KAAKC,eAAL,CAAqBV,MAAM,CAACQ,MAAP,CAAc,QAAd,CAArB,CAAlB;;AACA,QAAIG,UAAU,GAAGX,MAAM,CAACQ,MAAP,CAAc,YAAd,CAAjB;;AACA,QAAIV,8BAAJ,EAAoC;AAChC,UAAI,YAAYa,UAAhB,EAA4B;AACxBnB,QAAAA,SAAS,CAACoB,MAAV,CAAiB;AACbC,UAAAA,QAAQ,EAAE,MAAM;AACZd,YAAAA,sBAAsB,CAACe,OAAvB;AACH,WAHY;AAIbC,UAAAA,QAAQ,EAAEX,MAJG;AAKbY,UAAAA,QAAQ,EAAEhB,MAAM,CAACQ,MAAP,CAAc,mBAAd,CALG;AAMbN,UAAAA,SAAS,EAAEA,SANE;AAObU,UAAAA,MAAM,EAAEH;AAPK,SAAjB;AASH,OAVD,MAUO,IAAI,aAAaE,UAAjB,EAA6B;AAChCnB,QAAAA,SAAS,CAACyB,IAAV,CAAe;AACXJ,UAAAA,QAAQ,EAAE,MAAM;AACZd,YAAAA,sBAAsB,CAACe,OAAvB;AACH,WAHU;AAIXC,UAAAA,QAAQ,EAAEX,MAJC;AAKXY,UAAAA,QAAQ,EAAEhB,MAAM,CAACQ,MAAP,CAAc,mBAAd,CALC;AAMXN,UAAAA,SAAS,EAAEA,SANA;AAOXe,UAAAA,IAAI,EAAEX;AAPK,SAAf;AASH;AACJ,KAtBD,MAsBO,IAAI,YAAYK,UAAhB,EAA4B;AAC/BP,MAAAA,MAAM,CAACc,GAAP,CAAW,WAAWvB,QAAQ,CAACO,SAAD,EAAY,IAAZ,CAA9B,EAAiDO,WAAjD;AACH,KAFM,MAEA,IAAI,aAAaE,UAAjB,EAA6B;AAChCP,MAAAA,MAAM,CAACc,GAAP,CAAWlB,MAAM,CAACmB,qBAAP,KAAiC,OAAjC,GAA2C,QAAtD,EAAgEb,SAAhE;AACH;AACJ;;AACDc,EAAAA,kBAAkB,CAACC,QAAD,EAAWC,KAAX,EAAkB;AAChC,WAAO,CAACA,KAAK,GAAG,WAAWD,QAAd,GAAyB,YAAYA,QAA3C,KAAwD,aAAaA,QAA5E;AACH;;AAtCuC;;AAwC5C,eAAezB,cAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/drawer/ui.drawer.rendering.strategy.shrink.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    animation\r\n} from \"./ui.drawer.animation\";\r\nimport DrawerStrategy from \"./ui.drawer.rendering.strategy\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    camelize\r\n} from \"../../core/utils/inflector\";\r\nclass ShrinkStrategy extends DrawerStrategy {\r\n    _internalRenderPosition(changePositionUsingFxAnimation, whenAnimationCompleted) {\r\n        var drawer = this.getDrawerInstance();\r\n        var direction = drawer.calcTargetPosition();\r\n        var $panel = $(drawer.content());\r\n        var panelSize = this._getPanelSize(drawer.option(\"opened\"));\r\n        var panelOffset = this._getPanelOffset(drawer.option(\"opened\"));\r\n        var revealMode = drawer.option(\"revealMode\");\r\n        if (changePositionUsingFxAnimation) {\r\n            if (\"slide\" === revealMode) {\r\n                animation.margin({\r\n                    complete: () => {\r\n                        whenAnimationCompleted.resolve()\r\n                    },\r\n                    $element: $panel,\r\n                    duration: drawer.option(\"animationDuration\"),\r\n                    direction: direction,\r\n                    margin: panelOffset\r\n                })\r\n            } else if (\"expand\" === revealMode) {\r\n                animation.size({\r\n                    complete: () => {\r\n                        whenAnimationCompleted.resolve()\r\n                    },\r\n                    $element: $panel,\r\n                    duration: drawer.option(\"animationDuration\"),\r\n                    direction: direction,\r\n                    size: panelSize\r\n                })\r\n            }\r\n        } else if (\"slide\" === revealMode) {\r\n            $panel.css(\"margin\" + camelize(direction, true), panelOffset)\r\n        } else if (\"expand\" === revealMode) {\r\n            $panel.css(drawer.isHorizontalDirection() ? \"width\" : \"height\", panelSize)\r\n        }\r\n    }\r\n    isViewContentFirst(position, isRtl) {\r\n        return (isRtl ? \"left\" === position : \"right\" === position) || \"bottom\" === position\r\n    }\r\n}\r\nexport default ShrinkStrategy;\r\n"]},"metadata":{},"sourceType":"module"}