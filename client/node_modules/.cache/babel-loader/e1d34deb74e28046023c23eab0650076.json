{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/validation_message.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../core/renderer\";\nimport registerComponent from \"../core/component_registrator\";\nimport Overlay from \"./overlay/ui.overlay\";\nimport { extend } from \"../core/utils/extend\";\nimport { encodeHtml } from \"../core/utils/string\";\nimport { getDefaultAlignment } from \"../core/utils/position\";\nvar INVALID_MESSAGE = \"dx-invalid-message\";\nvar INVALID_MESSAGE_AUTO = \"dx-invalid-message-auto\";\nvar INVALID_MESSAGE_ALWAYS = \"dx-invalid-message-always\";\nvar INVALID_MESSAGE_CONTENT = \"dx-invalid-message-content\";\nvar VALIDATION_MESSAGE_MIN_WIDTH = 100;\nvar ValidationMessage = Overlay.inherit({\n  _getDefaultOptions() {\n    return extend(this.callBase(), {\n      integrationOptions: {},\n      templatesRenderAsynchronously: false,\n      shading: false,\n      width: \"auto\",\n      height: \"auto\",\n      closeOnOutsideClick: false,\n      closeOnTargetScroll: false,\n      animation: null,\n      visible: true,\n      propagateOutsideClick: true,\n      _checkParentVisibility: false,\n      rtlEnabled: false,\n      contentTemplate: this._renderInnerHtml,\n      maxWidth: \"100%\",\n      mode: \"auto\",\n      validationErrors: void 0,\n      positionRequest: void 0,\n      describedElement: void 0,\n      boundary: void 0,\n      offset: {\n        h: 0,\n        v: 0\n      }\n    });\n  },\n\n  _init() {\n    this.callBase();\n    this.updateMaxWidth();\n\n    this._updatePosition();\n  },\n\n  _initMarkup() {\n    this.callBase();\n    this.$element().addClass(INVALID_MESSAGE);\n    this.$wrapper().addClass(INVALID_MESSAGE);\n\n    this._toggleModeClass();\n\n    this._updateContentId();\n  },\n\n  _updateContentId() {\n    var describedElement = this.option(\"describedElement\") || this.option(\"container\");\n    var contentId = $(describedElement).attr(\"aria-describedby\");\n    this.$content().addClass(INVALID_MESSAGE_CONTENT).attr(\"id\", contentId);\n  },\n\n  _renderInnerHtml(element) {\n    var $element = element && $(element);\n    var validationErrors = this.option(\"validationErrors\") || [];\n    var validationErrorMessage = \"\";\n    validationErrors.forEach(err => {\n      var separator = validationErrorMessage ? \"<br />\" : \"\";\n      validationErrorMessage += separator + encodeHtml((null === err || void 0 === err ? void 0 : err.message) || \"\");\n    });\n    null === $element || void 0 === $element ? void 0 : $element.html(validationErrorMessage);\n  },\n\n  _toggleModeClass() {\n    var mode = this.option(\"mode\");\n    this.$wrapper().toggleClass(INVALID_MESSAGE_AUTO, \"auto\" === mode).toggleClass(INVALID_MESSAGE_ALWAYS, \"always\" === mode);\n  },\n\n  updateMaxWidth() {\n    var _target$outerWidth;\n\n    var target = this.option(\"target\");\n    var targetWidth = (null === target || void 0 === target ? void 0 : null === (_target$outerWidth = target.outerWidth) || void 0 === _target$outerWidth ? void 0 : _target$outerWidth.call(target)) || $(target).outerWidth();\n    var maxWidth = \"100%\";\n\n    if (targetWidth) {\n      maxWidth = Math.max(targetWidth, VALIDATION_MESSAGE_MIN_WIDTH);\n    }\n\n    this.option({\n      maxWidth: maxWidth\n    });\n  },\n\n  _updatePosition: function () {\n    var {\n      positionRequest: positionRequest,\n      rtlEnabled: rtlEnabled,\n      offset: offset,\n      boundary: boundary\n    } = this.option();\n    var positionSide = getDefaultAlignment(rtlEnabled);\n    var verticalPositions = \"below\" === positionRequest ? [\" top\", \" bottom\"] : [\" bottom\", \" top\"];\n\n    if (rtlEnabled) {\n      offset.h = -offset.h;\n    }\n\n    if (\"below\" !== positionRequest) {\n      offset.v = -offset.v;\n    }\n\n    this.option(\"position\", {\n      offset: offset,\n      boundary: boundary,\n      my: positionSide + verticalPositions[0],\n      at: positionSide + verticalPositions[1],\n      collision: \"none flip\"\n    });\n  },\n\n  _optionChanged(args) {\n    var {\n      name: name,\n      value: value\n    } = args;\n\n    switch (name) {\n      case \"target\":\n        this.updateMaxWidth();\n        this.callBase(args);\n        break;\n\n      case \"boundary\":\n        this.option(\"position.boundary\", value);\n        break;\n\n      case \"mode\":\n        this._toggleModeClass(value);\n\n        break;\n\n      case \"rtlEnabled\":\n      case \"offset\":\n      case \"positionRequest\":\n        this._updatePosition();\n\n        break;\n\n      case \"validationErrors\":\n        this._renderInnerHtml(this.$content());\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n\n});\nregisterComponent(\"dxValidationMessage\", ValidationMessage);\nexport default ValidationMessage;","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/node_modules/devextreme/esm/ui/validation_message.js"],"names":["$","registerComponent","Overlay","extend","encodeHtml","getDefaultAlignment","INVALID_MESSAGE","INVALID_MESSAGE_AUTO","INVALID_MESSAGE_ALWAYS","INVALID_MESSAGE_CONTENT","VALIDATION_MESSAGE_MIN_WIDTH","ValidationMessage","inherit","_getDefaultOptions","callBase","integrationOptions","templatesRenderAsynchronously","shading","width","height","closeOnOutsideClick","closeOnTargetScroll","animation","visible","propagateOutsideClick","_checkParentVisibility","rtlEnabled","contentTemplate","_renderInnerHtml","maxWidth","mode","validationErrors","positionRequest","describedElement","boundary","offset","h","v","_init","updateMaxWidth","_updatePosition","_initMarkup","$element","addClass","$wrapper","_toggleModeClass","_updateContentId","option","contentId","attr","$content","element","validationErrorMessage","forEach","err","separator","message","html","toggleClass","_target$outerWidth","target","targetWidth","outerWidth","call","Math","max","positionSide","verticalPositions","my","at","collision","_optionChanged","args","name","value"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/validation_message.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport Overlay from \"./overlay/ui.overlay\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    encodeHtml\r\n} from \"../core/utils/string\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../core/utils/position\";\r\nvar INVALID_MESSAGE = \"dx-invalid-message\";\r\nvar INVALID_MESSAGE_AUTO = \"dx-invalid-message-auto\";\r\nvar INVALID_MESSAGE_ALWAYS = \"dx-invalid-message-always\";\r\nvar INVALID_MESSAGE_CONTENT = \"dx-invalid-message-content\";\r\nvar VALIDATION_MESSAGE_MIN_WIDTH = 100;\r\nvar ValidationMessage = Overlay.inherit({\r\n    _getDefaultOptions() {\r\n        return extend(this.callBase(), {\r\n            integrationOptions: {},\r\n            templatesRenderAsynchronously: false,\r\n            shading: false,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            closeOnOutsideClick: false,\r\n            closeOnTargetScroll: false,\r\n            animation: null,\r\n            visible: true,\r\n            propagateOutsideClick: true,\r\n            _checkParentVisibility: false,\r\n            rtlEnabled: false,\r\n            contentTemplate: this._renderInnerHtml,\r\n            maxWidth: \"100%\",\r\n            mode: \"auto\",\r\n            validationErrors: void 0,\r\n            positionRequest: void 0,\r\n            describedElement: void 0,\r\n            boundary: void 0,\r\n            offset: {\r\n                h: 0,\r\n                v: 0\r\n            }\r\n        })\r\n    },\r\n    _init() {\r\n        this.callBase();\r\n        this.updateMaxWidth();\r\n        this._updatePosition()\r\n    },\r\n    _initMarkup() {\r\n        this.callBase();\r\n        this.$element().addClass(INVALID_MESSAGE);\r\n        this.$wrapper().addClass(INVALID_MESSAGE);\r\n        this._toggleModeClass();\r\n        this._updateContentId()\r\n    },\r\n    _updateContentId() {\r\n        var describedElement = this.option(\"describedElement\") || this.option(\"container\");\r\n        var contentId = $(describedElement).attr(\"aria-describedby\");\r\n        this.$content().addClass(INVALID_MESSAGE_CONTENT).attr(\"id\", contentId)\r\n    },\r\n    _renderInnerHtml(element) {\r\n        var $element = element && $(element);\r\n        var validationErrors = this.option(\"validationErrors\") || [];\r\n        var validationErrorMessage = \"\";\r\n        validationErrors.forEach(err => {\r\n            var separator = validationErrorMessage ? \"<br />\" : \"\";\r\n            validationErrorMessage += separator + encodeHtml((null === err || void 0 === err ? void 0 : err.message) || \"\")\r\n        });\r\n        null === $element || void 0 === $element ? void 0 : $element.html(validationErrorMessage)\r\n    },\r\n    _toggleModeClass() {\r\n        var mode = this.option(\"mode\");\r\n        this.$wrapper().toggleClass(INVALID_MESSAGE_AUTO, \"auto\" === mode).toggleClass(INVALID_MESSAGE_ALWAYS, \"always\" === mode)\r\n    },\r\n    updateMaxWidth() {\r\n        var _target$outerWidth;\r\n        var target = this.option(\"target\");\r\n        var targetWidth = (null === target || void 0 === target ? void 0 : null === (_target$outerWidth = target.outerWidth) || void 0 === _target$outerWidth ? void 0 : _target$outerWidth.call(target)) || $(target).outerWidth();\r\n        var maxWidth = \"100%\";\r\n        if (targetWidth) {\r\n            maxWidth = Math.max(targetWidth, VALIDATION_MESSAGE_MIN_WIDTH)\r\n        }\r\n        this.option({\r\n            maxWidth: maxWidth\r\n        })\r\n    },\r\n    _updatePosition: function() {\r\n        var {\r\n            positionRequest: positionRequest,\r\n            rtlEnabled: rtlEnabled,\r\n            offset: offset,\r\n            boundary: boundary\r\n        } = this.option();\r\n        var positionSide = getDefaultAlignment(rtlEnabled);\r\n        var verticalPositions = \"below\" === positionRequest ? [\" top\", \" bottom\"] : [\" bottom\", \" top\"];\r\n        if (rtlEnabled) {\r\n            offset.h = -offset.h\r\n        }\r\n        if (\"below\" !== positionRequest) {\r\n            offset.v = -offset.v\r\n        }\r\n        this.option(\"position\", {\r\n            offset: offset,\r\n            boundary: boundary,\r\n            my: positionSide + verticalPositions[0],\r\n            at: positionSide + verticalPositions[1],\r\n            collision: \"none flip\"\r\n        })\r\n    },\r\n    _optionChanged(args) {\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = args;\r\n        switch (name) {\r\n            case \"target\":\r\n                this.updateMaxWidth();\r\n                this.callBase(args);\r\n                break;\r\n            case \"boundary\":\r\n                this.option(\"position.boundary\", value);\r\n                break;\r\n            case \"mode\":\r\n                this._toggleModeClass(value);\r\n                break;\r\n            case \"rtlEnabled\":\r\n            case \"offset\":\r\n            case \"positionRequest\":\r\n                this._updatePosition();\r\n                break;\r\n            case \"validationErrors\":\r\n                this._renderInnerHtml(this.$content());\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxValidationMessage\", ValidationMessage);\r\nexport default ValidationMessage;\r\n"]},"metadata":{},"sourceType":"module"}