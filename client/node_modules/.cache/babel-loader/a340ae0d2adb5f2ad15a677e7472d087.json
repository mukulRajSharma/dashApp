{"ast":null,"code":"var _jsxFileName = \"/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/src/pages/home/home.js\";\nimport React from 'react';\nimport './home.scss';\nimport 'devextreme/data/odata/store';\nimport DataGrid, { Column, Grouping, GroupPanel, Pager, Paging, SearchPanel, FilterRow, MasterDetail, Selection } from 'devextreme-react/data-grid';\nimport Button from \"devextreme/ui/button\";\nimport DropDownButton from 'devextreme-react/drop-down-button';\nimport notify from 'devextreme/ui/notify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar jj = require('./port_info.json');\n\nconst pageSizes = [10, 25, 50, 100];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dropDataSource = [\"Arunan\", \"Mukul\"];\n    this.dataGridRef = /*#__PURE__*/React.createRef();\n    this.selectedRowsData = [];\n\n    this.getSelectedData = () => {\n      this.selectedRowsData = this.dataGrid.getSelectedRowsData(); // return this.selectedRowsData;\n\n      return this.selectedRowsData;\n    };\n\n    this.state = {\n      currentUser: \"Mukul\",\n      allMode: 'allPages',\n      checkBoxesMode: 'onClick',\n      postId: 1\n    };\n    this.onItemClick = this.onItemClick.bind(this);\n    this.setCurrentUser = this.setCurrentUser.bind(this);\n    this.onSubmitClick = this.onSubmitClick.bind(this); // this.sendJson = this.sendJson.bind(this);\n  }\n\n  get dataGrid() {\n    return this.dataGridRef.current.instance;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: 40\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Raw Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropDownButton, {\n          text: \"Select user\",\n          icon: \"user\",\n          dropDownOptions: {\n            width: 230\n          },\n          items: this.dropDataSource // onItemClick={this.onItemClick}\n          ,\n          onOptionChanged: this.setCurrentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 1080,\n          marginLeft: 40\n        },\n        children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n          dataSource: jj,\n          allowColumnReordering: true,\n          showBorders: true,\n          ref: this.dataGridRef,\n          children: [/*#__PURE__*/_jsxDEV(FilterRow, {\n            visible: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(GroupPanel, {\n            visible: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(SearchPanel, {\n            visible: true,\n            highlightCaseSensitive: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grouping, {\n            autoExpandAll: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Selection, {\n            mode: \"multiple\",\n            selectAllMode: this.state.allMode,\n            showCheckBoxesMode: this.state.checkBoxesMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"port\",\n            caption: \"Port\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"ip_proto\",\n            caption: \"IP Protocol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"service\",\n            caption: \"Service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"description\",\n            caption: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            dataField: \"source\",\n            caption: \"Source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Pager, {\n            allowedPageSizes: pageSizes,\n            showPageSizeSelector: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Paging, {\n            defaultPageSize: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            width: 120,\n            text: \"Contained\",\n            type: \"success\",\n            stylingMode: \"contained\",\n            onClick: this.onSubmitClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n  async onSubmitClick() {\n    let r = this.getSelectedData();\n    let c = this.state.currentUser;\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        rows: r,\n        user: c\n      })\n    };\n    const response = await fetch('/addTrusted', requestOptions);\n    const data = await response.json();\n    this.setState({\n      postId: data.id\n    });\n  }\n\n  setCurrentUser(e) {\n    this.setState({\n      currentUser: e.value\n    });\n    notify(\"User set to \" + this.state.currentUser, 'success', 5000);\n  }\n\n  async onItemClick(e) {}\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/src/pages/home/home.js"],"names":["React","DataGrid","Column","Grouping","GroupPanel","Pager","Paging","SearchPanel","FilterRow","MasterDetail","Selection","Button","DropDownButton","notify","jj","require","pageSizes","App","Component","constructor","props","dropDataSource","dataGridRef","createRef","selectedRowsData","getSelectedData","dataGrid","getSelectedRowsData","state","currentUser","allMode","checkBoxesMode","postId","onItemClick","bind","setCurrentUser","onSubmitClick","current","instance","render","marginLeft","width","r","c","requestOptions","method","headers","body","JSON","stringify","rows","user","response","fetch","data","json","setState","id","e","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './home.scss';\nimport 'devextreme/data/odata/store';\nimport DataGrid, {\n  Column,\n  Grouping,\n  GroupPanel,\n  Pager,\n  Paging,\n  SearchPanel,\n  FilterRow,\n  MasterDetail,\n  Selection\n} from 'devextreme-react/data-grid';\nimport Button from \"devextreme/ui/button\";\nimport DropDownButton from 'devextreme-react/drop-down-button';\nimport notify from 'devextreme/ui/notify';\n\n\nvar jj = require('./port_info.json');\nconst pageSizes = [10, 25, 50, 100];\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.dropDataSource=[\"Arunan\", \"Mukul\"];\n    this.dataGridRef = React.createRef();\n    this.selectedRowsData = [];\n\n    this.getSelectedData = () => {\n      this.selectedRowsData = this.dataGrid.getSelectedRowsData();\n      // return this.selectedRowsData;\n      return this.selectedRowsData;\n    }\n\n    this.state = {\n      currentUser: \"Mukul\",\n      allMode: 'allPages',\n      checkBoxesMode: 'onClick',\n      postId:1\n    }\n    this.onItemClick = this.onItemClick.bind(this);\n    this.setCurrentUser = this.setCurrentUser.bind(this);\n    this.onSubmitClick = this.onSubmitClick.bind(this);\n    // this.sendJson = this.sendJson.bind(this);\n  }\n  get dataGrid() {\n    return this.dataGridRef.current.instance;\n  }\n  render() {\n    return (\n      <div>\n        <div style={{marginLeft:40}}>\n          <h2>Raw Data</h2>\n          <DropDownButton\n            text=\"Select user\"\n            icon=\"user\"\n            dropDownOptions={{ width: 230 }}\n            items={this.dropDataSource}\n            // onItemClick={this.onItemClick}\n            onOptionChanged={this.setCurrentUser}\n          />\n        </div>\n        <div style={{width:1080, marginLeft:40}}>\n          <DataGrid\n          dataSource={jj}\n          allowColumnReordering={true}\n          showBorders={true}\n          ref={this.dataGridRef}\n          >\n          <FilterRow visible={true} />\n          <GroupPanel visible={true} />\n          <SearchPanel visible={true} highlightCaseSensitive={true} />\n          <Grouping autoExpandAll={false} />\n\n          <Selection\n            mode=\"multiple\"\n            selectAllMode={this.state.allMode}\n            showCheckBoxesMode={this.state.checkBoxesMode}\n          />\n          <Column\n            dataField=\"port\"\n            caption=\"Port\"\n          />\n          <Column\n            dataField=\"ip_proto\"\n            caption=\"IP Protocol\"\n          />\n          <Column\n            dataField=\"service\"\n            caption=\"Service\"\n          />\n          <Column\n            dataField=\"description\"\n            caption=\"Description\"\n          />\n          <Column\n            dataField=\"source\"\n            caption=\"Source\"\n          />\n\n          <Pager allowedPageSizes={pageSizes} showPageSizeSelector={true} />\n          <Paging defaultPageSize={10} />\n\n          </DataGrid>\n          <div>\n            <Button\n              width={120}\n              text=\"Contained\"\n              type=\"success\"\n              stylingMode=\"contained\"\n              onClick={this.onSubmitClick}\n            />\n          </div>\n        </div>\n      </div>\n      \n    );\n  }\n  async onSubmitClick(){\n    let r = this.getSelectedData();\n    let c = this.state.currentUser;\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ rows: r, user: c })\n    };\n    const response = await fetch('/addTrusted', requestOptions);\n    const data = await response.json();\n    this.setState({ postId: data.id });\n  }\n  setCurrentUser(e){\n    this.setState({\n      currentUser: e.value\n    });\n    notify(\"User set to \"+this.state.currentUser, 'success', 5000);\n  }\n  async onItemClick(e) {\n    \n  }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}