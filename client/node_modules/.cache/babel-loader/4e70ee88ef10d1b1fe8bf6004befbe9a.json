{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport Callbacks from \"../../core/utils/callbacks\";\nimport { isDefined, isString, isObject } from \"../../core/utils/type\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { getBoundingRect } from \"../../core/utils/position\";\nimport { addNamespace, eventData as getEventData, isTouchEvent } from \"../../events/utils/index\";\nimport pointerEvents from \"../../events/pointer\";\nimport { start as dragEventStart, move as dragEventMove, end as dragEventEnd } from \"../../events/drag\";\nimport modules from \"./ui.grid_core.modules\";\nimport gridCoreUtils from \"./ui.grid_core.utils\";\nimport fx from \"../../animation/fx\";\nimport swatchContainer from \"../widget/swatch_container\";\nvar COLUMNS_SEPARATOR_CLASS = \"columns-separator\";\nvar COLUMNS_SEPARATOR_TRANSPARENT = \"columns-separator-transparent\";\nvar DRAGGING_HEADER_CLASS = \"drag-header\";\nvar CELL_CONTENT_CLASS = \"text-content\";\nvar HEADERS_DRAG_ACTION_CLASS = \"drag-action\";\nvar TRACKER_CLASS = \"tracker\";\nvar HEADERS_DROP_HIGHLIGHT_CLASS = \"drop-highlight\";\nvar BLOCK_SEPARATOR_CLASS = \"dx-block-separator\";\nvar HEADER_ROW_CLASS = \"dx-header-row\";\nvar WIDGET_CLASS = \"dx-widget\";\nvar DRAGGING_COMMAND_CELL_CLASS = \"dx-drag-command-cell\";\nvar MODULE_NAMESPACE = \"dxDataGridResizingReordering\";\nvar COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH = 10;\nvar DRAGGING_DELTA = 5;\nvar COLUMN_OPACITY = .5;\n\nvar allowResizing = function (that) {\n  return that.option(\"allowColumnResizing\") || that.getController(\"columns\").isColumnOptionUsed(\"allowResizing\");\n};\n\nvar allowReordering = function (that) {\n  return that.option(\"allowColumnReordering\") || that.getController(\"columns\").isColumnOptionUsed(\"allowReordering\");\n};\n\nvar TrackerView = modules.View.inherit({\n  _renderCore: function () {\n    this.callBase();\n    this.element().addClass(this.addWidgetPrefix(TRACKER_CLASS));\n    this.hide();\n  },\n  _unsubscribeFromCallback: function () {\n    if (this._positionChanged) {\n      this._tablePositionController.positionChanged.remove(this._positionChanged);\n    }\n  },\n  _subscribeToCallback: function () {\n    var that = this;\n\n    that._positionChanged = function (position) {\n      var $element = that.element();\n\n      if ($element && $element.hasClass(that.addWidgetPrefix(TRACKER_CLASS))) {\n        $element.css({\n          top: position.top\n        });\n        $element.height(position.height);\n      }\n    };\n\n    this._tablePositionController.positionChanged.add(that._positionChanged);\n  },\n  optionChanged: function (args) {\n    if (\"allowColumnResizing\" === args.name) {\n      this._unsubscribeFromCallback();\n\n      if (args.value) {\n        this._subscribeToCallback();\n\n        this._invalidate();\n      }\n    }\n\n    this.callBase(args);\n  },\n  init: function () {\n    this.callBase();\n    this._tablePositionController = this.getController(\"tablePosition\");\n\n    this._subscribeToCallback();\n  },\n  isVisible: function () {\n    return allowResizing(this);\n  },\n  show: function () {\n    this.element().show();\n  },\n  hide: function () {\n    this.element() && this.element().hide();\n  },\n  setHeight: function (value) {\n    this.element().height(value);\n  },\n  dispose: function () {\n    this._unsubscribeFromCallback();\n\n    this.callBase();\n  }\n});\nvar SeparatorView = modules.View.inherit({\n  _renderSeparator: function () {},\n  _renderCore: function (options) {\n    this.callBase(options);\n    this._isShown = true;\n\n    this._renderSeparator();\n\n    this.hide();\n  },\n  show: function () {\n    this._isShown = true;\n  },\n  hide: function () {\n    this._isShown = false;\n  },\n  height: function (value) {\n    var $element = this.element();\n\n    if ($element) {\n      if (isDefined(value)) {\n        $element.height(value);\n      } else {\n        return $element.height();\n      }\n    }\n  },\n  width: function (value) {\n    var $element = this.element();\n\n    if ($element) {\n      if (isDefined(value)) {\n        $element.width(value);\n      } else {\n        return $element.width();\n      }\n    }\n  }\n});\nvar ColumnsSeparatorView = SeparatorView.inherit({\n  _renderSeparator: function () {\n    this.callBase();\n    var $element = this.element();\n    $element.addClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_CLASS));\n  },\n  _subscribeToCallback: function () {\n    var that = this;\n    var $element;\n\n    that._positionChanged = function (position) {\n      $element = that.element();\n\n      if ($element) {\n        $element.css({\n          top: position.top\n        });\n        $element.height(position.height);\n      }\n    };\n\n    that._tablePositionController.positionChanged.add(that._positionChanged);\n  },\n  _unsubscribeFromCallback: function () {\n    this._positionChanged && this._tablePositionController.positionChanged.remove(this._positionChanged);\n  },\n  _init: function () {\n    this._isTransparent = allowResizing(this);\n\n    if (this.isVisible()) {\n      this._subscribeToCallback();\n    }\n  },\n  isVisible: function () {\n    return this.option(\"showColumnHeaders\") && (allowReordering(this) || allowResizing(this));\n  },\n  optionChanged: function (args) {\n    if (\"allowColumnResizing\" === args.name) {\n      if (args.value) {\n        this._init();\n\n        this._invalidate();\n\n        this.hide(true);\n      } else {\n        this._unsubscribeFromCallback();\n\n        this._isTransparent = allowResizing(this);\n        this.hide(true);\n      }\n    }\n\n    this.callBase(args);\n  },\n  init: function () {\n    this.callBase();\n    this._tablePositionController = this.getController(\"tablePosition\");\n\n    this._init();\n  },\n  show: function () {\n    var $element = this.element();\n\n    if ($element && !this._isShown) {\n      if (this._isTransparent) {\n        $element.removeClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT));\n      } else {\n        $element.show();\n      }\n    }\n\n    this.callBase();\n  },\n  hide: function (force) {\n    var $element = this.element();\n    var columnsSeparatorTransparent = this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT);\n\n    if ($element && (this._isShown || force)) {\n      if (this._isTransparent) {\n        $element.addClass(columnsSeparatorTransparent);\n        $element.css(\"left\", \"\");\n        $element.show();\n      } else {\n        if ($element.hasClass(columnsSeparatorTransparent)) {\n          $element.removeClass(columnsSeparatorTransparent);\n        }\n\n        $element.hide();\n      }\n    }\n\n    this.callBase();\n  },\n  moveByX: function (outerX) {\n    var $element = this.element();\n\n    if ($element) {\n      $element.css(\"left\", outerX - this._parentElement().offset().left);\n    }\n  },\n  changeCursor: function (cursorName) {\n    cursorName = isDefined(cursorName) ? cursorName : \"\";\n    var $element = this.element();\n\n    if ($element) {\n      $element.css(\"cursor\", cursorName);\n    }\n  },\n  dispose: function () {\n    this._unsubscribeFromCallback();\n\n    this.callBase();\n  }\n});\nvar BlockSeparatorView = SeparatorView.inherit({\n  init: function () {\n    var that = this;\n    this.callBase();\n    this.getController(\"data\").loadingChanged.add(function (isLoading) {\n      if (!isLoading) {\n        that.hide();\n      }\n    });\n  },\n  _renderSeparator: function () {\n    this.callBase();\n    this.element().addClass(BLOCK_SEPARATOR_CLASS).html(\"&nbsp;\");\n  },\n  hide: function () {\n    var $parent = this._parentElement();\n\n    var $element = this.element();\n\n    if ($element && this._isShown) {\n      $element.css(\"display\", \"none\");\n    }\n\n    if ($parent && !$parent.children(\".\" + BLOCK_SEPARATOR_CLASS).length) {\n      $parent.prepend(this.element());\n    }\n\n    this.callBase();\n  },\n  isVisible: function () {\n    var groupPanelOptions = this.option(\"groupPanel\");\n    var columnChooserOptions = this.option(\"columnChooser\");\n    return groupPanelOptions && groupPanelOptions.visible || columnChooserOptions && columnChooserOptions.enabled;\n  },\n  show: function (targetLocation) {\n    var $element = this.element();\n\n    var startAnimate = function (toOptions) {\n      fx.stop($element, true);\n      fx.animate($element, {\n        type: \"slide\",\n        from: {\n          width: 0,\n          display: toOptions.display\n        },\n        to: toOptions,\n        duration: 300,\n        easing: \"swing\"\n      });\n    };\n\n    if ($element && !this._isShown) {\n      switch (targetLocation) {\n        case \"group\":\n          startAnimate({\n            width: \"50px\",\n            display: \"inline-block\"\n          });\n          break;\n\n        case \"columnChooser\":\n          startAnimate({\n            width: \"100%\",\n            display: \"block\"\n          });\n          break;\n\n        default:\n          $element.css(\"display\", \"\");\n      }\n    }\n\n    this.callBase();\n  }\n});\nvar DraggingHeaderView = modules.View.inherit({\n  _isDragging: false,\n  isDragging: function () {\n    return this._isDragging;\n  },\n  _getDraggingPanelByPos: function (pos) {\n    var result;\n    each(this._dragOptions.draggingPanels, function (index, draggingPanel) {\n      if (draggingPanel) {\n        var boundingRect = draggingPanel.getBoundingRect();\n\n        if (boundingRect && (void 0 === boundingRect.bottom || pos.y < boundingRect.bottom) && (void 0 === boundingRect.top || pos.y > boundingRect.top) && (void 0 === boundingRect.left || pos.x > boundingRect.left) && (void 0 === boundingRect.right || pos.x < boundingRect.right)) {\n          result = draggingPanel;\n          return false;\n        }\n      }\n    });\n    return result;\n  },\n  _renderCore: function () {\n    this.element().addClass(this.addWidgetPrefix(DRAGGING_HEADER_CLASS) + \" \" + this.addWidgetPrefix(CELL_CONTENT_CLASS) + \" \" + WIDGET_CLASS).hide();\n  },\n  _resetTargetColumnOptions: function () {\n    var params = this._dropOptions;\n    params.targetColumnIndex = -1;\n    delete params.targetColumnElement;\n    delete params.isLast;\n    delete params.posX;\n    delete params.posY;\n  },\n  _getVisibleIndexObject: function (rowIndex, visibleIndex) {\n    if (isDefined(rowIndex)) {\n      return {\n        columnIndex: visibleIndex,\n        rowIndex: rowIndex\n      };\n    }\n\n    return visibleIndex;\n  },\n  dispose: function () {\n    var element = this.element();\n    this._dragOptions = null;\n    element && element.parent().find(\".\" + this.addWidgetPrefix(DRAGGING_HEADER_CLASS)).remove();\n  },\n  isVisible: function () {\n    var columnsController = this.getController(\"columns\");\n    var commonColumnSettings = columnsController.getCommonSettings();\n    return this.option(\"showColumnHeaders\") && (allowReordering(this) || commonColumnSettings.allowGrouping || commonColumnSettings.allowHiding);\n  },\n  init: function () {\n    var that = this;\n    this.callBase();\n    this._controller = this.getController(\"draggingHeader\");\n    this._columnsResizerViewController = this.getController(\"columnsResizer\");\n    this.getController(\"data\").loadingChanged.add(function (isLoading) {\n      var element = that.element();\n\n      if (!isLoading && element) {\n        element.hide();\n      }\n    });\n  },\n  dragHeader: function (options) {\n    var columnElement = options.columnElement;\n    var isCommandColumn = !!options.sourceColumn.type;\n    this._isDragging = true;\n    this._dragOptions = options;\n    this._dropOptions = {\n      sourceIndex: options.index,\n      sourceColumnIndex: this._getVisibleIndexObject(options.rowIndex, options.columnIndex),\n      sourceColumnElement: options.columnElement,\n      sourceLocation: options.sourceLocation\n    };\n    var document = domAdapter.getDocument();\n    this._onSelectStart = document.onselectstart;\n\n    document.onselectstart = function () {\n      return false;\n    };\n\n    this._controller.drag(this._dropOptions);\n\n    this.element().css({\n      textAlign: columnElement && columnElement.css(\"textAlign\"),\n      height: columnElement && (isCommandColumn && columnElement.get(0).clientHeight || columnElement.height()),\n      width: columnElement && (isCommandColumn && columnElement.get(0).clientWidth || columnElement.width()),\n      whiteSpace: columnElement && columnElement.css(\"whiteSpace\")\n    }).addClass(this.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS)).toggleClass(DRAGGING_COMMAND_CELL_CLASS, isCommandColumn).text(isCommandColumn ? \"\" : options.sourceColumn.caption);\n    this.element().appendTo(swatchContainer.getSwatchContainer(columnElement));\n  },\n  moveHeader: function (args) {\n    var e = args.event;\n    var that = e.data.that;\n    var eventData = getEventData(e);\n    var isResizing = that._columnsResizerViewController ? that._columnsResizerViewController.isResizing() : false;\n    var dragOptions = that._dragOptions;\n\n    if (that._isDragging && !isResizing) {\n      var $element = that.element();\n      var moveDeltaX = Math.abs(eventData.x - dragOptions.columnElement.offset().left - dragOptions.deltaX);\n      var moveDeltaY = Math.abs(eventData.y - dragOptions.columnElement.offset().top - dragOptions.deltaY);\n\n      if ($element.is(\":visible\") || moveDeltaX > DRAGGING_DELTA || moveDeltaY > DRAGGING_DELTA) {\n        $element.show();\n        var newLeft = eventData.x - dragOptions.deltaX;\n        var newTop = eventData.y - dragOptions.deltaY;\n        $element.css({\n          left: newLeft,\n          top: newTop\n        });\n        that.dockHeader(eventData);\n      }\n\n      e.preventDefault();\n    }\n  },\n  dockHeader: function (eventData) {\n    var targetDraggingPanel = this._getDraggingPanelByPos(eventData);\n\n    var controller = this._controller;\n    var params = this._dropOptions;\n    var dragOptions = this._dragOptions;\n\n    if (targetDraggingPanel) {\n      var rtlEnabled = this.option(\"rtlEnabled\");\n      var isVerticalOrientation = \"columnChooser\" === targetDraggingPanel.getName();\n      var axisName = isVerticalOrientation ? \"y\" : \"x\";\n      var targetLocation = targetDraggingPanel.getName();\n      var rowIndex = \"headers\" === targetLocation ? dragOptions.rowIndex : void 0;\n      var sourceColumn = dragOptions.sourceColumn;\n      var columnElements = targetDraggingPanel.getColumnElements(rowIndex, null === sourceColumn || void 0 === sourceColumn ? void 0 : sourceColumn.ownerBand) || [];\n      var pointsByTarget = dragOptions.pointsByTarget = dragOptions.pointsByTarget || {};\n      var pointsByColumns = \"columnChooser\" === targetLocation ? [] : pointsByTarget[targetLocation] || controller._generatePointsByColumns(extend({}, dragOptions, {\n        targetDraggingPanel: targetDraggingPanel,\n        columns: targetDraggingPanel.getColumns(rowIndex),\n        columnElements: columnElements,\n        isVerticalOrientation: isVerticalOrientation,\n        startColumnIndex: \"headers\" === targetLocation && $(columnElements[0]).index()\n      }));\n      pointsByTarget[targetLocation] = pointsByColumns;\n      params.targetLocation = targetLocation;\n\n      if (pointsByColumns.length > 0) {\n        for (var i = 0; i < pointsByColumns.length; i++) {\n          var centerPosition = pointsByColumns[i + 1] && (pointsByColumns[i][axisName] + pointsByColumns[i + 1][axisName]) / 2;\n\n          if (void 0 === centerPosition || (rtlEnabled && \"x\" === axisName ? eventData[axisName] > centerPosition : eventData[axisName] < centerPosition)) {\n            params.targetColumnIndex = this._getVisibleIndexObject(rowIndex, pointsByColumns[i].columnIndex);\n\n            if (columnElements[i]) {\n              params.targetColumnElement = columnElements.eq(i);\n              params.isLast = false;\n            } else {\n              params.targetColumnElement = columnElements.last();\n              params.isLast = true;\n            }\n\n            params.posX = pointsByColumns[i].x;\n            params.posY = pointsByColumns[i].y;\n            controller.dock(params);\n            break;\n          }\n        }\n      } else {\n        this._resetTargetColumnOptions();\n\n        controller.dock(params);\n      }\n    }\n  },\n  dropHeader: function (args) {\n    var e = args.event;\n    var that = e.data.that;\n    var controller = that._controller;\n    that.element().hide();\n\n    if (controller && that._isDragging) {\n      controller.drop(that._dropOptions);\n    }\n\n    that.element().appendTo(that._parentElement());\n    that._dragOptions = null;\n    that._dropOptions = null;\n    that._isDragging = false;\n    domAdapter.getDocument().onselectstart = that._onSelectStart || null;\n  }\n});\n\nvar isNextColumnResizingMode = function (that) {\n  return \"widget\" !== that.option(\"columnResizingMode\");\n};\n\nvar ColumnsResizerViewController = modules.ViewController.inherit({\n  _isHeadersRowArea: function (posY) {\n    if (this._columnHeadersView) {\n      var element = this._columnHeadersView.element();\n\n      if (element) {\n        var offsetTop = element.offset().top;\n\n        var headersRowHeight = this._columnHeadersView.getHeadersRowHeight();\n\n        return posY >= offsetTop && posY <= offsetTop + headersRowHeight;\n      }\n    }\n\n    return false;\n  },\n  _isRtlParentStyle: function () {\n    var _this$_$parentContain;\n\n    return this.option(\"rtlEnabled\") && \"rtl\" === (null === (_this$_$parentContain = this._$parentContainer) || void 0 === _this$_$parentContain ? void 0 : _this$_$parentContain.parent().css(\"direction\"));\n  },\n  _pointCreated: function (point, cellsLength, columns) {\n    var isNextColumnMode = isNextColumnResizingMode(this);\n    var rtlEnabled = this.option(\"rtlEnabled\");\n\n    var isRtlParentStyle = this._isRtlParentStyle();\n\n    var firstPointColumnIndex = !isNextColumnMode && rtlEnabled && !isRtlParentStyle ? 0 : 1;\n\n    if (point.index >= firstPointColumnIndex && point.index < cellsLength + (!isNextColumnMode && (!rtlEnabled || isRtlParentStyle) ? 1 : 0)) {\n      point.columnIndex -= firstPointColumnIndex;\n      var currentColumn = columns[point.columnIndex] || {};\n      var nextColumn = columns[point.columnIndex + 1] || {};\n      return !(isNextColumnMode ? currentColumn.allowResizing && nextColumn.allowResizing : currentColumn.allowResizing);\n    }\n\n    return true;\n  },\n  _getTargetPoint: function (pointsByColumns, currentX, deltaX) {\n    if (pointsByColumns) {\n      for (var i = 0; i < pointsByColumns.length; i++) {\n        if (pointsByColumns[i].x === pointsByColumns[0].x && pointsByColumns[i + 1] && pointsByColumns[i].x === pointsByColumns[i + 1].x) {\n          continue;\n        }\n\n        if (pointsByColumns[i].x - deltaX <= currentX && currentX <= pointsByColumns[i].x + deltaX) {\n          return pointsByColumns[i];\n        }\n      }\n    }\n\n    return null;\n  },\n  _moveSeparator: function (args) {\n    var e = args.event;\n    var that = e.data;\n\n    var columnsSeparatorWidth = that._columnsSeparatorView.width();\n\n    var isNextColumnMode = isNextColumnResizingMode(that);\n    var deltaX = columnsSeparatorWidth / 2;\n\n    var parentOffset = that._$parentContainer.offset();\n\n    var parentOffsetLeft = parentOffset.left;\n    var eventData = getEventData(e);\n    var rtlEnabled = that.option(\"rtlEnabled\");\n\n    var isRtlParentStyle = this._isRtlParentStyle();\n\n    if (that._isResizing && that._resizingInfo) {\n      if ((parentOffsetLeft <= eventData.x || !isNextColumnMode && isRtlParentStyle) && (!isNextColumnMode || eventData.x <= parentOffsetLeft + that._$parentContainer.width())) {\n        if (that._updateColumnsWidthIfNeeded(eventData.x)) {\n          var $cell = that._columnHeadersView.getColumnElements().eq(that._resizingInfo.currentColumnIndex);\n\n          var cell = $cell[0];\n\n          if (cell) {\n            var outerWidth = cell.getBoundingClientRect().width;\n\n            that._columnsSeparatorView.moveByX($cell.offset().left + ((isNextColumnMode || isRtlParentStyle) && rtlEnabled ? 0 : outerWidth));\n\n            that._tablePositionController.update(that._targetPoint.y);\n\n            e.preventDefault();\n          }\n        }\n      }\n    } else if (that._isHeadersRowArea(eventData.y)) {\n      if (that._previousParentOffset) {\n        if (that._previousParentOffset.left !== parentOffset.left || that._previousParentOffset.top !== parentOffset.top) {\n          that.pointsByColumns(null);\n        }\n      }\n\n      that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, columnsSeparatorWidth);\n      that._previousParentOffset = parentOffset;\n      that._isReadyResizing = false;\n\n      if (that._targetPoint) {\n        that._columnsSeparatorView.changeCursor(\"col-resize\");\n\n        that._columnsSeparatorView.moveByX(that._targetPoint.x - deltaX);\n\n        that._tablePositionController.update(that._targetPoint.y);\n\n        that._isReadyResizing = true;\n        e.preventDefault();\n      } else {\n        that._columnsSeparatorView.changeCursor();\n      }\n    } else {\n      that.pointsByColumns(null);\n      that._isReadyResizing = false;\n\n      that._columnsSeparatorView.changeCursor();\n    }\n  },\n  _endResizing: function (args) {\n    var e = args.event;\n    var that = e.data;\n\n    if (that._isResizing) {\n      that.pointsByColumns(null);\n      that._resizingInfo = null;\n\n      that._columnsSeparatorView.hide();\n\n      that._columnsSeparatorView.changeCursor();\n\n      that._trackerView.hide();\n\n      that._isReadyResizing = false;\n      that._isResizing = false;\n    }\n  },\n  _getNextColumnIndex: function (currentColumnIndex) {\n    return currentColumnIndex + 1;\n  },\n  _setupResizingInfo: function (posX) {\n    var currentColumnIndex = this._targetPoint.columnIndex;\n\n    var nextColumnIndex = this._getNextColumnIndex(currentColumnIndex);\n\n    var currentHeader = this._columnHeadersView.getHeaderElement(currentColumnIndex);\n\n    var nextHeader = this._columnHeadersView.getHeaderElement(nextColumnIndex);\n\n    this._resizingInfo = {\n      startPosX: posX,\n      currentColumnIndex: currentColumnIndex,\n      currentColumnWidth: currentHeader && currentHeader.length > 0 ? getBoundingRect(currentHeader[0]).width : 0,\n      nextColumnIndex: nextColumnIndex,\n      nextColumnWidth: nextHeader && nextHeader.length > 0 ? getBoundingRect(nextHeader[0]).width : 0\n    };\n  },\n  _startResizing: function (args) {\n    var e = args.event;\n    var that = e.data;\n    var eventData = getEventData(e);\n\n    if (isTouchEvent(e)) {\n      if (that._isHeadersRowArea(eventData.y)) {\n        that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH);\n\n        if (that._targetPoint) {\n          that._columnsSeparatorView.moveByX(that._targetPoint.x - that._columnsSeparatorView.width() / 2);\n\n          that._isReadyResizing = true;\n        }\n      } else {\n        that._isReadyResizing = false;\n      }\n    }\n\n    if (that._isReadyResizing) {\n      that._setupResizingInfo(eventData.x);\n\n      that._isResizing = true;\n\n      that._tablePositionController.update(that._targetPoint.y);\n\n      that._columnsSeparatorView.show();\n\n      that._trackerView.show();\n\n      var scrollable = that.component.getScrollable();\n\n      if (scrollable && that._isRtlParentStyle()) {\n        that._scrollRight = scrollable.$content().width() - scrollable._container().width() - scrollable.scrollLeft();\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    if (this.isResizing()) {\n      this.getController(\"editorFactory\").loseFocus();\n    }\n  },\n  _generatePointsByColumns: function () {\n    var that = this;\n    var columns = that._columnsController ? that._columnsController.getVisibleColumns() : [];\n\n    var cells = that._columnHeadersView.getColumnElements();\n\n    var pointsByColumns = [];\n\n    if (cells && cells.length > 0) {\n      pointsByColumns = gridCoreUtils.getPointsByColumns(cells, function (point) {\n        return that._pointCreated(point, cells.length, columns);\n      });\n    }\n\n    that._pointsByColumns = pointsByColumns;\n  },\n  _unsubscribeFromEvents: function () {\n    this._moveSeparatorHandler && eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this._moveSeparatorHandler);\n    this._startResizingHandler && eventsEngine.off(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this._startResizingHandler);\n\n    if (this._endResizingHandler) {\n      eventsEngine.off(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler);\n      eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler);\n    }\n  },\n  _subscribeToEvents: function () {\n    this._moveSeparatorHandler = this.createAction(this._moveSeparator);\n    this._startResizingHandler = this.createAction(this._startResizing);\n    this._endResizingHandler = this.createAction(this._endResizing);\n    eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this, this._moveSeparatorHandler);\n    eventsEngine.on(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this, this._startResizingHandler);\n    eventsEngine.on(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler);\n    eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler);\n  },\n  _updateColumnsWidthIfNeeded: function (posX) {\n    var deltaX;\n    var needUpdate = false;\n    var nextCellWidth;\n    var resizingInfo = this._resizingInfo;\n    var columnsController = this._columnsController;\n    var visibleColumns = columnsController.getVisibleColumns();\n\n    var columnsSeparatorWidth = this._columnsSeparatorView.width();\n\n    var contentWidth = this._rowsView.contentWidth();\n\n    var isNextColumnMode = isNextColumnResizingMode(this);\n    var adaptColumnWidthByRatio = isNextColumnMode && this.option(\"adaptColumnWidthByRatio\") && !this.option(\"columnAutoWidth\");\n    var minWidth;\n    var nextColumn;\n    var cellWidth;\n    var rtlEnabled = this.option(\"rtlEnabled\");\n\n    var isRtlParentStyle = this._isRtlParentStyle();\n\n    function isPercentWidth(width) {\n      return isString(width) && \"%\" === width.slice(-1);\n    }\n\n    function setColumnWidth(column, columnWidth, contentWidth, adaptColumnWidthByRatio) {\n      if (column) {\n        var oldColumnWidth = column.width;\n\n        if (oldColumnWidth) {\n          adaptColumnWidthByRatio = isPercentWidth(oldColumnWidth);\n        }\n\n        if (adaptColumnWidthByRatio) {\n          columnsController.columnOption(column.index, \"visibleWidth\", columnWidth);\n          columnsController.columnOption(column.index, \"width\", (columnWidth / contentWidth * 100).toFixed(3) + \"%\");\n        } else {\n          columnsController.columnOption(column.index, \"visibleWidth\", null);\n          columnsController.columnOption(column.index, \"width\", columnWidth);\n        }\n      }\n    }\n\n    deltaX = posX - resizingInfo.startPosX;\n\n    if ((isNextColumnMode || isRtlParentStyle) && rtlEnabled) {\n      deltaX = -deltaX;\n    }\n\n    cellWidth = resizingInfo.currentColumnWidth + deltaX;\n    var column = visibleColumns[resizingInfo.currentColumnIndex];\n    minWidth = column && column.minWidth || columnsSeparatorWidth;\n    needUpdate = cellWidth >= minWidth;\n\n    if (isNextColumnMode) {\n      nextCellWidth = resizingInfo.nextColumnWidth - deltaX;\n      nextColumn = visibleColumns[resizingInfo.nextColumnIndex];\n      minWidth = nextColumn && nextColumn.minWidth || columnsSeparatorWidth;\n      needUpdate = needUpdate && nextCellWidth >= minWidth;\n    }\n\n    if (needUpdate) {\n      columnsController.beginUpdate();\n      cellWidth = Math.floor(cellWidth);\n\n      contentWidth = function (contentWidth, visibleColumns) {\n        var allColumnsHaveWidth = visibleColumns.every(column => column.width);\n\n        if (allColumnsHaveWidth) {\n          var totalPercent = visibleColumns.reduce((sum, column) => {\n            if (isPercentWidth(column.width)) {\n              sum += parseFloat(column.width);\n            }\n\n            return sum;\n          }, 0);\n\n          if (totalPercent > 100) {\n            contentWidth = contentWidth / totalPercent * 100;\n          }\n        }\n\n        return contentWidth;\n      }(contentWidth, visibleColumns);\n\n      setColumnWidth(column, cellWidth, contentWidth, adaptColumnWidthByRatio);\n\n      if (isNextColumnMode) {\n        nextCellWidth = Math.floor(nextCellWidth);\n        setColumnWidth(nextColumn, nextCellWidth, contentWidth, adaptColumnWidthByRatio);\n      } else {\n        var columnWidths = this._columnHeadersView.getColumnWidths();\n\n        columnWidths[resizingInfo.currentColumnIndex] = cellWidth;\n\n        var hasScroll = columnWidths.reduce((totalWidth, width) => totalWidth + width, 0) > this._rowsView.contentWidth();\n\n        if (!hasScroll) {\n          var lastColumnIndex = gridCoreUtils.getLastResizableColumnIndex(visibleColumns);\n\n          if (lastColumnIndex >= 0) {\n            columnsController.columnOption(visibleColumns[lastColumnIndex].index, \"visibleWidth\", \"auto\");\n          }\n        }\n\n        for (var i = 0; i < columnWidths.length; i++) {\n          if (visibleColumns[i] && visibleColumns[i] !== column && void 0 === visibleColumns[i].width) {\n            columnsController.columnOption(visibleColumns[i].index, \"width\", columnWidths[i]);\n          }\n        }\n      }\n\n      columnsController.endUpdate();\n\n      if (!isNextColumnMode) {\n        this.component.updateDimensions();\n        var scrollable = this.component.getScrollable();\n\n        if (scrollable && isRtlParentStyle) {\n          var left = scrollable.$content().width() - scrollable._container().width() - this._scrollRight;\n\n          scrollable.scrollTo({\n            left: left\n          });\n        }\n      }\n    }\n\n    return needUpdate;\n  },\n  _subscribeToCallback: function (callback, handler) {\n    callback.add(handler);\n\n    this._subscribesToCallbacks.push({\n      callback: callback,\n      handler: handler\n    });\n  },\n  _unsubscribeFromCallbacks: function () {\n    for (var i = 0; i < this._subscribesToCallbacks.length; i++) {\n      var subscribe = this._subscribesToCallbacks[i];\n      subscribe.callback.remove(subscribe.handler);\n    }\n\n    this._subscribesToCallbacks = [];\n  },\n  _unsubscribes: function () {\n    this._unsubscribeFromEvents();\n\n    this._unsubscribeFromCallbacks();\n  },\n  _init: function () {\n    var that = this;\n\n    var generatePointsByColumnsHandler = function () {\n      if (!that._isResizing) {\n        that.pointsByColumns(null);\n      }\n    };\n\n    var generatePointsByColumnsScrollHandler = function (offset) {\n      if (that._scrollLeft !== offset.left) {\n        that._scrollLeft = offset.left;\n        that.pointsByColumns(null);\n      }\n    };\n\n    that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\n    that._columnHeadersView = that.getView(\"columnHeadersView\");\n    that._trackerView = that.getView(\"trackerView\");\n    that._rowsView = that.getView(\"rowsView\");\n    that._columnsController = that.getController(\"columns\");\n    that._tablePositionController = that.getController(\"tablePosition\");\n    that._$parentContainer = that.component.$element();\n\n    that._subscribeToCallback(that._columnHeadersView.renderCompleted, generatePointsByColumnsHandler);\n\n    that._subscribeToCallback(that._columnHeadersView.resizeCompleted, generatePointsByColumnsHandler);\n\n    that._subscribeToCallback(that._columnsSeparatorView.renderCompleted, function () {\n      that._unsubscribeFromEvents();\n\n      that._subscribeToEvents();\n    });\n\n    that._subscribeToCallback(that._rowsView.renderCompleted, function () {\n      that._rowsView.scrollChanged.remove(generatePointsByColumnsScrollHandler);\n\n      that._rowsView.scrollChanged.add(generatePointsByColumnsScrollHandler);\n    });\n\n    var previousScrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\n\n    var previousTableHeight = 0;\n\n    that._subscribeToCallback(that.getController(\"tablePosition\").positionChanged, function (e) {\n      if (that._isResizing && !that._rowsView.isResizing) {\n        var scrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\n\n        if (previousScrollbarVisibility !== scrollbarVisibility || previousTableHeight && previousTableHeight !== e.height) {\n          previousScrollbarVisibility = scrollbarVisibility;\n          previousTableHeight = e.height;\n          that.component.updateDimensions();\n        } else {\n          that._rowsView.updateFreeSpaceRowHeight();\n        }\n      }\n\n      previousTableHeight = e.height;\n    });\n  },\n  optionChanged: function (args) {\n    this.callBase(args);\n\n    if (\"allowColumnResizing\" === args.name) {\n      if (args.value) {\n        this._init();\n\n        this._subscribeToEvents();\n      } else {\n        this._unsubscribes();\n      }\n    }\n  },\n  isResizing: function () {\n    return this._isResizing;\n  },\n  init: function () {\n    this._subscribesToCallbacks = [];\n\n    if (allowResizing(this)) {\n      this._init();\n    }\n  },\n  pointsByColumns: function (value) {\n    if (void 0 !== value) {\n      this._pointsByColumns = value;\n    } else {\n      if (!this._pointsByColumns) {\n        this._generatePointsByColumns();\n      }\n\n      return this._pointsByColumns;\n    }\n  },\n  dispose: function () {\n    this._unsubscribes();\n\n    this.callBase();\n  }\n});\nvar TablePositionViewController = modules.ViewController.inherit({\n  update: function (top) {\n    var params = {};\n\n    var $element = this._columnHeadersView.element();\n\n    var offset = $element && $element.offset();\n    var offsetTop = offset && offset.top || 0;\n    var diffOffsetTop = isDefined(top) ? Math.abs(top - offsetTop) : 0;\n    var columnsHeadersHeight = this._columnHeadersView ? this._columnHeadersView.getHeight() : 0;\n\n    var scrollBarWidth = this._rowsView.getScrollbarWidth(true);\n\n    var rowsHeight = this._rowsView ? this._rowsView.height() - scrollBarWidth : 0;\n    var columnsResizerController = this.component.getController(\"columnsResizer\");\n    var draggingHeaderView = this.component.getView(\"draggingHeaderView\");\n    params.height = columnsHeadersHeight;\n    var isDraggingOrResizing = false !== columnsResizerController.isResizing() || draggingHeaderView.isDragging();\n\n    if (isDraggingOrResizing) {\n      params.height += rowsHeight - diffOffsetTop;\n    }\n\n    if (null !== top && $element && $element.length) {\n      params.top = $element[0].offsetTop + diffOffsetTop;\n    }\n\n    this.positionChanged.fire(params);\n  },\n  init: function () {\n    var that = this;\n    that.callBase();\n    that._columnHeadersView = this.getView(\"columnHeadersView\");\n    that._rowsView = this.getView(\"rowsView\");\n    that._pagerView = this.getView(\"pagerView\");\n\n    that._rowsView.resizeCompleted.add(function () {\n      if (that.option(\"allowColumnResizing\")) {\n        var targetPoint = that.getController(\"columnsResizer\")._targetPoint;\n\n        that.update(targetPoint ? targetPoint.y : null);\n      }\n    });\n  },\n  ctor: function (component) {\n    this.callBase(component);\n    this.positionChanged = Callbacks();\n  }\n});\nvar DraggingHeaderViewController = modules.ViewController.inherit({\n  _generatePointsByColumns: function (options) {\n    var that = this;\n    return gridCoreUtils.getPointsByColumns(options.columnElements, function (point) {\n      return that._pointCreated(point, options.columns, options.targetDraggingPanel.getName(), options.sourceColumn);\n    }, options.isVerticalOrientation, options.startColumnIndex);\n  },\n  _pointCreated: function (point, columns, location, sourceColumn) {\n    var targetColumn = columns[point.columnIndex];\n    var prevColumn = columns[point.columnIndex - 1];\n\n    switch (location) {\n      case \"columnChooser\":\n        return true;\n\n      case \"headers\":\n        return sourceColumn && !sourceColumn.allowReordering || (!targetColumn || !targetColumn.allowReordering) && (!prevColumn || !prevColumn.allowReordering);\n\n      default:\n        return 0 === columns.length;\n    }\n  },\n  _subscribeToEvents: function (draggingHeader, draggingPanels) {\n    var that = this;\n    each(draggingPanels, function (_, draggingPanel) {\n      if (draggingPanel) {\n        var columns;\n        var rowCount = draggingPanel.getRowCount ? draggingPanel.getRowCount() : 1;\n        var nameDraggingPanel = draggingPanel.getName();\n\n        var subscribeToEvents = function (index, columnElement) {\n          if (!columnElement) {\n            return;\n          }\n\n          var $columnElement = $(columnElement);\n          var column = columns[index];\n\n          if (draggingPanel.allowDragging(column, nameDraggingPanel, draggingPanels)) {\n            $columnElement.addClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\n            eventsEngine.on($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE), that.createAction(function (args) {\n              var e = args.event;\n              var eventData = getEventData(e);\n              draggingHeader.dragHeader({\n                deltaX: eventData.x - $(e.currentTarget).offset().left,\n                deltaY: eventData.y - $(e.currentTarget).offset().top,\n                sourceColumn: column,\n                index: column.index,\n                columnIndex: index,\n                columnElement: $columnElement,\n                sourceLocation: nameDraggingPanel,\n                draggingPanels: draggingPanels,\n                rowIndex: that._columnsController.getRowIndex(column.index, true)\n              });\n            }));\n            eventsEngine.on($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE), {\n              that: draggingHeader\n            }, that.createAction(draggingHeader.moveHeader));\n            eventsEngine.on($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE), {\n              that: draggingHeader\n            }, that.createAction(draggingHeader.dropHeader));\n          }\n        };\n\n        for (var i = 0; i < rowCount; i++) {\n          var columnElements = draggingPanel.getColumnElements(i) || [];\n\n          if (columnElements.length) {\n            columns = draggingPanel.getColumns(i) || [];\n            each(columnElements, subscribeToEvents);\n          }\n        }\n      }\n    });\n  },\n  _unsubscribeFromEvents: function (draggingHeader, draggingPanels) {\n    var that = this;\n    each(draggingPanels, function (_, draggingPanel) {\n      if (draggingPanel) {\n        var columnElements = draggingPanel.getColumnElements() || [];\n        each(columnElements, function (index, columnElement) {\n          var $columnElement = $(columnElement);\n          eventsEngine.off($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE));\n          eventsEngine.off($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE));\n          eventsEngine.off($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE));\n          $columnElement.removeClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\n        });\n      }\n    });\n  },\n  _getSeparator: function (targetLocation) {\n    return \"headers\" === targetLocation ? this._columnsSeparatorView : this._blockSeparatorView;\n  },\n  hideSeparators: function (type) {\n    var blockSeparator = this._blockSeparatorView;\n    var columnsSeparator = this._columnsSeparatorView;\n    this._animationColumnIndex = null;\n    blockSeparator && blockSeparator.hide();\n    \"block\" !== type && columnsSeparator && columnsSeparator.hide();\n  },\n  init: function () {\n    var that = this;\n    that.callBase();\n    that._columnsController = that.getController(\"columns\");\n    that._columnHeadersView = that.getView(\"columnHeadersView\");\n    that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\n    that._draggingHeaderView = that.getView(\"draggingHeaderView\");\n    that._rowsView = that.getView(\"rowsView\");\n    that._blockSeparatorView = that.getView(\"blockSeparatorView\");\n    that._headerPanelView = that.getView(\"headerPanel\");\n    that._columnChooserView = that.getView(\"columnChooserView\");\n\n    var subscribeToEvents = function () {\n      if (that._draggingHeaderView) {\n        var draggingPanels = [that._columnChooserView, that._columnHeadersView, that._headerPanelView];\n\n        that._unsubscribeFromEvents(that._draggingHeaderView, draggingPanels);\n\n        that._subscribeToEvents(that._draggingHeaderView, draggingPanels);\n      }\n    };\n\n    that._columnHeadersView.renderCompleted.add(subscribeToEvents);\n\n    that._headerPanelView && that._headerPanelView.renderCompleted.add(subscribeToEvents);\n    that._columnChooserView && that._columnChooserView.renderCompleted.add(subscribeToEvents);\n  },\n  allowDrop: function (parameters) {\n    return this._columnsController.allowMoveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation);\n  },\n  drag: function (parameters) {\n    var sourceIndex = parameters.sourceIndex;\n    var sourceLocation = parameters.sourceLocation;\n    var sourceColumnElement = parameters.sourceColumnElement;\n    var headersView = this._columnHeadersView;\n    var rowsView = this._rowsView;\n\n    if (sourceColumnElement) {\n      sourceColumnElement.css({\n        opacity: COLUMN_OPACITY\n      });\n\n      if (\"headers\" === sourceLocation) {\n        headersView && headersView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\n        rowsView && rowsView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\n      }\n    }\n  },\n  dock: function (parameters) {\n    var that = this;\n    var targetColumnIndex = isObject(parameters.targetColumnIndex) ? parameters.targetColumnIndex.columnIndex : parameters.targetColumnIndex;\n    var sourceLocation = parameters.sourceLocation;\n    var targetLocation = parameters.targetLocation;\n\n    var separator = that._getSeparator(targetLocation);\n\n    var hasTargetVisibleIndex = targetColumnIndex >= 0;\n\n    that._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).toggleClass(that.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS), \"headers\" !== sourceLocation && \"headers\" === targetLocation && !hasTargetVisibleIndex);\n\n    if (separator) {\n      if (that.allowDrop(parameters) && hasTargetVisibleIndex) {\n        if (\"group\" === targetLocation || \"columnChooser\" === targetLocation) {\n          !function () {\n            if (that._animationColumnIndex !== targetColumnIndex) {\n              that.hideSeparators();\n              separator.element()[parameters.isLast ? \"insertAfter\" : \"insertBefore\"](parameters.targetColumnElement);\n              that._animationColumnIndex = targetColumnIndex;\n              separator.show(targetLocation);\n            }\n          }();\n        } else {\n          that.hideSeparators(\"block\");\n          that.getController(\"tablePosition\").update(parameters.posY);\n          separator.moveByX(parameters.posX - separator.width());\n          separator.show();\n        }\n      } else {\n        that.hideSeparators();\n      }\n    }\n  },\n  drop: function (parameters) {\n    var sourceColumnElement = parameters.sourceColumnElement;\n\n    if (sourceColumnElement) {\n      sourceColumnElement.css({\n        opacity: \"\"\n      });\n\n      this._columnHeadersView.setRowsOpacity(parameters.sourceIndex, \"\");\n\n      this._rowsView.setRowsOpacity(parameters.sourceIndex, \"\");\n\n      this._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).removeClass(this.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS));\n    }\n\n    if (this.allowDrop(parameters)) {\n      var separator = this._getSeparator(parameters.targetLocation);\n\n      if (separator) {\n        separator.hide();\n      }\n\n      this._columnsController.moveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation);\n    }\n  },\n  dispose: function () {\n    if (this._draggingHeaderView) {\n      this._unsubscribeFromEvents(this._draggingHeaderView, [this._columnChooserView, this._columnHeadersView, this._headerPanelView]);\n    }\n  }\n});\nexport var columnsResizingReorderingModule = {\n  views: {\n    columnsSeparatorView: ColumnsSeparatorView,\n    blockSeparatorView: BlockSeparatorView,\n    draggingHeaderView: DraggingHeaderView,\n    trackerView: TrackerView\n  },\n  controllers: {\n    draggingHeader: DraggingHeaderViewController,\n    tablePosition: TablePositionViewController,\n    columnsResizer: ColumnsResizerViewController\n  },\n  extenders: {\n    views: {\n      rowsView: {\n        _needUpdateRowHeight: function (itemCount) {\n          var wordWrapEnabled = this.option(\"wordWrapEnabled\");\n          var columnsResizerController = this.getController(\"columnsResizer\");\n          var isResizing = columnsResizerController.isResizing();\n          return this.callBase.apply(this, arguments) || itemCount > 0 && wordWrapEnabled && isResizing;\n        }\n      }\n    },\n    controllers: {\n      editorFactory: {\n        renderFocusOverlay: function () {\n          if (this.getController(\"columnsResizer\").isResizing()) {\n            return;\n          }\n\n          return this.callBase.apply(this, arguments);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js"],"names":["$","domAdapter","eventsEngine","Callbacks","isDefined","isString","isObject","each","extend","getBoundingRect","addNamespace","eventData","getEventData","isTouchEvent","pointerEvents","start","dragEventStart","move","dragEventMove","end","dragEventEnd","modules","gridCoreUtils","fx","swatchContainer","COLUMNS_SEPARATOR_CLASS","COLUMNS_SEPARATOR_TRANSPARENT","DRAGGING_HEADER_CLASS","CELL_CONTENT_CLASS","HEADERS_DRAG_ACTION_CLASS","TRACKER_CLASS","HEADERS_DROP_HIGHLIGHT_CLASS","BLOCK_SEPARATOR_CLASS","HEADER_ROW_CLASS","WIDGET_CLASS","DRAGGING_COMMAND_CELL_CLASS","MODULE_NAMESPACE","COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH","DRAGGING_DELTA","COLUMN_OPACITY","allowResizing","that","option","getController","isColumnOptionUsed","allowReordering","TrackerView","View","inherit","_renderCore","callBase","element","addClass","addWidgetPrefix","hide","_unsubscribeFromCallback","_positionChanged","_tablePositionController","positionChanged","remove","_subscribeToCallback","position","$element","hasClass","css","top","height","add","optionChanged","args","name","value","_invalidate","init","isVisible","show","setHeight","dispose","SeparatorView","_renderSeparator","options","_isShown","width","ColumnsSeparatorView","_init","_isTransparent","removeClass","force","columnsSeparatorTransparent","moveByX","outerX","_parentElement","offset","left","changeCursor","cursorName","BlockSeparatorView","loadingChanged","isLoading","html","$parent","children","length","prepend","groupPanelOptions","columnChooserOptions","visible","enabled","targetLocation","startAnimate","toOptions","stop","animate","type","from","display","to","duration","easing","DraggingHeaderView","_isDragging","isDragging","_getDraggingPanelByPos","pos","result","_dragOptions","draggingPanels","index","draggingPanel","boundingRect","bottom","y","x","right","_resetTargetColumnOptions","params","_dropOptions","targetColumnIndex","targetColumnElement","isLast","posX","posY","_getVisibleIndexObject","rowIndex","visibleIndex","columnIndex","parent","find","columnsController","commonColumnSettings","getCommonSettings","allowGrouping","allowHiding","_controller","_columnsResizerViewController","dragHeader","columnElement","isCommandColumn","sourceColumn","sourceIndex","sourceColumnIndex","sourceColumnElement","sourceLocation","document","getDocument","_onSelectStart","onselectstart","drag","textAlign","get","clientHeight","clientWidth","whiteSpace","toggleClass","text","caption","appendTo","getSwatchContainer","moveHeader","e","event","data","isResizing","dragOptions","moveDeltaX","Math","abs","deltaX","moveDeltaY","deltaY","is","newLeft","newTop","dockHeader","preventDefault","targetDraggingPanel","controller","rtlEnabled","isVerticalOrientation","getName","axisName","columnElements","getColumnElements","ownerBand","pointsByTarget","pointsByColumns","_generatePointsByColumns","columns","getColumns","startColumnIndex","i","centerPosition","eq","last","dock","dropHeader","drop","isNextColumnResizingMode","ColumnsResizerViewController","ViewController","_isHeadersRowArea","_columnHeadersView","offsetTop","headersRowHeight","getHeadersRowHeight","_isRtlParentStyle","_this$_$parentContain","_$parentContainer","_pointCreated","point","cellsLength","isNextColumnMode","isRtlParentStyle","firstPointColumnIndex","currentColumn","nextColumn","_getTargetPoint","currentX","_moveSeparator","columnsSeparatorWidth","_columnsSeparatorView","parentOffset","parentOffsetLeft","_isResizing","_resizingInfo","_updateColumnsWidthIfNeeded","$cell","currentColumnIndex","cell","outerWidth","getBoundingClientRect","update","_targetPoint","_previousParentOffset","_isReadyResizing","_endResizing","_trackerView","_getNextColumnIndex","_setupResizingInfo","nextColumnIndex","currentHeader","getHeaderElement","nextHeader","startPosX","currentColumnWidth","nextColumnWidth","_startResizing","scrollable","component","getScrollable","_scrollRight","$content","_container","scrollLeft","stopPropagation","loseFocus","_columnsController","getVisibleColumns","cells","getPointsByColumns","_pointsByColumns","_unsubscribeFromEvents","_moveSeparatorHandler","off","_startResizingHandler","down","_endResizingHandler","up","_subscribeToEvents","createAction","on","needUpdate","nextCellWidth","resizingInfo","visibleColumns","contentWidth","_rowsView","adaptColumnWidthByRatio","minWidth","cellWidth","isPercentWidth","slice","setColumnWidth","column","columnWidth","oldColumnWidth","columnOption","toFixed","beginUpdate","floor","allColumnsHaveWidth","every","totalPercent","reduce","sum","parseFloat","columnWidths","getColumnWidths","hasScroll","totalWidth","lastColumnIndex","getLastResizableColumnIndex","endUpdate","updateDimensions","scrollTo","callback","handler","_subscribesToCallbacks","push","_unsubscribeFromCallbacks","subscribe","_unsubscribes","generatePointsByColumnsHandler","generatePointsByColumnsScrollHandler","_scrollLeft","getView","renderCompleted","resizeCompleted","scrollChanged","previousScrollbarVisibility","getScrollbarWidth","previousTableHeight","scrollbarVisibility","updateFreeSpaceRowHeight","TablePositionViewController","diffOffsetTop","columnsHeadersHeight","getHeight","scrollBarWidth","rowsHeight","columnsResizerController","draggingHeaderView","isDraggingOrResizing","fire","_pagerView","targetPoint","ctor","DraggingHeaderViewController","location","targetColumn","prevColumn","draggingHeader","_","rowCount","getRowCount","nameDraggingPanel","subscribeToEvents","$columnElement","allowDragging","currentTarget","getRowIndex","_getSeparator","_blockSeparatorView","hideSeparators","blockSeparator","columnsSeparator","_animationColumnIndex","_draggingHeaderView","_headerPanelView","_columnChooserView","allowDrop","parameters","allowMoveColumn","headersView","rowsView","opacity","setRowsOpacity","separator","hasTargetVisibleIndex","moveColumn","columnsResizingReorderingModule","views","columnsSeparatorView","blockSeparatorView","trackerView","controllers","tablePosition","columnsResizer","extenders","_needUpdateRowHeight","itemCount","wordWrapEnabled","apply","arguments","editorFactory","renderFocusOverlay"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    addNamespace,\r\n    eventData as getEventData,\r\n    isTouchEvent\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    start as dragEventStart,\r\n    move as dragEventMove,\r\n    end as dragEventEnd\r\n} from \"../../events/drag\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport fx from \"../../animation/fx\";\r\nimport swatchContainer from \"../widget/swatch_container\";\r\nvar COLUMNS_SEPARATOR_CLASS = \"columns-separator\";\r\nvar COLUMNS_SEPARATOR_TRANSPARENT = \"columns-separator-transparent\";\r\nvar DRAGGING_HEADER_CLASS = \"drag-header\";\r\nvar CELL_CONTENT_CLASS = \"text-content\";\r\nvar HEADERS_DRAG_ACTION_CLASS = \"drag-action\";\r\nvar TRACKER_CLASS = \"tracker\";\r\nvar HEADERS_DROP_HIGHLIGHT_CLASS = \"drop-highlight\";\r\nvar BLOCK_SEPARATOR_CLASS = \"dx-block-separator\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar DRAGGING_COMMAND_CELL_CLASS = \"dx-drag-command-cell\";\r\nvar MODULE_NAMESPACE = \"dxDataGridResizingReordering\";\r\nvar COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH = 10;\r\nvar DRAGGING_DELTA = 5;\r\nvar COLUMN_OPACITY = .5;\r\nvar allowResizing = function(that) {\r\n    return that.option(\"allowColumnResizing\") || that.getController(\"columns\").isColumnOptionUsed(\"allowResizing\")\r\n};\r\nvar allowReordering = function(that) {\r\n    return that.option(\"allowColumnReordering\") || that.getController(\"columns\").isColumnOptionUsed(\"allowReordering\")\r\n};\r\nvar TrackerView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        this.callBase();\r\n        this.element().addClass(this.addWidgetPrefix(TRACKER_CLASS));\r\n        this.hide()\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        if (this._positionChanged) {\r\n            this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n        }\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        that._positionChanged = function(position) {\r\n            var $element = that.element();\r\n            if ($element && $element.hasClass(that.addWidgetPrefix(TRACKER_CLASS))) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                $element.height(position.height)\r\n            }\r\n        };\r\n        this._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            this._unsubscribeFromCallback();\r\n            if (args.value) {\r\n                this._subscribeToCallback();\r\n                this._invalidate()\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._subscribeToCallback()\r\n    },\r\n    isVisible: function() {\r\n        return allowResizing(this)\r\n    },\r\n    show: function() {\r\n        this.element().show()\r\n    },\r\n    hide: function() {\r\n        this.element() && this.element().hide()\r\n    },\r\n    setHeight: function(value) {\r\n        this.element().height(value)\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar SeparatorView = modules.View.inherit({\r\n    _renderSeparator: function() {},\r\n    _renderCore: function(options) {\r\n        this.callBase(options);\r\n        this._isShown = true;\r\n        this._renderSeparator();\r\n        this.hide()\r\n    },\r\n    show: function() {\r\n        this._isShown = true\r\n    },\r\n    hide: function() {\r\n        this._isShown = false\r\n    },\r\n    height: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (isDefined(value)) {\r\n                $element.height(value)\r\n            } else {\r\n                return $element.height()\r\n            }\r\n        }\r\n    },\r\n    width: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (isDefined(value)) {\r\n                $element.width(value)\r\n            } else {\r\n                return $element.width()\r\n            }\r\n        }\r\n    }\r\n});\r\nvar ColumnsSeparatorView = SeparatorView.inherit({\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        var $element = this.element();\r\n        $element.addClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_CLASS))\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        var $element;\r\n        that._positionChanged = function(position) {\r\n            $element = that.element();\r\n            if ($element) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                $element.height(position.height)\r\n            }\r\n        };\r\n        that._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        this._positionChanged && this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n    },\r\n    _init: function() {\r\n        this._isTransparent = allowResizing(this);\r\n        if (this.isVisible()) {\r\n            this._subscribeToCallback()\r\n        }\r\n    },\r\n    isVisible: function() {\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || allowResizing(this))\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._invalidate();\r\n                this.hide(true)\r\n            } else {\r\n                this._unsubscribeFromCallback();\r\n                this._isTransparent = allowResizing(this);\r\n                this.hide(true)\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._init()\r\n    },\r\n    show: function() {\r\n        var $element = this.element();\r\n        if ($element && !this._isShown) {\r\n            if (this._isTransparent) {\r\n                $element.removeClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT))\r\n            } else {\r\n                $element.show()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    hide: function(force) {\r\n        var $element = this.element();\r\n        var columnsSeparatorTransparent = this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT);\r\n        if ($element && (this._isShown || force)) {\r\n            if (this._isTransparent) {\r\n                $element.addClass(columnsSeparatorTransparent);\r\n                $element.css(\"left\", \"\");\r\n                $element.show()\r\n            } else {\r\n                if ($element.hasClass(columnsSeparatorTransparent)) {\r\n                    $element.removeClass(columnsSeparatorTransparent)\r\n                }\r\n                $element.hide()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    moveByX: function(outerX) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"left\", outerX - this._parentElement().offset().left)\r\n        }\r\n    },\r\n    changeCursor: function(cursorName) {\r\n        cursorName = isDefined(cursorName) ? cursorName : \"\";\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"cursor\", cursorName)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar BlockSeparatorView = SeparatorView.inherit({\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this.getController(\"data\").loadingChanged.add((function(isLoading) {\r\n            if (!isLoading) {\r\n                that.hide()\r\n            }\r\n        }))\r\n    },\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        this.element().addClass(BLOCK_SEPARATOR_CLASS).html(\"&nbsp;\")\r\n    },\r\n    hide: function() {\r\n        var $parent = this._parentElement();\r\n        var $element = this.element();\r\n        if ($element && this._isShown) {\r\n            $element.css(\"display\", \"none\")\r\n        }\r\n        if ($parent && !$parent.children(\".\" + BLOCK_SEPARATOR_CLASS).length) {\r\n            $parent.prepend(this.element())\r\n        }\r\n        this.callBase()\r\n    },\r\n    isVisible: function() {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        var columnChooserOptions = this.option(\"columnChooser\");\r\n        return groupPanelOptions && groupPanelOptions.visible || columnChooserOptions && columnChooserOptions.enabled\r\n    },\r\n    show: function(targetLocation) {\r\n        var $element = this.element();\r\n        var startAnimate = function(toOptions) {\r\n            fx.stop($element, true);\r\n            fx.animate($element, {\r\n                type: \"slide\",\r\n                from: {\r\n                    width: 0,\r\n                    display: toOptions.display\r\n                },\r\n                to: toOptions,\r\n                duration: 300,\r\n                easing: \"swing\"\r\n            })\r\n        };\r\n        if ($element && !this._isShown) {\r\n            switch (targetLocation) {\r\n                case \"group\":\r\n                    startAnimate({\r\n                        width: \"50px\",\r\n                        display: \"inline-block\"\r\n                    });\r\n                    break;\r\n                case \"columnChooser\":\r\n                    startAnimate({\r\n                        width: \"100%\",\r\n                        display: \"block\"\r\n                    });\r\n                    break;\r\n                default:\r\n                    $element.css(\"display\", \"\")\r\n            }\r\n        }\r\n        this.callBase()\r\n    }\r\n});\r\nvar DraggingHeaderView = modules.View.inherit({\r\n    _isDragging: false,\r\n    isDragging: function() {\r\n        return this._isDragging\r\n    },\r\n    _getDraggingPanelByPos: function(pos) {\r\n        var result;\r\n        each(this._dragOptions.draggingPanels, (function(index, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var boundingRect = draggingPanel.getBoundingRect();\r\n                if (boundingRect && (void 0 === boundingRect.bottom || pos.y < boundingRect.bottom) && (void 0 === boundingRect.top || pos.y > boundingRect.top) && (void 0 === boundingRect.left || pos.x > boundingRect.left) && (void 0 === boundingRect.right || pos.x < boundingRect.right)) {\r\n                    result = draggingPanel;\r\n                    return false\r\n                }\r\n            }\r\n        }));\r\n        return result\r\n    },\r\n    _renderCore: function() {\r\n        this.element().addClass(this.addWidgetPrefix(DRAGGING_HEADER_CLASS) + \" \" + this.addWidgetPrefix(CELL_CONTENT_CLASS) + \" \" + WIDGET_CLASS).hide()\r\n    },\r\n    _resetTargetColumnOptions: function() {\r\n        var params = this._dropOptions;\r\n        params.targetColumnIndex = -1;\r\n        delete params.targetColumnElement;\r\n        delete params.isLast;\r\n        delete params.posX;\r\n        delete params.posY\r\n    },\r\n    _getVisibleIndexObject: function(rowIndex, visibleIndex) {\r\n        if (isDefined(rowIndex)) {\r\n            return {\r\n                columnIndex: visibleIndex,\r\n                rowIndex: rowIndex\r\n            }\r\n        }\r\n        return visibleIndex\r\n    },\r\n    dispose: function() {\r\n        var element = this.element();\r\n        this._dragOptions = null;\r\n        element && element.parent().find(\".\" + this.addWidgetPrefix(DRAGGING_HEADER_CLASS)).remove()\r\n    },\r\n    isVisible: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var commonColumnSettings = columnsController.getCommonSettings();\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || commonColumnSettings.allowGrouping || commonColumnSettings.allowHiding)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this._controller = this.getController(\"draggingHeader\");\r\n        this._columnsResizerViewController = this.getController(\"columnsResizer\");\r\n        this.getController(\"data\").loadingChanged.add((function(isLoading) {\r\n            var element = that.element();\r\n            if (!isLoading && element) {\r\n                element.hide()\r\n            }\r\n        }))\r\n    },\r\n    dragHeader: function(options) {\r\n        var columnElement = options.columnElement;\r\n        var isCommandColumn = !!options.sourceColumn.type;\r\n        this._isDragging = true;\r\n        this._dragOptions = options;\r\n        this._dropOptions = {\r\n            sourceIndex: options.index,\r\n            sourceColumnIndex: this._getVisibleIndexObject(options.rowIndex, options.columnIndex),\r\n            sourceColumnElement: options.columnElement,\r\n            sourceLocation: options.sourceLocation\r\n        };\r\n        var document = domAdapter.getDocument();\r\n        this._onSelectStart = document.onselectstart;\r\n        document.onselectstart = function() {\r\n            return false\r\n        };\r\n        this._controller.drag(this._dropOptions);\r\n        this.element().css({\r\n            textAlign: columnElement && columnElement.css(\"textAlign\"),\r\n            height: columnElement && (isCommandColumn && columnElement.get(0).clientHeight || columnElement.height()),\r\n            width: columnElement && (isCommandColumn && columnElement.get(0).clientWidth || columnElement.width()),\r\n            whiteSpace: columnElement && columnElement.css(\"whiteSpace\")\r\n        }).addClass(this.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS)).toggleClass(DRAGGING_COMMAND_CELL_CLASS, isCommandColumn).text(isCommandColumn ? \"\" : options.sourceColumn.caption);\r\n        this.element().appendTo(swatchContainer.getSwatchContainer(columnElement))\r\n    },\r\n    moveHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var eventData = getEventData(e);\r\n        var isResizing = that._columnsResizerViewController ? that._columnsResizerViewController.isResizing() : false;\r\n        var dragOptions = that._dragOptions;\r\n        if (that._isDragging && !isResizing) {\r\n            var $element = that.element();\r\n            var moveDeltaX = Math.abs(eventData.x - dragOptions.columnElement.offset().left - dragOptions.deltaX);\r\n            var moveDeltaY = Math.abs(eventData.y - dragOptions.columnElement.offset().top - dragOptions.deltaY);\r\n            if ($element.is(\":visible\") || moveDeltaX > DRAGGING_DELTA || moveDeltaY > DRAGGING_DELTA) {\r\n                $element.show();\r\n                var newLeft = eventData.x - dragOptions.deltaX;\r\n                var newTop = eventData.y - dragOptions.deltaY;\r\n                $element.css({\r\n                    left: newLeft,\r\n                    top: newTop\r\n                });\r\n                that.dockHeader(eventData)\r\n            }\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    dockHeader: function(eventData) {\r\n        var targetDraggingPanel = this._getDraggingPanelByPos(eventData);\r\n        var controller = this._controller;\r\n        var params = this._dropOptions;\r\n        var dragOptions = this._dragOptions;\r\n        if (targetDraggingPanel) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            var isVerticalOrientation = \"columnChooser\" === targetDraggingPanel.getName();\r\n            var axisName = isVerticalOrientation ? \"y\" : \"x\";\r\n            var targetLocation = targetDraggingPanel.getName();\r\n            var rowIndex = \"headers\" === targetLocation ? dragOptions.rowIndex : void 0;\r\n            var sourceColumn = dragOptions.sourceColumn;\r\n            var columnElements = targetDraggingPanel.getColumnElements(rowIndex, null === sourceColumn || void 0 === sourceColumn ? void 0 : sourceColumn.ownerBand) || [];\r\n            var pointsByTarget = dragOptions.pointsByTarget = dragOptions.pointsByTarget || {};\r\n            var pointsByColumns = \"columnChooser\" === targetLocation ? [] : pointsByTarget[targetLocation] || controller._generatePointsByColumns(extend({}, dragOptions, {\r\n                targetDraggingPanel: targetDraggingPanel,\r\n                columns: targetDraggingPanel.getColumns(rowIndex),\r\n                columnElements: columnElements,\r\n                isVerticalOrientation: isVerticalOrientation,\r\n                startColumnIndex: \"headers\" === targetLocation && $(columnElements[0]).index()\r\n            }));\r\n            pointsByTarget[targetLocation] = pointsByColumns;\r\n            params.targetLocation = targetLocation;\r\n            if (pointsByColumns.length > 0) {\r\n                for (var i = 0; i < pointsByColumns.length; i++) {\r\n                    var centerPosition = pointsByColumns[i + 1] && (pointsByColumns[i][axisName] + pointsByColumns[i + 1][axisName]) / 2;\r\n                    if (void 0 === centerPosition || (rtlEnabled && \"x\" === axisName ? eventData[axisName] > centerPosition : eventData[axisName] < centerPosition)) {\r\n                        params.targetColumnIndex = this._getVisibleIndexObject(rowIndex, pointsByColumns[i].columnIndex);\r\n                        if (columnElements[i]) {\r\n                            params.targetColumnElement = columnElements.eq(i);\r\n                            params.isLast = false\r\n                        } else {\r\n                            params.targetColumnElement = columnElements.last();\r\n                            params.isLast = true\r\n                        }\r\n                        params.posX = pointsByColumns[i].x;\r\n                        params.posY = pointsByColumns[i].y;\r\n                        controller.dock(params);\r\n                        break\r\n                    }\r\n                }\r\n            } else {\r\n                this._resetTargetColumnOptions();\r\n                controller.dock(params)\r\n            }\r\n        }\r\n    },\r\n    dropHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var controller = that._controller;\r\n        that.element().hide();\r\n        if (controller && that._isDragging) {\r\n            controller.drop(that._dropOptions)\r\n        }\r\n        that.element().appendTo(that._parentElement());\r\n        that._dragOptions = null;\r\n        that._dropOptions = null;\r\n        that._isDragging = false;\r\n        domAdapter.getDocument().onselectstart = that._onSelectStart || null\r\n    }\r\n});\r\nvar isNextColumnResizingMode = function(that) {\r\n    return \"widget\" !== that.option(\"columnResizingMode\")\r\n};\r\nvar ColumnsResizerViewController = modules.ViewController.inherit({\r\n    _isHeadersRowArea: function(posY) {\r\n        if (this._columnHeadersView) {\r\n            var element = this._columnHeadersView.element();\r\n            if (element) {\r\n                var offsetTop = element.offset().top;\r\n                var headersRowHeight = this._columnHeadersView.getHeadersRowHeight();\r\n                return posY >= offsetTop && posY <= offsetTop + headersRowHeight\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _isRtlParentStyle: function() {\r\n        var _this$_$parentContain;\r\n        return this.option(\"rtlEnabled\") && \"rtl\" === (null === (_this$_$parentContain = this._$parentContainer) || void 0 === _this$_$parentContain ? void 0 : _this$_$parentContain.parent().css(\"direction\"))\r\n    },\r\n    _pointCreated: function(point, cellsLength, columns) {\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var firstPointColumnIndex = !isNextColumnMode && rtlEnabled && !isRtlParentStyle ? 0 : 1;\r\n        if (point.index >= firstPointColumnIndex && point.index < cellsLength + (!isNextColumnMode && (!rtlEnabled || isRtlParentStyle) ? 1 : 0)) {\r\n            point.columnIndex -= firstPointColumnIndex;\r\n            var currentColumn = columns[point.columnIndex] || {};\r\n            var nextColumn = columns[point.columnIndex + 1] || {};\r\n            return !(isNextColumnMode ? currentColumn.allowResizing && nextColumn.allowResizing : currentColumn.allowResizing)\r\n        }\r\n        return true\r\n    },\r\n    _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n        if (pointsByColumns) {\r\n            for (var i = 0; i < pointsByColumns.length; i++) {\r\n                if (pointsByColumns[i].x === pointsByColumns[0].x && pointsByColumns[i + 1] && pointsByColumns[i].x === pointsByColumns[i + 1].x) {\r\n                    continue\r\n                }\r\n                if (pointsByColumns[i].x - deltaX <= currentX && currentX <= pointsByColumns[i].x + deltaX) {\r\n                    return pointsByColumns[i]\r\n                }\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    _moveSeparator: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var columnsSeparatorWidth = that._columnsSeparatorView.width();\r\n        var isNextColumnMode = isNextColumnResizingMode(that);\r\n        var deltaX = columnsSeparatorWidth / 2;\r\n        var parentOffset = that._$parentContainer.offset();\r\n        var parentOffsetLeft = parentOffset.left;\r\n        var eventData = getEventData(e);\r\n        var rtlEnabled = that.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        if (that._isResizing && that._resizingInfo) {\r\n            if ((parentOffsetLeft <= eventData.x || !isNextColumnMode && isRtlParentStyle) && (!isNextColumnMode || eventData.x <= parentOffsetLeft + that._$parentContainer.width())) {\r\n                if (that._updateColumnsWidthIfNeeded(eventData.x)) {\r\n                    var $cell = that._columnHeadersView.getColumnElements().eq(that._resizingInfo.currentColumnIndex);\r\n                    var cell = $cell[0];\r\n                    if (cell) {\r\n                        var outerWidth = cell.getBoundingClientRect().width;\r\n                        that._columnsSeparatorView.moveByX($cell.offset().left + ((isNextColumnMode || isRtlParentStyle) && rtlEnabled ? 0 : outerWidth));\r\n                        that._tablePositionController.update(that._targetPoint.y);\r\n                        e.preventDefault()\r\n                    }\r\n                }\r\n            }\r\n        } else if (that._isHeadersRowArea(eventData.y)) {\r\n            if (that._previousParentOffset) {\r\n                if (that._previousParentOffset.left !== parentOffset.left || that._previousParentOffset.top !== parentOffset.top) {\r\n                    that.pointsByColumns(null)\r\n                }\r\n            }\r\n            that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, columnsSeparatorWidth);\r\n            that._previousParentOffset = parentOffset;\r\n            that._isReadyResizing = false;\r\n            if (that._targetPoint) {\r\n                that._columnsSeparatorView.changeCursor(\"col-resize\");\r\n                that._columnsSeparatorView.moveByX(that._targetPoint.x - deltaX);\r\n                that._tablePositionController.update(that._targetPoint.y);\r\n                that._isReadyResizing = true;\r\n                e.preventDefault()\r\n            } else {\r\n                that._columnsSeparatorView.changeCursor()\r\n            }\r\n        } else {\r\n            that.pointsByColumns(null);\r\n            that._isReadyResizing = false;\r\n            that._columnsSeparatorView.changeCursor()\r\n        }\r\n    },\r\n    _endResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        if (that._isResizing) {\r\n            that.pointsByColumns(null);\r\n            that._resizingInfo = null;\r\n            that._columnsSeparatorView.hide();\r\n            that._columnsSeparatorView.changeCursor();\r\n            that._trackerView.hide();\r\n            that._isReadyResizing = false;\r\n            that._isResizing = false\r\n        }\r\n    },\r\n    _getNextColumnIndex: function(currentColumnIndex) {\r\n        return currentColumnIndex + 1\r\n    },\r\n    _setupResizingInfo: function(posX) {\r\n        var currentColumnIndex = this._targetPoint.columnIndex;\r\n        var nextColumnIndex = this._getNextColumnIndex(currentColumnIndex);\r\n        var currentHeader = this._columnHeadersView.getHeaderElement(currentColumnIndex);\r\n        var nextHeader = this._columnHeadersView.getHeaderElement(nextColumnIndex);\r\n        this._resizingInfo = {\r\n            startPosX: posX,\r\n            currentColumnIndex: currentColumnIndex,\r\n            currentColumnWidth: currentHeader && currentHeader.length > 0 ? getBoundingRect(currentHeader[0]).width : 0,\r\n            nextColumnIndex: nextColumnIndex,\r\n            nextColumnWidth: nextHeader && nextHeader.length > 0 ? getBoundingRect(nextHeader[0]).width : 0\r\n        }\r\n    },\r\n    _startResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var eventData = getEventData(e);\r\n        if (isTouchEvent(e)) {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH);\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - that._columnsSeparatorView.width() / 2);\r\n                    that._isReadyResizing = true\r\n                }\r\n            } else {\r\n                that._isReadyResizing = false\r\n            }\r\n        }\r\n        if (that._isReadyResizing) {\r\n            that._setupResizingInfo(eventData.x);\r\n            that._isResizing = true;\r\n            that._tablePositionController.update(that._targetPoint.y);\r\n            that._columnsSeparatorView.show();\r\n            that._trackerView.show();\r\n            var scrollable = that.component.getScrollable();\r\n            if (scrollable && that._isRtlParentStyle()) {\r\n                that._scrollRight = scrollable.$content().width() - scrollable._container().width() - scrollable.scrollLeft()\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation()\r\n        }\r\n        if (this.isResizing()) {\r\n            this.getController(\"editorFactory\").loseFocus()\r\n        }\r\n    },\r\n    _generatePointsByColumns: function() {\r\n        var that = this;\r\n        var columns = that._columnsController ? that._columnsController.getVisibleColumns() : [];\r\n        var cells = that._columnHeadersView.getColumnElements();\r\n        var pointsByColumns = [];\r\n        if (cells && cells.length > 0) {\r\n            pointsByColumns = gridCoreUtils.getPointsByColumns(cells, (function(point) {\r\n                return that._pointCreated(point, cells.length, columns)\r\n            }))\r\n        }\r\n        that._pointsByColumns = pointsByColumns\r\n    },\r\n    _unsubscribeFromEvents: function() {\r\n        this._moveSeparatorHandler && eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this._moveSeparatorHandler);\r\n        this._startResizingHandler && eventsEngine.off(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this._startResizingHandler);\r\n        if (this._endResizingHandler) {\r\n            eventsEngine.off(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler)\r\n        }\r\n    },\r\n    _subscribeToEvents: function() {\r\n        this._moveSeparatorHandler = this.createAction(this._moveSeparator);\r\n        this._startResizingHandler = this.createAction(this._startResizing);\r\n        this._endResizingHandler = this.createAction(this._endResizing);\r\n        eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this, this._moveSeparatorHandler);\r\n        eventsEngine.on(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this, this._startResizingHandler);\r\n        eventsEngine.on(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler);\r\n        eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler)\r\n    },\r\n    _updateColumnsWidthIfNeeded: function(posX) {\r\n        var deltaX;\r\n        var needUpdate = false;\r\n        var nextCellWidth;\r\n        var resizingInfo = this._resizingInfo;\r\n        var columnsController = this._columnsController;\r\n        var visibleColumns = columnsController.getVisibleColumns();\r\n        var columnsSeparatorWidth = this._columnsSeparatorView.width();\r\n        var contentWidth = this._rowsView.contentWidth();\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var adaptColumnWidthByRatio = isNextColumnMode && this.option(\"adaptColumnWidthByRatio\") && !this.option(\"columnAutoWidth\");\r\n        var minWidth;\r\n        var nextColumn;\r\n        var cellWidth;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n\r\n        function isPercentWidth(width) {\r\n            return isString(width) && \"%\" === width.slice(-1)\r\n        }\r\n\r\n        function setColumnWidth(column, columnWidth, contentWidth, adaptColumnWidthByRatio) {\r\n            if (column) {\r\n                var oldColumnWidth = column.width;\r\n                if (oldColumnWidth) {\r\n                    adaptColumnWidthByRatio = isPercentWidth(oldColumnWidth)\r\n                }\r\n                if (adaptColumnWidthByRatio) {\r\n                    columnsController.columnOption(column.index, \"visibleWidth\", columnWidth);\r\n                    columnsController.columnOption(column.index, \"width\", (columnWidth / contentWidth * 100).toFixed(3) + \"%\")\r\n                } else {\r\n                    columnsController.columnOption(column.index, \"visibleWidth\", null);\r\n                    columnsController.columnOption(column.index, \"width\", columnWidth)\r\n                }\r\n            }\r\n        }\r\n        deltaX = posX - resizingInfo.startPosX;\r\n        if ((isNextColumnMode || isRtlParentStyle) && rtlEnabled) {\r\n            deltaX = -deltaX\r\n        }\r\n        cellWidth = resizingInfo.currentColumnWidth + deltaX;\r\n        var column = visibleColumns[resizingInfo.currentColumnIndex];\r\n        minWidth = column && column.minWidth || columnsSeparatorWidth;\r\n        needUpdate = cellWidth >= minWidth;\r\n        if (isNextColumnMode) {\r\n            nextCellWidth = resizingInfo.nextColumnWidth - deltaX;\r\n            nextColumn = visibleColumns[resizingInfo.nextColumnIndex];\r\n            minWidth = nextColumn && nextColumn.minWidth || columnsSeparatorWidth;\r\n            needUpdate = needUpdate && nextCellWidth >= minWidth\r\n        }\r\n        if (needUpdate) {\r\n            columnsController.beginUpdate();\r\n            cellWidth = Math.floor(cellWidth);\r\n            contentWidth = function(contentWidth, visibleColumns) {\r\n                var allColumnsHaveWidth = visibleColumns.every(column => column.width);\r\n                if (allColumnsHaveWidth) {\r\n                    var totalPercent = visibleColumns.reduce((sum, column) => {\r\n                        if (isPercentWidth(column.width)) {\r\n                            sum += parseFloat(column.width)\r\n                        }\r\n                        return sum\r\n                    }, 0);\r\n                    if (totalPercent > 100) {\r\n                        contentWidth = contentWidth / totalPercent * 100\r\n                    }\r\n                }\r\n                return contentWidth\r\n            }(contentWidth, visibleColumns);\r\n            setColumnWidth(column, cellWidth, contentWidth, adaptColumnWidthByRatio);\r\n            if (isNextColumnMode) {\r\n                nextCellWidth = Math.floor(nextCellWidth);\r\n                setColumnWidth(nextColumn, nextCellWidth, contentWidth, adaptColumnWidthByRatio)\r\n            } else {\r\n                var columnWidths = this._columnHeadersView.getColumnWidths();\r\n                columnWidths[resizingInfo.currentColumnIndex] = cellWidth;\r\n                var hasScroll = columnWidths.reduce((totalWidth, width) => totalWidth + width, 0) > this._rowsView.contentWidth();\r\n                if (!hasScroll) {\r\n                    var lastColumnIndex = gridCoreUtils.getLastResizableColumnIndex(visibleColumns);\r\n                    if (lastColumnIndex >= 0) {\r\n                        columnsController.columnOption(visibleColumns[lastColumnIndex].index, \"visibleWidth\", \"auto\")\r\n                    }\r\n                }\r\n                for (var i = 0; i < columnWidths.length; i++) {\r\n                    if (visibleColumns[i] && visibleColumns[i] !== column && void 0 === visibleColumns[i].width) {\r\n                        columnsController.columnOption(visibleColumns[i].index, \"width\", columnWidths[i])\r\n                    }\r\n                }\r\n            }\r\n            columnsController.endUpdate();\r\n            if (!isNextColumnMode) {\r\n                this.component.updateDimensions();\r\n                var scrollable = this.component.getScrollable();\r\n                if (scrollable && isRtlParentStyle) {\r\n                    var left = scrollable.$content().width() - scrollable._container().width() - this._scrollRight;\r\n                    scrollable.scrollTo({\r\n                        left: left\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return needUpdate\r\n    },\r\n    _subscribeToCallback: function(callback, handler) {\r\n        callback.add(handler);\r\n        this._subscribesToCallbacks.push({\r\n            callback: callback,\r\n            handler: handler\r\n        })\r\n    },\r\n    _unsubscribeFromCallbacks: function() {\r\n        for (var i = 0; i < this._subscribesToCallbacks.length; i++) {\r\n            var subscribe = this._subscribesToCallbacks[i];\r\n            subscribe.callback.remove(subscribe.handler)\r\n        }\r\n        this._subscribesToCallbacks = []\r\n    },\r\n    _unsubscribes: function() {\r\n        this._unsubscribeFromEvents();\r\n        this._unsubscribeFromCallbacks()\r\n    },\r\n    _init: function() {\r\n        var that = this;\r\n        var generatePointsByColumnsHandler = function() {\r\n            if (!that._isResizing) {\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        var generatePointsByColumnsScrollHandler = function(offset) {\r\n            if (that._scrollLeft !== offset.left) {\r\n                that._scrollLeft = offset.left;\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._trackerView = that.getView(\"trackerView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._tablePositionController = that.getController(\"tablePosition\");\r\n        that._$parentContainer = that.component.$element();\r\n        that._subscribeToCallback(that._columnHeadersView.renderCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnHeadersView.resizeCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnsSeparatorView.renderCompleted, (function() {\r\n            that._unsubscribeFromEvents();\r\n            that._subscribeToEvents()\r\n        }));\r\n        that._subscribeToCallback(that._rowsView.renderCompleted, (function() {\r\n            that._rowsView.scrollChanged.remove(generatePointsByColumnsScrollHandler);\r\n            that._rowsView.scrollChanged.add(generatePointsByColumnsScrollHandler)\r\n        }));\r\n        var previousScrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n        var previousTableHeight = 0;\r\n        that._subscribeToCallback(that.getController(\"tablePosition\").positionChanged, (function(e) {\r\n            if (that._isResizing && !that._rowsView.isResizing) {\r\n                var scrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n                if (previousScrollbarVisibility !== scrollbarVisibility || previousTableHeight && previousTableHeight !== e.height) {\r\n                    previousScrollbarVisibility = scrollbarVisibility;\r\n                    previousTableHeight = e.height;\r\n                    that.component.updateDimensions()\r\n                } else {\r\n                    that._rowsView.updateFreeSpaceRowHeight()\r\n                }\r\n            }\r\n            previousTableHeight = e.height\r\n        }))\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._subscribeToEvents()\r\n            } else {\r\n                this._unsubscribes()\r\n            }\r\n        }\r\n    },\r\n    isResizing: function() {\r\n        return this._isResizing\r\n    },\r\n    init: function() {\r\n        this._subscribesToCallbacks = [];\r\n        if (allowResizing(this)) {\r\n            this._init()\r\n        }\r\n    },\r\n    pointsByColumns: function(value) {\r\n        if (void 0 !== value) {\r\n            this._pointsByColumns = value\r\n        } else {\r\n            if (!this._pointsByColumns) {\r\n                this._generatePointsByColumns()\r\n            }\r\n            return this._pointsByColumns\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribes();\r\n        this.callBase()\r\n    }\r\n});\r\nvar TablePositionViewController = modules.ViewController.inherit({\r\n    update: function(top) {\r\n        var params = {};\r\n        var $element = this._columnHeadersView.element();\r\n        var offset = $element && $element.offset();\r\n        var offsetTop = offset && offset.top || 0;\r\n        var diffOffsetTop = isDefined(top) ? Math.abs(top - offsetTop) : 0;\r\n        var columnsHeadersHeight = this._columnHeadersView ? this._columnHeadersView.getHeight() : 0;\r\n        var scrollBarWidth = this._rowsView.getScrollbarWidth(true);\r\n        var rowsHeight = this._rowsView ? this._rowsView.height() - scrollBarWidth : 0;\r\n        var columnsResizerController = this.component.getController(\"columnsResizer\");\r\n        var draggingHeaderView = this.component.getView(\"draggingHeaderView\");\r\n        params.height = columnsHeadersHeight;\r\n        var isDraggingOrResizing = false !== columnsResizerController.isResizing() || draggingHeaderView.isDragging();\r\n        if (isDraggingOrResizing) {\r\n            params.height += rowsHeight - diffOffsetTop\r\n        }\r\n        if (null !== top && $element && $element.length) {\r\n            params.top = $element[0].offsetTop + diffOffsetTop\r\n        }\r\n        this.positionChanged.fire(params)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        that._rowsView = this.getView(\"rowsView\");\r\n        that._pagerView = this.getView(\"pagerView\");\r\n        that._rowsView.resizeCompleted.add((function() {\r\n            if (that.option(\"allowColumnResizing\")) {\r\n                var targetPoint = that.getController(\"columnsResizer\")._targetPoint;\r\n                that.update(targetPoint ? targetPoint.y : null)\r\n            }\r\n        }))\r\n    },\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this.positionChanged = Callbacks()\r\n    }\r\n});\r\nvar DraggingHeaderViewController = modules.ViewController.inherit({\r\n    _generatePointsByColumns: function(options) {\r\n        var that = this;\r\n        return gridCoreUtils.getPointsByColumns(options.columnElements, (function(point) {\r\n            return that._pointCreated(point, options.columns, options.targetDraggingPanel.getName(), options.sourceColumn)\r\n        }), options.isVerticalOrientation, options.startColumnIndex)\r\n    },\r\n    _pointCreated: function(point, columns, location, sourceColumn) {\r\n        var targetColumn = columns[point.columnIndex];\r\n        var prevColumn = columns[point.columnIndex - 1];\r\n        switch (location) {\r\n            case \"columnChooser\":\r\n                return true;\r\n            case \"headers\":\r\n                return sourceColumn && !sourceColumn.allowReordering || (!targetColumn || !targetColumn.allowReordering) && (!prevColumn || !prevColumn.allowReordering);\r\n            default:\r\n                return 0 === columns.length\r\n        }\r\n    },\r\n    _subscribeToEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        each(draggingPanels, (function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columns;\r\n                var rowCount = draggingPanel.getRowCount ? draggingPanel.getRowCount() : 1;\r\n                var nameDraggingPanel = draggingPanel.getName();\r\n                var subscribeToEvents = function(index, columnElement) {\r\n                    if (!columnElement) {\r\n                        return\r\n                    }\r\n                    var $columnElement = $(columnElement);\r\n                    var column = columns[index];\r\n                    if (draggingPanel.allowDragging(column, nameDraggingPanel, draggingPanels)) {\r\n                        $columnElement.addClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE), that.createAction((function(args) {\r\n                            var e = args.event;\r\n                            var eventData = getEventData(e);\r\n                            draggingHeader.dragHeader({\r\n                                deltaX: eventData.x - $(e.currentTarget).offset().left,\r\n                                deltaY: eventData.y - $(e.currentTarget).offset().top,\r\n                                sourceColumn: column,\r\n                                index: column.index,\r\n                                columnIndex: index,\r\n                                columnElement: $columnElement,\r\n                                sourceLocation: nameDraggingPanel,\r\n                                draggingPanels: draggingPanels,\r\n                                rowIndex: that._columnsController.getRowIndex(column.index, true)\r\n                            })\r\n                        })));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.moveHeader));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.dropHeader))\r\n                    }\r\n                };\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    var columnElements = draggingPanel.getColumnElements(i) || [];\r\n                    if (columnElements.length) {\r\n                        columns = draggingPanel.getColumns(i) || [];\r\n                        each(columnElements, subscribeToEvents)\r\n                    }\r\n                }\r\n            }\r\n        }))\r\n    },\r\n    _unsubscribeFromEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        each(draggingPanels, (function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columnElements = draggingPanel.getColumnElements() || [];\r\n                each(columnElements, (function(index, columnElement) {\r\n                    var $columnElement = $(columnElement);\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE));\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE));\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE));\r\n                    $columnElement.removeClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS))\r\n                }))\r\n            }\r\n        }))\r\n    },\r\n    _getSeparator: function(targetLocation) {\r\n        return \"headers\" === targetLocation ? this._columnsSeparatorView : this._blockSeparatorView\r\n    },\r\n    hideSeparators: function(type) {\r\n        var blockSeparator = this._blockSeparatorView;\r\n        var columnsSeparator = this._columnsSeparatorView;\r\n        this._animationColumnIndex = null;\r\n        blockSeparator && blockSeparator.hide();\r\n        \"block\" !== type && columnsSeparator && columnsSeparator.hide()\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._draggingHeaderView = that.getView(\"draggingHeaderView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._blockSeparatorView = that.getView(\"blockSeparatorView\");\r\n        that._headerPanelView = that.getView(\"headerPanel\");\r\n        that._columnChooserView = that.getView(\"columnChooserView\");\r\n        var subscribeToEvents = function() {\r\n            if (that._draggingHeaderView) {\r\n                var draggingPanels = [that._columnChooserView, that._columnHeadersView, that._headerPanelView];\r\n                that._unsubscribeFromEvents(that._draggingHeaderView, draggingPanels);\r\n                that._subscribeToEvents(that._draggingHeaderView, draggingPanels)\r\n            }\r\n        };\r\n        that._columnHeadersView.renderCompleted.add(subscribeToEvents);\r\n        that._headerPanelView && that._headerPanelView.renderCompleted.add(subscribeToEvents);\r\n        that._columnChooserView && that._columnChooserView.renderCompleted.add(subscribeToEvents)\r\n    },\r\n    allowDrop: function(parameters) {\r\n        return this._columnsController.allowMoveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n    },\r\n    drag: function(parameters) {\r\n        var sourceIndex = parameters.sourceIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        var headersView = this._columnHeadersView;\r\n        var rowsView = this._rowsView;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: COLUMN_OPACITY\r\n            });\r\n            if (\"headers\" === sourceLocation) {\r\n                headersView && headersView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\r\n                rowsView && rowsView.setRowsOpacity(sourceIndex, COLUMN_OPACITY)\r\n            }\r\n        }\r\n    },\r\n    dock: function(parameters) {\r\n        var that = this;\r\n        var targetColumnIndex = isObject(parameters.targetColumnIndex) ? parameters.targetColumnIndex.columnIndex : parameters.targetColumnIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var targetLocation = parameters.targetLocation;\r\n        var separator = that._getSeparator(targetLocation);\r\n        var hasTargetVisibleIndex = targetColumnIndex >= 0;\r\n        that._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).toggleClass(that.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS), \"headers\" !== sourceLocation && \"headers\" === targetLocation && !hasTargetVisibleIndex);\r\n        if (separator) {\r\n            if (that.allowDrop(parameters) && hasTargetVisibleIndex) {\r\n                if (\"group\" === targetLocation || \"columnChooser\" === targetLocation) {\r\n                    ! function() {\r\n                        if (that._animationColumnIndex !== targetColumnIndex) {\r\n                            that.hideSeparators();\r\n                            separator.element()[parameters.isLast ? \"insertAfter\" : \"insertBefore\"](parameters.targetColumnElement);\r\n                            that._animationColumnIndex = targetColumnIndex;\r\n                            separator.show(targetLocation)\r\n                        }\r\n                    }()\r\n                } else {\r\n                    that.hideSeparators(\"block\");\r\n                    that.getController(\"tablePosition\").update(parameters.posY);\r\n                    separator.moveByX(parameters.posX - separator.width());\r\n                    separator.show()\r\n                }\r\n            } else {\r\n                that.hideSeparators()\r\n            }\r\n        }\r\n    },\r\n    drop: function(parameters) {\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: \"\"\r\n            });\r\n            this._columnHeadersView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._rowsView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).removeClass(this.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS))\r\n        }\r\n        if (this.allowDrop(parameters)) {\r\n            var separator = this._getSeparator(parameters.targetLocation);\r\n            if (separator) {\r\n                separator.hide()\r\n            }\r\n            this._columnsController.moveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        if (this._draggingHeaderView) {\r\n            this._unsubscribeFromEvents(this._draggingHeaderView, [this._columnChooserView, this._columnHeadersView, this._headerPanelView])\r\n        }\r\n    }\r\n});\r\nexport var columnsResizingReorderingModule = {\r\n    views: {\r\n        columnsSeparatorView: ColumnsSeparatorView,\r\n        blockSeparatorView: BlockSeparatorView,\r\n        draggingHeaderView: DraggingHeaderView,\r\n        trackerView: TrackerView\r\n    },\r\n    controllers: {\r\n        draggingHeader: DraggingHeaderViewController,\r\n        tablePosition: TablePositionViewController,\r\n        columnsResizer: ColumnsResizerViewController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _needUpdateRowHeight: function(itemCount) {\r\n                    var wordWrapEnabled = this.option(\"wordWrapEnabled\");\r\n                    var columnsResizerController = this.getController(\"columnsResizer\");\r\n                    var isResizing = columnsResizerController.isResizing();\r\n                    return this.callBase.apply(this, arguments) || itemCount > 0 && wordWrapEnabled && isResizing\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editorFactory: {\r\n                renderFocusOverlay: function() {\r\n                    if (this.getController(\"columnsResizer\").isResizing()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}