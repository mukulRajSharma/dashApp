{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/component_wrapper/utils.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { each } from \"../../core/utils/iterator\";\nimport { isPlainObject } from \"../../core/utils/type\";\nexport var addAttributes = ($element, attributes) => {\n  each(attributes, (_, _ref) => {\n    var {\n      name: name,\n      value: value\n    } = _ref;\n\n    if (\"class\" === name) {\n      $element.addClass(value);\n    } else {\n      $element.attr(name, value);\n    }\n  });\n};\nexport function getAriaName(name) {\n  return \"role\" === name || \"id\" === name ? name : \"aria-\".concat(name);\n}\nexport var removeDifferentElements = ($children, $newChildren) => {\n  each($newChildren, (__, element) => {\n    var hasComponent = false;\n    each($children, (_, oldElement) => {\n      if (element === oldElement) {\n        hasComponent = true;\n      }\n    });\n\n    if (!hasComponent && element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  });\n};\nexport function updatePropsImmutable(props, option, name, fullName) {\n  var currentPropsValue = option[name];\n  var result = props;\n\n  if (name !== fullName) {\n    if (Array.isArray(currentPropsValue)) {\n      var newArray = [...currentPropsValue];\n      result[name] = newArray;\n      var matchIndex = /\\[\\s*(\\d+)\\s*\\]/g.exec(fullName);\n\n      if (matchIndex) {\n        var index = parseInt(matchIndex[1], 10);\n\n        if (isPlainObject(newArray[index])) {\n          newArray[index] = _extends({}, currentPropsValue[index]);\n        }\n      }\n\n      return;\n    }\n  }\n\n  if (isPlainObject(currentPropsValue)) {\n    result[name] = _extends({}, currentPropsValue);\n  } else {\n    result[name] = currentPropsValue;\n  }\n}","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/node_modules/devextreme/esm/renovation/component_wrapper/utils.js"],"names":["_extends","each","isPlainObject","addAttributes","$element","attributes","_","_ref","name","value","addClass","attr","getAriaName","concat","removeDifferentElements","$children","$newChildren","__","element","hasComponent","oldElement","parentNode","removeChild","updatePropsImmutable","props","option","fullName","currentPropsValue","result","Array","isArray","newArray","matchIndex","exec","index","parseInt"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SACIC,IADJ,QAEO,2BAFP;AAGA,SACIC,aADJ,QAEO,uBAFP;AAGA,OAAO,IAAIC,aAAa,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B;AACjDJ,EAAAA,IAAI,CAACI,UAAD,EAAa,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAC1B,QAAI;AACAC,MAAAA,IAAI,EAAEA,IADN;AAEAC,MAAAA,KAAK,EAAEA;AAFP,QAGAF,IAHJ;;AAIA,QAAI,YAAYC,IAAhB,EAAsB;AAClBJ,MAAAA,QAAQ,CAACM,QAAT,CAAkBD,KAAlB;AACH,KAFD,MAEO;AACHL,MAAAA,QAAQ,CAACO,IAAT,CAAcH,IAAd,EAAoBC,KAApB;AACH;AACJ,GAVG,CAAJ;AAWH,CAZM;AAaP,OAAO,SAASG,WAAT,CAAqBJ,IAArB,EAA2B;AAC9B,SAAO,WAAWA,IAAX,IAAmB,SAASA,IAA5B,GAAmCA,IAAnC,GAA0C,QAAQK,MAAR,CAAeL,IAAf,CAAjD;AACH;AACD,OAAO,IAAIM,uBAAuB,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B;AAC9Df,EAAAA,IAAI,CAACe,YAAD,EAAe,CAACC,EAAD,EAAKC,OAAL,KAAiB;AAChC,QAAIC,YAAY,GAAG,KAAnB;AACAlB,IAAAA,IAAI,CAACc,SAAD,EAAY,CAACT,CAAD,EAAIc,UAAJ,KAAmB;AAC/B,UAAIF,OAAO,KAAKE,UAAhB,EAA4B;AACxBD,QAAAA,YAAY,GAAG,IAAf;AACH;AACJ,KAJG,CAAJ;;AAKA,QAAI,CAACA,YAAD,IAAiBD,OAAO,CAACG,UAA7B,EAAyC;AACrCH,MAAAA,OAAO,CAACG,UAAR,CAAmBC,WAAnB,CAA+BJ,OAA/B;AACH;AACJ,GAVG,CAAJ;AAWH,CAZM;AAaP,OAAO,SAASK,oBAAT,CAA8BC,KAA9B,EAAqCC,MAArC,EAA6CjB,IAA7C,EAAmDkB,QAAnD,EAA6D;AAChE,MAAIC,iBAAiB,GAAGF,MAAM,CAACjB,IAAD,CAA9B;AACA,MAAIoB,MAAM,GAAGJ,KAAb;;AACA,MAAIhB,IAAI,KAAKkB,QAAb,EAAuB;AACnB,QAAIG,KAAK,CAACC,OAAN,CAAcH,iBAAd,CAAJ,EAAsC;AAClC,UAAII,QAAQ,GAAG,CAAC,GAAGJ,iBAAJ,CAAf;AACAC,MAAAA,MAAM,CAACpB,IAAD,CAAN,GAAeuB,QAAf;AACA,UAAIC,UAAU,GAAG,mBAAmBC,IAAnB,CAAwBP,QAAxB,CAAjB;;AACA,UAAIM,UAAJ,EAAgB;AACZ,YAAIE,KAAK,GAAGC,QAAQ,CAACH,UAAU,CAAC,CAAD,CAAX,EAAgB,EAAhB,CAApB;;AACA,YAAI9B,aAAa,CAAC6B,QAAQ,CAACG,KAAD,CAAT,CAAjB,EAAoC;AAChCH,UAAAA,QAAQ,CAACG,KAAD,CAAR,GAAkBlC,QAAQ,CAAC,EAAD,EAAK2B,iBAAiB,CAACO,KAAD,CAAtB,CAA1B;AACH;AACJ;;AACD;AACH;AACJ;;AACD,MAAIhC,aAAa,CAACyB,iBAAD,CAAjB,EAAsC;AAClCC,IAAAA,MAAM,CAACpB,IAAD,CAAN,GAAeR,QAAQ,CAAC,EAAD,EAAK2B,iBAAL,CAAvB;AACH,GAFD,MAEO;AACHC,IAAAA,MAAM,CAACpB,IAAD,CAAN,GAAemB,iBAAf;AACH;AACJ","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/component_wrapper/utils.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isPlainObject\r\n} from \"../../core/utils/type\";\r\nexport var addAttributes = ($element, attributes) => {\r\n    each(attributes, (_, _ref) => {\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = _ref;\r\n        if (\"class\" === name) {\r\n            $element.addClass(value)\r\n        } else {\r\n            $element.attr(name, value)\r\n        }\r\n    })\r\n};\r\nexport function getAriaName(name) {\r\n    return \"role\" === name || \"id\" === name ? name : \"aria-\".concat(name)\r\n}\r\nexport var removeDifferentElements = ($children, $newChildren) => {\r\n    each($newChildren, (__, element) => {\r\n        var hasComponent = false;\r\n        each($children, (_, oldElement) => {\r\n            if (element === oldElement) {\r\n                hasComponent = true\r\n            }\r\n        });\r\n        if (!hasComponent && element.parentNode) {\r\n            element.parentNode.removeChild(element)\r\n        }\r\n    })\r\n};\r\nexport function updatePropsImmutable(props, option, name, fullName) {\r\n    var currentPropsValue = option[name];\r\n    var result = props;\r\n    if (name !== fullName) {\r\n        if (Array.isArray(currentPropsValue)) {\r\n            var newArray = [...currentPropsValue];\r\n            result[name] = newArray;\r\n            var matchIndex = /\\[\\s*(\\d+)\\s*\\]/g.exec(fullName);\r\n            if (matchIndex) {\r\n                var index = parseInt(matchIndex[1], 10);\r\n                if (isPlainObject(newArray[index])) {\r\n                    newArray[index] = _extends({}, currentPropsValue[index])\r\n                }\r\n            }\r\n            return\r\n        }\r\n    }\r\n    if (isPlainObject(currentPropsValue)) {\r\n        result[name] = _extends({}, currentPropsValue)\r\n    } else {\r\n        result[name] = currentPropsValue\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}