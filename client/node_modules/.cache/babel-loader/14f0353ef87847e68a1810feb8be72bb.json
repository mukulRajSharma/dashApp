{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/check_box.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../core/renderer\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport devices from \"../core/devices\";\nimport { extend } from \"../core/utils/extend\";\nimport { render } from \"./widget/utils.ink_ripple\";\nimport Editor from \"./editor/editor\";\nimport registerComponent from \"../core/component_registrator\";\nimport { addNamespace } from \"../events/utils/index\";\nimport { name as clickEventName } from \"../events/click\";\nvar CHECKBOX_CLASS = \"dx-checkbox\";\nvar CHECKBOX_ICON_CLASS = \"dx-checkbox-icon\";\nvar CHECKBOX_CHECKED_CLASS = \"dx-checkbox-checked\";\nvar CHECKBOX_CONTAINER_CLASS = \"dx-checkbox-container\";\nvar CHECKBOX_TEXT_CLASS = \"dx-checkbox-text\";\nvar CHECKBOX_HAS_TEXT_CLASS = \"dx-checkbox-has-text\";\nvar CHECKBOX_INDETERMINATE_CLASS = \"dx-checkbox-indeterminate\";\nvar CHECKBOX_FEEDBACK_HIDE_TIMEOUT = 100;\nvar CheckBox = Editor.inherit({\n  _supportedKeys: function () {\n    return extend(this.callBase(), {\n      space: function (e) {\n        e.preventDefault();\n\n        this._clickAction({\n          event: e\n        });\n      }\n    });\n  },\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      hoverStateEnabled: true,\n      activeStateEnabled: true,\n      value: false,\n      text: \"\",\n      useInkRipple: false\n    });\n  },\n  _defaultOptionsRules: function () {\n    return this.callBase().concat([{\n      device: function () {\n        return \"desktop\" === devices.real().deviceType && !devices.isSimulator();\n      },\n      options: {\n        focusStateEnabled: true\n      }\n    }]);\n  },\n  _canValueBeChangedByClick: function () {\n    return true;\n  },\n  _useTemplates: function () {\n    return false;\n  },\n  _feedbackHideTimeout: CHECKBOX_FEEDBACK_HIDE_TIMEOUT,\n  _initMarkup: function () {\n    this._renderSubmitElement();\n\n    this._$container = $(\"<div>\").addClass(CHECKBOX_CONTAINER_CLASS);\n    this.setAria(\"role\", \"checkbox\");\n    this.$element().addClass(CHECKBOX_CLASS);\n\n    this._renderValue();\n\n    this._renderIcon();\n\n    this._renderText();\n\n    this.option(\"useInkRipple\") && this._renderInkRipple();\n    this.$element().append(this._$container);\n    this.callBase();\n  },\n  _render: function () {\n    this._renderClick();\n\n    this.callBase();\n  },\n  _renderSubmitElement: function () {\n    this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\n  },\n  _getSubmitElement: function () {\n    return this._$submitElement;\n  },\n  _renderInkRipple: function () {\n    this._inkRipple = render({\n      waveSizeCoefficient: 2.5,\n      useHoldAnimation: false,\n      wavesNumber: 2,\n      isCentered: true\n    });\n  },\n  _renderInkWave: function (element, dxEvent, doRender, waveIndex) {\n    if (!this._inkRipple) {\n      return;\n    }\n\n    var config = {\n      element: element,\n      event: dxEvent,\n      wave: waveIndex\n    };\n\n    if (doRender) {\n      this._inkRipple.showWave(config);\n    } else {\n      this._inkRipple.hideWave(config);\n    }\n  },\n  _updateFocusState: function (e, value) {\n    this.callBase.apply(this, arguments);\n\n    this._renderInkWave(this._$icon, e, value, 0);\n  },\n  _toggleActiveState: function ($element, value, e) {\n    this.callBase.apply(this, arguments);\n\n    this._renderInkWave(this._$icon, e, value, 1);\n  },\n  _renderIcon: function () {\n    this._$icon = $(\"<span>\").addClass(CHECKBOX_ICON_CLASS).prependTo(this._$container);\n  },\n  _renderText: function () {\n    var textValue = this.option(\"text\");\n\n    if (!textValue) {\n      if (this._$text) {\n        this._$text.remove();\n\n        this.$element().removeClass(CHECKBOX_HAS_TEXT_CLASS);\n      }\n\n      return;\n    }\n\n    if (!this._$text) {\n      this._$text = $(\"<span>\").addClass(CHECKBOX_TEXT_CLASS);\n    }\n\n    this._$text.text(textValue);\n\n    this._$container.append(this._$text);\n\n    this.$element().addClass(CHECKBOX_HAS_TEXT_CLASS);\n  },\n  _renderClick: function () {\n    var that = this;\n    var eventName = addNamespace(clickEventName, that.NAME);\n    that._clickAction = that._createAction(that._clickHandler);\n    eventsEngine.off(that.$element(), eventName);\n    eventsEngine.on(that.$element(), eventName, function (e) {\n      that._clickAction({\n        event: e\n      });\n    });\n  },\n  _clickHandler: function (args) {\n    var that = args.component;\n\n    that._saveValueChangeEvent(args.event);\n\n    that.option(\"value\", !that.option(\"value\"));\n  },\n  _renderValue: function () {\n    var $element = this.$element();\n    var checked = this.option(\"value\");\n    var indeterminate = void 0 === checked;\n    $element.toggleClass(CHECKBOX_CHECKED_CLASS, Boolean(checked));\n    $element.toggleClass(CHECKBOX_INDETERMINATE_CLASS, indeterminate);\n\n    this._getSubmitElement().val(checked);\n\n    this.setAria(\"checked\", indeterminate ? \"mixed\" : checked || \"false\");\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"useInkRipple\":\n        this._invalidate();\n\n        break;\n\n      case \"value\":\n        this._renderValue();\n\n        this.callBase(args);\n        break;\n\n      case \"text\":\n        this._renderText();\n\n        this._renderDimensions();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _clean: function () {\n    delete this._inkRipple;\n    this.callBase();\n  }\n});\nregisterComponent(\"dxCheckBox\", CheckBox);\nexport default CheckBox;","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/node_modules/devextreme/esm/ui/check_box.js"],"names":["$","eventsEngine","devices","extend","render","Editor","registerComponent","addNamespace","name","clickEventName","CHECKBOX_CLASS","CHECKBOX_ICON_CLASS","CHECKBOX_CHECKED_CLASS","CHECKBOX_CONTAINER_CLASS","CHECKBOX_TEXT_CLASS","CHECKBOX_HAS_TEXT_CLASS","CHECKBOX_INDETERMINATE_CLASS","CHECKBOX_FEEDBACK_HIDE_TIMEOUT","CheckBox","inherit","_supportedKeys","callBase","space","e","preventDefault","_clickAction","event","_getDefaultOptions","hoverStateEnabled","activeStateEnabled","value","text","useInkRipple","_defaultOptionsRules","concat","device","real","deviceType","isSimulator","options","focusStateEnabled","_canValueBeChangedByClick","_useTemplates","_feedbackHideTimeout","_initMarkup","_renderSubmitElement","_$container","addClass","setAria","$element","_renderValue","_renderIcon","_renderText","option","_renderInkRipple","append","_render","_renderClick","_$submitElement","attr","appendTo","_getSubmitElement","_inkRipple","waveSizeCoefficient","useHoldAnimation","wavesNumber","isCentered","_renderInkWave","element","dxEvent","doRender","waveIndex","config","wave","showWave","hideWave","_updateFocusState","apply","arguments","_$icon","_toggleActiveState","prependTo","textValue","_$text","remove","removeClass","that","eventName","NAME","_createAction","_clickHandler","off","on","args","component","_saveValueChangeEvent","checked","indeterminate","toggleClass","Boolean","val","_optionChanged","_invalidate","_renderDimensions","_clean"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/check_box.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport devices from \"../core/devices\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    render\r\n} from \"./widget/utils.ink_ripple\";\r\nimport Editor from \"./editor/editor\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    addNamespace\r\n} from \"../events/utils/index\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../events/click\";\r\nvar CHECKBOX_CLASS = \"dx-checkbox\";\r\nvar CHECKBOX_ICON_CLASS = \"dx-checkbox-icon\";\r\nvar CHECKBOX_CHECKED_CLASS = \"dx-checkbox-checked\";\r\nvar CHECKBOX_CONTAINER_CLASS = \"dx-checkbox-container\";\r\nvar CHECKBOX_TEXT_CLASS = \"dx-checkbox-text\";\r\nvar CHECKBOX_HAS_TEXT_CLASS = \"dx-checkbox-has-text\";\r\nvar CHECKBOX_INDETERMINATE_CLASS = \"dx-checkbox-indeterminate\";\r\nvar CHECKBOX_FEEDBACK_HIDE_TIMEOUT = 100;\r\nvar CheckBox = Editor.inherit({\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), {\r\n            space: function(e) {\r\n                e.preventDefault();\r\n                this._clickAction({\r\n                    event: e\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            activeStateEnabled: true,\r\n            value: false,\r\n            text: \"\",\r\n            useInkRipple: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _canValueBeChangedByClick: function() {\r\n        return true\r\n    },\r\n    _useTemplates: function() {\r\n        return false\r\n    },\r\n    _feedbackHideTimeout: CHECKBOX_FEEDBACK_HIDE_TIMEOUT,\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this._$container = $(\"<div>\").addClass(CHECKBOX_CONTAINER_CLASS);\r\n        this.setAria(\"role\", \"checkbox\");\r\n        this.$element().addClass(CHECKBOX_CLASS);\r\n        this._renderValue();\r\n        this._renderIcon();\r\n        this._renderText();\r\n        this.option(\"useInkRipple\") && this._renderInkRipple();\r\n        this.$element().append(this._$container);\r\n        this.callBase()\r\n    },\r\n    _render: function() {\r\n        this._renderClick();\r\n        this.callBase()\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element())\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = render({\r\n            waveSizeCoefficient: 2.5,\r\n            useHoldAnimation: false,\r\n            wavesNumber: 2,\r\n            isCentered: true\r\n        })\r\n    },\r\n    _renderInkWave: function(element, dxEvent, doRender, waveIndex) {\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: element,\r\n            event: dxEvent,\r\n            wave: waveIndex\r\n        };\r\n        if (doRender) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _updateFocusState: function(e, value) {\r\n        this.callBase.apply(this, arguments);\r\n        this._renderInkWave(this._$icon, e, value, 0)\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        this._renderInkWave(this._$icon, e, value, 1)\r\n    },\r\n    _renderIcon: function() {\r\n        this._$icon = $(\"<span>\").addClass(CHECKBOX_ICON_CLASS).prependTo(this._$container)\r\n    },\r\n    _renderText: function() {\r\n        var textValue = this.option(\"text\");\r\n        if (!textValue) {\r\n            if (this._$text) {\r\n                this._$text.remove();\r\n                this.$element().removeClass(CHECKBOX_HAS_TEXT_CLASS)\r\n            }\r\n            return\r\n        }\r\n        if (!this._$text) {\r\n            this._$text = $(\"<span>\").addClass(CHECKBOX_TEXT_CLASS)\r\n        }\r\n        this._$text.text(textValue);\r\n        this._$container.append(this._$text);\r\n        this.$element().addClass(CHECKBOX_HAS_TEXT_CLASS)\r\n    },\r\n    _renderClick: function() {\r\n        var that = this;\r\n        var eventName = addNamespace(clickEventName, that.NAME);\r\n        that._clickAction = that._createAction(that._clickHandler);\r\n        eventsEngine.off(that.$element(), eventName);\r\n        eventsEngine.on(that.$element(), eventName, (function(e) {\r\n            that._clickAction({\r\n                event: e\r\n            })\r\n        }))\r\n    },\r\n    _clickHandler: function(args) {\r\n        var that = args.component;\r\n        that._saveValueChangeEvent(args.event);\r\n        that.option(\"value\", !that.option(\"value\"))\r\n    },\r\n    _renderValue: function() {\r\n        var $element = this.$element();\r\n        var checked = this.option(\"value\");\r\n        var indeterminate = void 0 === checked;\r\n        $element.toggleClass(CHECKBOX_CHECKED_CLASS, Boolean(checked));\r\n        $element.toggleClass(CHECKBOX_INDETERMINATE_CLASS, indeterminate);\r\n        this._getSubmitElement().val(checked);\r\n        this.setAria(\"checked\", indeterminate ? \"mixed\" : checked || \"false\")\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            case \"value\":\r\n                this._renderValue();\r\n                this.callBase(args);\r\n                break;\r\n            case \"text\":\r\n                this._renderText();\r\n                this._renderDimensions();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        delete this._inkRipple;\r\n        this.callBase()\r\n    }\r\n});\r\nregisterComponent(\"dxCheckBox\", CheckBox);\r\nexport default CheckBox;\r\n"]},"metadata":{},"sourceType":"module"}