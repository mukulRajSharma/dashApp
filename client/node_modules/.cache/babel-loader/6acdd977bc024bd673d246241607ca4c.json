{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/utils/subscribe_to_event.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport eventsEngine from \"../../events/core/events_engine\";\nimport * as clickEvent from \"../../events/click\";\nexport function subscribeToEvent(eventName) {\n  return (element, handler) => {\n    if (handler && element) {\n      eventsEngine.on(element, eventName, handler);\n      return () => eventsEngine.off(element, eventName, handler);\n    }\n\n    return;\n  };\n}\nexport var subscribeToClickEvent = subscribeToEvent(clickEvent.name);\nexport var subscribeToScrollEvent = subscribeToEvent(\"scroll\");","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/node_modules/devextreme/esm/renovation/utils/subscribe_to_event.js"],"names":["eventsEngine","clickEvent","subscribeToEvent","eventName","element","handler","on","off","subscribeToClickEvent","name","subscribeToScrollEvent"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,YAAP,MAAyB,iCAAzB;AACA,OAAO,KAAKC,UAAZ,MAA4B,oBAA5B;AACA,OAAO,SAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AACxC,SAAO,CAACC,OAAD,EAAUC,OAAV,KAAsB;AACzB,QAAIA,OAAO,IAAID,OAAf,EAAwB;AACpBJ,MAAAA,YAAY,CAACM,EAAb,CAAgBF,OAAhB,EAAyBD,SAAzB,EAAoCE,OAApC;AACA,aAAO,MAAML,YAAY,CAACO,GAAb,CAAiBH,OAAjB,EAA0BD,SAA1B,EAAqCE,OAArC,CAAb;AACH;;AACD;AACH,GAND;AAOH;AACD,OAAO,IAAIG,qBAAqB,GAAGN,gBAAgB,CAACD,UAAU,CAACQ,IAAZ,CAA5C;AACP,OAAO,IAAIC,sBAAsB,GAAGR,gBAAgB,CAAC,QAAD,CAA7C","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/utils/subscribe_to_event.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport * as clickEvent from \"../../events/click\";\r\nexport function subscribeToEvent(eventName) {\r\n    return (element, handler) => {\r\n        if (handler && element) {\r\n            eventsEngine.on(element, eventName, handler);\r\n            return () => eventsEngine.off(element, eventName, handler)\r\n        }\r\n        return\r\n    }\r\n}\r\nexport var subscribeToClickEvent = subscribeToEvent(clickEvent.name);\r\nexport var subscribeToScrollEvent = subscribeToEvent(\"scroll\");\r\n"]},"metadata":{},"sourceType":"module"}