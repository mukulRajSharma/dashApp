{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_panel.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport Toolbar from \"../toolbar\";\nimport { ColumnsView } from \"./ui.grid_core.columns_view\";\nimport { noop } from \"../../core/utils/common\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { triggerResizeEvent } from \"../../events/visibility_change\";\nimport messageLocalization from \"../../localization/message\";\nimport \"../drop_down_menu\";\nvar HEADER_PANEL_CLASS = \"header-panel\";\nvar TOOLBAR_BUTTON_CLASS = \"toolbar-button\";\nvar TOOLBAR_ARIA_LABEL = \"-ariaToolbar\";\nvar HeaderPanel = ColumnsView.inherit({\n  _getToolbarItems: function () {\n    return [];\n  },\n  _getButtonContainer: function () {\n    return $(\"<div>\").addClass(this.addWidgetPrefix(TOOLBAR_BUTTON_CLASS));\n  },\n  _getToolbarButtonClass: function (specificClass) {\n    var secondClass = specificClass ? \" \" + specificClass : \"\";\n    return this.addWidgetPrefix(TOOLBAR_BUTTON_CLASS) + secondClass;\n  },\n  _getToolbarOptions: function () {\n    var options = {\n      toolbarOptions: {\n        items: this._getToolbarItems(),\n        onItemRendered: function (e) {\n          var itemRenderedCallback = e.itemData.onItemRendered;\n\n          if (itemRenderedCallback) {\n            itemRenderedCallback(e);\n          }\n        }\n      }\n    };\n    this.executeAction(\"onToolbarPreparing\", options);\n\n    if (options.toolbarOptions && !isDefined(options.toolbarOptions.visible)) {\n      var toolbarItems = options.toolbarOptions.items;\n      options.toolbarOptions.visible = !!(toolbarItems && toolbarItems.length);\n    }\n\n    return options.toolbarOptions;\n  },\n  _renderCore: function () {\n    if (!this._toolbar) {\n      var $headerPanel = this.element();\n      $headerPanel.addClass(this.addWidgetPrefix(HEADER_PANEL_CLASS));\n      var label = messageLocalization.format(this.component.NAME + TOOLBAR_ARIA_LABEL);\n      var $toolbar = $(\"<div>\").attr(\"aria-label\", label).appendTo($headerPanel);\n      this._toolbar = this._createComponent($toolbar, Toolbar, this._toolbarOptions);\n    } else {\n      this._toolbar.option(this._toolbarOptions);\n    }\n  },\n  _columnOptionChanged: noop,\n  _handleDataChanged: function () {\n    if (this._requireReady) {\n      this.render();\n    }\n  },\n  init: function () {\n    this.callBase();\n    this.createAction(\"onToolbarPreparing\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n  },\n  render: function () {\n    this._toolbarOptions = this._getToolbarOptions();\n    this.callBase.apply(this, arguments);\n  },\n  setToolbarItemDisabled: function (name, optionValue) {\n    var toolbarInstance = this._toolbar;\n\n    if (toolbarInstance) {\n      var items = toolbarInstance.option(\"items\") || [];\n      var itemIndex = items.indexOf(items.filter(function (item) {\n        return item.name === name;\n      })[0]);\n\n      if (itemIndex >= 0) {\n        var itemOptionPrefix = \"items[\" + itemIndex + \"]\";\n\n        if (toolbarInstance.option(itemOptionPrefix + \".options\")) {\n          toolbarInstance.option(itemOptionPrefix + \".options.disabled\", optionValue);\n        } else {\n          toolbarInstance.option(itemOptionPrefix + \".disabled\", optionValue);\n        }\n      }\n    }\n  },\n  updateToolbarDimensions: function () {\n    if (this._toolbar) {\n      triggerResizeEvent(this.getHeaderPanel());\n    }\n  },\n  getHeaderPanel: function () {\n    return this.element();\n  },\n  getHeight: function () {\n    return this.getElementHeight();\n  },\n  optionChanged: function (args) {\n    if (\"onToolbarPreparing\" === args.name) {\n      this._invalidate();\n\n      args.handled = true;\n    }\n\n    this.callBase(args);\n  },\n  isVisible: function () {\n    return this._toolbarOptions && this._toolbarOptions.visible;\n  },\n  allowDragging: noop\n});\nexport var headerPanelModule = {\n  defaultOptions: function () {\n    return {};\n  },\n  views: {\n    headerPanel: HeaderPanel\n  },\n  extenders: {\n    controllers: {\n      resizing: {\n        _updateDimensionsCore: function () {\n          this.callBase.apply(this, arguments);\n          this.getView(\"headerPanel\").updateToolbarDimensions();\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.header_panel.js"],"names":["$","Toolbar","ColumnsView","noop","isDefined","triggerResizeEvent","messageLocalization","HEADER_PANEL_CLASS","TOOLBAR_BUTTON_CLASS","TOOLBAR_ARIA_LABEL","HeaderPanel","inherit","_getToolbarItems","_getButtonContainer","addClass","addWidgetPrefix","_getToolbarButtonClass","specificClass","secondClass","_getToolbarOptions","options","toolbarOptions","items","onItemRendered","e","itemRenderedCallback","itemData","executeAction","visible","toolbarItems","length","_renderCore","_toolbar","$headerPanel","element","label","format","component","NAME","$toolbar","attr","appendTo","_createComponent","_toolbarOptions","option","_columnOptionChanged","_handleDataChanged","_requireReady","render","init","callBase","createAction","excludeValidators","apply","arguments","setToolbarItemDisabled","name","optionValue","toolbarInstance","itemIndex","indexOf","filter","item","itemOptionPrefix","updateToolbarDimensions","getHeaderPanel","getHeight","getElementHeight","optionChanged","args","_invalidate","handled","isVisible","allowDragging","headerPanelModule","defaultOptions","views","headerPanel","extenders","controllers","resizing","_updateDimensionsCore","getView"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_panel.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Toolbar from \"../toolbar\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    triggerResizeEvent\r\n} from \"../../events/visibility_change\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport \"../drop_down_menu\";\r\nvar HEADER_PANEL_CLASS = \"header-panel\";\r\nvar TOOLBAR_BUTTON_CLASS = \"toolbar-button\";\r\nvar TOOLBAR_ARIA_LABEL = \"-ariaToolbar\";\r\nvar HeaderPanel = ColumnsView.inherit({\r\n    _getToolbarItems: function() {\r\n        return []\r\n    },\r\n    _getButtonContainer: function() {\r\n        return $(\"<div>\").addClass(this.addWidgetPrefix(TOOLBAR_BUTTON_CLASS))\r\n    },\r\n    _getToolbarButtonClass: function(specificClass) {\r\n        var secondClass = specificClass ? \" \" + specificClass : \"\";\r\n        return this.addWidgetPrefix(TOOLBAR_BUTTON_CLASS) + secondClass\r\n    },\r\n    _getToolbarOptions: function() {\r\n        var options = {\r\n            toolbarOptions: {\r\n                items: this._getToolbarItems(),\r\n                onItemRendered: function(e) {\r\n                    var itemRenderedCallback = e.itemData.onItemRendered;\r\n                    if (itemRenderedCallback) {\r\n                        itemRenderedCallback(e)\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this.executeAction(\"onToolbarPreparing\", options);\r\n        if (options.toolbarOptions && !isDefined(options.toolbarOptions.visible)) {\r\n            var toolbarItems = options.toolbarOptions.items;\r\n            options.toolbarOptions.visible = !!(toolbarItems && toolbarItems.length)\r\n        }\r\n        return options.toolbarOptions\r\n    },\r\n    _renderCore: function() {\r\n        if (!this._toolbar) {\r\n            var $headerPanel = this.element();\r\n            $headerPanel.addClass(this.addWidgetPrefix(HEADER_PANEL_CLASS));\r\n            var label = messageLocalization.format(this.component.NAME + TOOLBAR_ARIA_LABEL);\r\n            var $toolbar = $(\"<div>\").attr(\"aria-label\", label).appendTo($headerPanel);\r\n            this._toolbar = this._createComponent($toolbar, Toolbar, this._toolbarOptions)\r\n        } else {\r\n            this._toolbar.option(this._toolbarOptions)\r\n        }\r\n    },\r\n    _columnOptionChanged: noop,\r\n    _handleDataChanged: function() {\r\n        if (this._requireReady) {\r\n            this.render()\r\n        }\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this.createAction(\"onToolbarPreparing\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    render: function() {\r\n        this._toolbarOptions = this._getToolbarOptions();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    setToolbarItemDisabled: function(name, optionValue) {\r\n        var toolbarInstance = this._toolbar;\r\n        if (toolbarInstance) {\r\n            var items = toolbarInstance.option(\"items\") || [];\r\n            var itemIndex = items.indexOf(items.filter((function(item) {\r\n                return item.name === name\r\n            }))[0]);\r\n            if (itemIndex >= 0) {\r\n                var itemOptionPrefix = \"items[\" + itemIndex + \"]\";\r\n                if (toolbarInstance.option(itemOptionPrefix + \".options\")) {\r\n                    toolbarInstance.option(itemOptionPrefix + \".options.disabled\", optionValue)\r\n                } else {\r\n                    toolbarInstance.option(itemOptionPrefix + \".disabled\", optionValue)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    updateToolbarDimensions: function() {\r\n        if (this._toolbar) {\r\n            triggerResizeEvent(this.getHeaderPanel())\r\n        }\r\n    },\r\n    getHeaderPanel: function() {\r\n        return this.element()\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"onToolbarPreparing\" === args.name) {\r\n            this._invalidate();\r\n            args.handled = true\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    isVisible: function() {\r\n        return this._toolbarOptions && this._toolbarOptions.visible\r\n    },\r\n    allowDragging: noop\r\n});\r\nexport var headerPanelModule = {\r\n    defaultOptions: function() {\r\n        return {}\r\n    },\r\n    views: {\r\n        headerPanel: HeaderPanel\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            resizing: {\r\n                _updateDimensionsCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this.getView(\"headerPanel\").updateToolbarDimensions()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}