{"ast":null,"code":"/**\r\n * DevExtreme (esm/animation/position.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../core/renderer\";\nimport { splitPair, pairToObject } from \"../core/utils/common\";\nimport { each } from \"../core/utils/iterator\";\nimport { getWindow } from \"../core/utils/window\";\nvar window = getWindow();\nimport domAdapter from \"../core/dom_adapter\";\nimport { isWindow } from \"../core/utils/type\";\nimport { extend } from \"../core/utils/extend\";\nimport { getBoundingRect } from \"../core/utils/position\";\nimport browser from \"../core/utils/browser\";\nimport { resetPosition, move } from \"./translator\";\nimport { touch } from \"../core/utils/support\";\nimport devices from \"../core/devices\";\nvar horzRe = /left|right/;\nvar vertRe = /top|bottom/;\nvar collisionRe = /fit|flip|none/;\nvar scaleRe = /scale(.+)/;\nvar IS_SAFARI = browser.safari;\n\nvar normalizeAlign = function (raw) {\n  var result = {\n    h: \"center\",\n    v: \"center\"\n  };\n  var pair = splitPair(raw);\n\n  if (pair) {\n    each(pair, function () {\n      var w = String(this).toLowerCase();\n\n      if (horzRe.test(w)) {\n        result.h = w;\n      } else if (vertRe.test(w)) {\n        result.v = w;\n      }\n    });\n  }\n\n  return result;\n};\n\nvar normalizeOffset = function (raw) {\n  return pairToObject(raw);\n};\n\nvar normalizeCollision = function (raw) {\n  var pair = splitPair(raw);\n  var h = String(pair && pair[0]).toLowerCase();\n  var v = String(pair && pair[1]).toLowerCase();\n\n  if (!collisionRe.test(h)) {\n    h = \"none\";\n  }\n\n  if (!collisionRe.test(v)) {\n    v = h;\n  }\n\n  return {\n    h: h,\n    v: v\n  };\n};\n\nvar getAlignFactor = function (align) {\n  switch (align) {\n    case \"center\":\n      return .5;\n\n    case \"right\":\n    case \"bottom\":\n      return 1;\n\n    default:\n      return 0;\n  }\n};\n\nvar inverseAlign = function (align) {\n  switch (align) {\n    case \"left\":\n      return \"right\";\n\n    case \"right\":\n      return \"left\";\n\n    case \"top\":\n      return \"bottom\";\n\n    case \"bottom\":\n      return \"top\";\n\n    default:\n      return align;\n  }\n};\n\nvar calculateOversize = function (data, bounds) {\n  var oversize = 0;\n\n  if (data.myLocation < bounds.min) {\n    oversize += bounds.min - data.myLocation;\n  }\n\n  if (data.myLocation > bounds.max) {\n    oversize += data.myLocation - bounds.max;\n  }\n\n  return oversize;\n};\n\nvar collisionSide = function (direction, data, bounds) {\n  if (data.myLocation < bounds.min) {\n    return \"h\" === direction ? \"left\" : \"top\";\n  }\n\n  if (data.myLocation > bounds.max) {\n    return \"h\" === direction ? \"right\" : \"bottom\";\n  }\n\n  return \"none\";\n};\n\nvar initMyLocation = function (data) {\n  data.myLocation = data.atLocation + getAlignFactor(data.atAlign) * data.atSize - getAlignFactor(data.myAlign) * data.mySize + data.offset;\n};\n\nvar collisionResolvers = {\n  fit: function (data, bounds) {\n    var result = false;\n\n    if (data.myLocation > bounds.max) {\n      data.myLocation = bounds.max;\n      result = true;\n    }\n\n    if (data.myLocation < bounds.min) {\n      data.myLocation = bounds.min;\n      result = true;\n    }\n\n    data.fit = result;\n  },\n  flip: function (data, bounds) {\n    data.flip = false;\n\n    if (\"center\" === data.myAlign && \"center\" === data.atAlign) {\n      return;\n    }\n\n    if (data.myLocation < bounds.min || data.myLocation > bounds.max) {\n      var inverseData = extend({}, data, {\n        myAlign: inverseAlign(data.myAlign),\n        atAlign: inverseAlign(data.atAlign),\n        offset: -data.offset\n      });\n      initMyLocation(inverseData);\n      inverseData.oversize = calculateOversize(inverseData, bounds);\n\n      if (inverseData.myLocation >= bounds.min && inverseData.myLocation <= bounds.max || data.oversize > inverseData.oversize) {\n        data.myLocation = inverseData.myLocation;\n        data.oversize = inverseData.oversize;\n        data.flip = true;\n      }\n    }\n  },\n  flipfit: function (data, bounds) {\n    this.flip(data, bounds);\n    this.fit(data, bounds);\n  },\n  none: function (data) {\n    data.oversize = 0;\n  }\n};\nvar scrollbarWidth;\n\nvar calculateScrollbarWidth = function () {\n  var $scrollDiv = $(\"<div>\").css({\n    width: 100,\n    height: 100,\n    overflow: \"scroll\",\n    position: \"absolute\",\n    top: -9999\n  }).appendTo($(\"body\"));\n  var result = $scrollDiv.get(0).offsetWidth - $scrollDiv.get(0).clientWidth;\n  $scrollDiv.remove();\n  scrollbarWidth = result;\n};\n\nvar defaultPositionResult = {\n  h: {\n    location: 0,\n    flip: false,\n    fit: false,\n    oversize: 0\n  },\n  v: {\n    location: 0,\n    flip: false,\n    fit: false,\n    oversize: 0\n  }\n};\n\nvar calculatePosition = function (what, options) {\n  var $what = $(what);\n  var currentOffset = $what.offset();\n  var result = extend(true, {}, defaultPositionResult, {\n    h: {\n      location: currentOffset.left\n    },\n    v: {\n      location: currentOffset.top\n    }\n  });\n\n  if (!options) {\n    return result;\n  }\n\n  var my = normalizeAlign(options.my);\n  var at = normalizeAlign(options.at);\n  var of = $(options.of).length && options.of || window;\n  var offset = normalizeOffset(options.offset);\n  var collision = normalizeCollision(options.collision);\n  var boundary = options.boundary;\n  var boundaryOffset = normalizeOffset(options.boundaryOffset);\n  var h = {\n    mySize: $what.outerWidth(),\n    myAlign: my.h,\n    atAlign: at.h,\n    offset: offset.h,\n    collision: collision.h,\n    boundaryOffset: boundaryOffset.h\n  };\n  var v = {\n    mySize: $what.outerHeight(),\n    myAlign: my.v,\n    atAlign: at.v,\n    offset: offset.v,\n    collision: collision.v,\n    boundaryOffset: boundaryOffset.v\n  };\n\n  if (of.preventDefault) {\n    h.atLocation = of.pageX;\n    v.atLocation = of.pageY;\n    h.atSize = 0;\n    v.atSize = 0;\n  } else {\n    of = $(of);\n\n    if (isWindow(of[0])) {\n      h.atLocation = of.scrollLeft();\n      v.atLocation = of.scrollTop();\n\n      if (\"phone\" === devices.real().deviceType && of[0].visualViewport) {\n        h.atLocation = Math.max(h.atLocation, of[0].visualViewport.offsetLeft);\n        v.atLocation = Math.max(v.atLocation, of[0].visualViewport.offsetTop);\n        h.atSize = of[0].visualViewport.width;\n        v.atSize = of[0].visualViewport.height;\n      } else {\n        h.atSize = of[0].innerWidth > of[0].outerWidth ? of[0].innerWidth : of.width();\n        v.atSize = of[0].innerHeight > of[0].outerHeight || IS_SAFARI ? of[0].innerHeight : of.height();\n      }\n    } else if (9 === of[0].nodeType) {\n      h.atLocation = 0;\n      v.atLocation = 0;\n      h.atSize = of.width();\n      v.atSize = of.height();\n    } else {\n      var ofRect = getBoundingRect(of.get(0));\n      var o = getOffsetWithoutScale(of);\n      h.atLocation = o.left;\n      v.atLocation = o.top;\n      h.atSize = Math.max(ofRect.width, of.outerWidth());\n      v.atSize = Math.max(ofRect.height, of.outerHeight());\n    }\n  }\n\n  initMyLocation(h);\n  initMyLocation(v);\n\n  var bounds = function () {\n    var win = $(window);\n    var windowWidth = win.width();\n    var windowHeight = win.height();\n    var left = win.scrollLeft();\n    var top = win.scrollTop();\n    var documentElement = domAdapter.getDocumentElement();\n    var hZoomLevel = touch ? documentElement.clientWidth / windowWidth : 1;\n    var vZoomLevel = touch ? documentElement.clientHeight / windowHeight : 1;\n\n    if (void 0 === scrollbarWidth) {\n      calculateScrollbarWidth();\n    }\n\n    var boundaryWidth = windowWidth;\n    var boundaryHeight = windowHeight;\n\n    if (boundary) {\n      var $boundary = $(boundary);\n      var boundaryPosition = $boundary.offset();\n      left = boundaryPosition.left;\n      top = boundaryPosition.top;\n      boundaryWidth = $boundary.width();\n      boundaryHeight = $boundary.height();\n    }\n\n    return {\n      h: {\n        min: left + h.boundaryOffset,\n        max: left + boundaryWidth / hZoomLevel - h.mySize - h.boundaryOffset\n      },\n      v: {\n        min: top + v.boundaryOffset,\n        max: top + boundaryHeight / vZoomLevel - v.mySize - v.boundaryOffset\n      }\n    };\n  }();\n\n  h.oversize = calculateOversize(h, bounds.h);\n  v.oversize = calculateOversize(v, bounds.v);\n  h.collisionSide = collisionSide(\"h\", h, bounds.h);\n  v.collisionSide = collisionSide(\"v\", v, bounds.v);\n\n  if (collisionResolvers[h.collision]) {\n    collisionResolvers[h.collision](h, bounds.h);\n  }\n\n  if (collisionResolvers[v.collision]) {\n    collisionResolvers[v.collision](v, bounds.v);\n  }\n\n  var preciser = function (number) {\n    return options.precise ? number : Math.round(number);\n  };\n\n  extend(true, result, {\n    h: {\n      location: preciser(h.myLocation),\n      oversize: preciser(h.oversize),\n      fit: h.fit,\n      flip: h.flip,\n      collisionSide: h.collisionSide\n    },\n    v: {\n      location: preciser(v.myLocation),\n      oversize: preciser(v.oversize),\n      fit: v.fit,\n      flip: v.flip,\n      collisionSide: v.collisionSide\n    },\n    precise: options.precise\n  });\n  return result;\n};\n\nvar getOffsetWithoutScale = function getOffsetWithoutScale($startElement) {\n  var _currentElement$getAt, _style$match;\n\n  var $currentElement = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : $startElement;\n  var currentElement = $currentElement.get(0);\n\n  if (!currentElement) {\n    return $startElement.offset();\n  }\n\n  var style = (null === (_currentElement$getAt = currentElement.getAttribute) || void 0 === _currentElement$getAt ? void 0 : _currentElement$getAt.call(currentElement, \"style\")) || \"\";\n  var scale = null === (_style$match = style.match(scaleRe)) || void 0 === _style$match ? void 0 : _style$match[0];\n  var offset;\n\n  if (scale) {\n    currentElement.setAttribute(\"style\", style.replace(scale, \"\"));\n    offset = getOffsetWithoutScale($startElement, $currentElement.parent());\n    currentElement.setAttribute(\"style\", style);\n  } else {\n    offset = getOffsetWithoutScale($startElement, $currentElement.parent());\n  }\n\n  return offset;\n};\n\nvar position = function (what, options) {\n  var $what = $(what);\n\n  if (!options) {\n    return $what.offset();\n  }\n\n  resetPosition($what, true);\n  var offset = getOffsetWithoutScale($what);\n  var targetPosition = options.h && options.v ? options : calculatePosition($what, options);\n\n  var preciser = function (number) {\n    return options.precise ? number : Math.round(number);\n  };\n\n  move($what, {\n    left: targetPosition.h.location - preciser(offset.left),\n    top: targetPosition.v.location - preciser(offset.top)\n  });\n  return targetPosition;\n};\n\nvar offset = function (element) {\n  element = $(element).get(0);\n\n  if (isWindow(element)) {\n    return null;\n  } else if (element && \"pageY\" in element && \"pageX\" in element) {\n    return {\n      top: element.pageY,\n      left: element.pageX\n    };\n  }\n\n  return $(element).offset();\n};\n\nif (!position.inverseAlign) {\n  position.inverseAlign = inverseAlign;\n}\n\nif (!position.normalizeAlign) {\n  position.normalizeAlign = normalizeAlign;\n}\n\nexport default {\n  calculateScrollbarWidth: calculateScrollbarWidth,\n  calculate: calculatePosition,\n  setup: position,\n  offset: offset\n};","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/node_modules/devextreme/esm/animation/position.js"],"names":["$","splitPair","pairToObject","each","getWindow","window","domAdapter","isWindow","extend","getBoundingRect","browser","resetPosition","move","touch","devices","horzRe","vertRe","collisionRe","scaleRe","IS_SAFARI","safari","normalizeAlign","raw","result","h","v","pair","w","String","toLowerCase","test","normalizeOffset","normalizeCollision","getAlignFactor","align","inverseAlign","calculateOversize","data","bounds","oversize","myLocation","min","max","collisionSide","direction","initMyLocation","atLocation","atAlign","atSize","myAlign","mySize","offset","collisionResolvers","fit","flip","inverseData","flipfit","none","scrollbarWidth","calculateScrollbarWidth","$scrollDiv","css","width","height","overflow","position","top","appendTo","get","offsetWidth","clientWidth","remove","defaultPositionResult","location","calculatePosition","what","options","$what","currentOffset","left","my","at","of","length","collision","boundary","boundaryOffset","outerWidth","outerHeight","preventDefault","pageX","pageY","scrollLeft","scrollTop","real","deviceType","visualViewport","Math","offsetLeft","offsetTop","innerWidth","innerHeight","nodeType","ofRect","o","getOffsetWithoutScale","win","windowWidth","windowHeight","documentElement","getDocumentElement","hZoomLevel","vZoomLevel","clientHeight","boundaryWidth","boundaryHeight","$boundary","boundaryPosition","preciser","number","precise","round","$startElement","_currentElement$getAt","_style$match","$currentElement","arguments","currentElement","style","getAttribute","call","scale","match","setAttribute","replace","parent","targetPosition","element","calculate","setup"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/animation/position.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport {\r\n    splitPair,\r\n    pairToObject\r\n} from \"../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nvar window = getWindow();\r\nimport domAdapter from \"../core/dom_adapter\";\r\nimport {\r\n    isWindow\r\n} from \"../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../core/utils/position\";\r\nimport browser from \"../core/utils/browser\";\r\nimport {\r\n    resetPosition,\r\n    move\r\n} from \"./translator\";\r\nimport {\r\n    touch\r\n} from \"../core/utils/support\";\r\nimport devices from \"../core/devices\";\r\nvar horzRe = /left|right/;\r\nvar vertRe = /top|bottom/;\r\nvar collisionRe = /fit|flip|none/;\r\nvar scaleRe = /scale(.+)/;\r\nvar IS_SAFARI = browser.safari;\r\nvar normalizeAlign = function(raw) {\r\n    var result = {\r\n        h: \"center\",\r\n        v: \"center\"\r\n    };\r\n    var pair = splitPair(raw);\r\n    if (pair) {\r\n        each(pair, (function() {\r\n            var w = String(this).toLowerCase();\r\n            if (horzRe.test(w)) {\r\n                result.h = w\r\n            } else if (vertRe.test(w)) {\r\n                result.v = w\r\n            }\r\n        }))\r\n    }\r\n    return result\r\n};\r\nvar normalizeOffset = function(raw) {\r\n    return pairToObject(raw)\r\n};\r\nvar normalizeCollision = function(raw) {\r\n    var pair = splitPair(raw);\r\n    var h = String(pair && pair[0]).toLowerCase();\r\n    var v = String(pair && pair[1]).toLowerCase();\r\n    if (!collisionRe.test(h)) {\r\n        h = \"none\"\r\n    }\r\n    if (!collisionRe.test(v)) {\r\n        v = h\r\n    }\r\n    return {\r\n        h: h,\r\n        v: v\r\n    }\r\n};\r\nvar getAlignFactor = function(align) {\r\n    switch (align) {\r\n        case \"center\":\r\n            return .5;\r\n        case \"right\":\r\n        case \"bottom\":\r\n            return 1;\r\n        default:\r\n            return 0\r\n    }\r\n};\r\nvar inverseAlign = function(align) {\r\n    switch (align) {\r\n        case \"left\":\r\n            return \"right\";\r\n        case \"right\":\r\n            return \"left\";\r\n        case \"top\":\r\n            return \"bottom\";\r\n        case \"bottom\":\r\n            return \"top\";\r\n        default:\r\n            return align\r\n    }\r\n};\r\nvar calculateOversize = function(data, bounds) {\r\n    var oversize = 0;\r\n    if (data.myLocation < bounds.min) {\r\n        oversize += bounds.min - data.myLocation\r\n    }\r\n    if (data.myLocation > bounds.max) {\r\n        oversize += data.myLocation - bounds.max\r\n    }\r\n    return oversize\r\n};\r\nvar collisionSide = function(direction, data, bounds) {\r\n    if (data.myLocation < bounds.min) {\r\n        return \"h\" === direction ? \"left\" : \"top\"\r\n    }\r\n    if (data.myLocation > bounds.max) {\r\n        return \"h\" === direction ? \"right\" : \"bottom\"\r\n    }\r\n    return \"none\"\r\n};\r\nvar initMyLocation = function(data) {\r\n    data.myLocation = data.atLocation + getAlignFactor(data.atAlign) * data.atSize - getAlignFactor(data.myAlign) * data.mySize + data.offset\r\n};\r\nvar collisionResolvers = {\r\n    fit: function(data, bounds) {\r\n        var result = false;\r\n        if (data.myLocation > bounds.max) {\r\n            data.myLocation = bounds.max;\r\n            result = true\r\n        }\r\n        if (data.myLocation < bounds.min) {\r\n            data.myLocation = bounds.min;\r\n            result = true\r\n        }\r\n        data.fit = result\r\n    },\r\n    flip: function(data, bounds) {\r\n        data.flip = false;\r\n        if (\"center\" === data.myAlign && \"center\" === data.atAlign) {\r\n            return\r\n        }\r\n        if (data.myLocation < bounds.min || data.myLocation > bounds.max) {\r\n            var inverseData = extend({}, data, {\r\n                myAlign: inverseAlign(data.myAlign),\r\n                atAlign: inverseAlign(data.atAlign),\r\n                offset: -data.offset\r\n            });\r\n            initMyLocation(inverseData);\r\n            inverseData.oversize = calculateOversize(inverseData, bounds);\r\n            if (inverseData.myLocation >= bounds.min && inverseData.myLocation <= bounds.max || data.oversize > inverseData.oversize) {\r\n                data.myLocation = inverseData.myLocation;\r\n                data.oversize = inverseData.oversize;\r\n                data.flip = true\r\n            }\r\n        }\r\n    },\r\n    flipfit: function(data, bounds) {\r\n        this.flip(data, bounds);\r\n        this.fit(data, bounds)\r\n    },\r\n    none: function(data) {\r\n        data.oversize = 0\r\n    }\r\n};\r\nvar scrollbarWidth;\r\nvar calculateScrollbarWidth = function() {\r\n    var $scrollDiv = $(\"<div>\").css({\r\n        width: 100,\r\n        height: 100,\r\n        overflow: \"scroll\",\r\n        position: \"absolute\",\r\n        top: -9999\r\n    }).appendTo($(\"body\"));\r\n    var result = $scrollDiv.get(0).offsetWidth - $scrollDiv.get(0).clientWidth;\r\n    $scrollDiv.remove();\r\n    scrollbarWidth = result\r\n};\r\nvar defaultPositionResult = {\r\n    h: {\r\n        location: 0,\r\n        flip: false,\r\n        fit: false,\r\n        oversize: 0\r\n    },\r\n    v: {\r\n        location: 0,\r\n        flip: false,\r\n        fit: false,\r\n        oversize: 0\r\n    }\r\n};\r\nvar calculatePosition = function(what, options) {\r\n    var $what = $(what);\r\n    var currentOffset = $what.offset();\r\n    var result = extend(true, {}, defaultPositionResult, {\r\n        h: {\r\n            location: currentOffset.left\r\n        },\r\n        v: {\r\n            location: currentOffset.top\r\n        }\r\n    });\r\n    if (!options) {\r\n        return result\r\n    }\r\n    var my = normalizeAlign(options.my);\r\n    var at = normalizeAlign(options.at);\r\n    var of = $(options.of).length && options.of || window;\r\n    var offset = normalizeOffset(options.offset);\r\n    var collision = normalizeCollision(options.collision);\r\n    var boundary = options.boundary;\r\n    var boundaryOffset = normalizeOffset(options.boundaryOffset);\r\n    var h = {\r\n        mySize: $what.outerWidth(),\r\n        myAlign: my.h,\r\n        atAlign: at.h,\r\n        offset: offset.h,\r\n        collision: collision.h,\r\n        boundaryOffset: boundaryOffset.h\r\n    };\r\n    var v = {\r\n        mySize: $what.outerHeight(),\r\n        myAlign: my.v,\r\n        atAlign: at.v,\r\n        offset: offset.v,\r\n        collision: collision.v,\r\n        boundaryOffset: boundaryOffset.v\r\n    };\r\n    if ( of .preventDefault) {\r\n        h.atLocation = of .pageX;\r\n        v.atLocation = of .pageY;\r\n        h.atSize = 0;\r\n        v.atSize = 0\r\n    } else {\r\n        of = $( of );\r\n        if (isWindow( of [0])) {\r\n            h.atLocation = of .scrollLeft();\r\n            v.atLocation = of .scrollTop();\r\n            if (\"phone\" === devices.real().deviceType && of [0].visualViewport) {\r\n                h.atLocation = Math.max(h.atLocation, of [0].visualViewport.offsetLeft);\r\n                v.atLocation = Math.max(v.atLocation, of [0].visualViewport.offsetTop);\r\n                h.atSize = of [0].visualViewport.width;\r\n                v.atSize = of [0].visualViewport.height\r\n            } else {\r\n                h.atSize = of [0].innerWidth > of [0].outerWidth ? of [0].innerWidth : of .width();\r\n                v.atSize = of [0].innerHeight > of [0].outerHeight || IS_SAFARI ? of [0].innerHeight : of .height()\r\n            }\r\n        } else if (9 === of [0].nodeType) {\r\n            h.atLocation = 0;\r\n            v.atLocation = 0;\r\n            h.atSize = of .width();\r\n            v.atSize = of .height()\r\n        } else {\r\n            var ofRect = getBoundingRect( of .get(0));\r\n            var o = getOffsetWithoutScale( of );\r\n            h.atLocation = o.left;\r\n            v.atLocation = o.top;\r\n            h.atSize = Math.max(ofRect.width, of .outerWidth());\r\n            v.atSize = Math.max(ofRect.height, of .outerHeight())\r\n        }\r\n    }\r\n    initMyLocation(h);\r\n    initMyLocation(v);\r\n    var bounds = function() {\r\n        var win = $(window);\r\n        var windowWidth = win.width();\r\n        var windowHeight = win.height();\r\n        var left = win.scrollLeft();\r\n        var top = win.scrollTop();\r\n        var documentElement = domAdapter.getDocumentElement();\r\n        var hZoomLevel = touch ? documentElement.clientWidth / windowWidth : 1;\r\n        var vZoomLevel = touch ? documentElement.clientHeight / windowHeight : 1;\r\n        if (void 0 === scrollbarWidth) {\r\n            calculateScrollbarWidth()\r\n        }\r\n        var boundaryWidth = windowWidth;\r\n        var boundaryHeight = windowHeight;\r\n        if (boundary) {\r\n            var $boundary = $(boundary);\r\n            var boundaryPosition = $boundary.offset();\r\n            left = boundaryPosition.left;\r\n            top = boundaryPosition.top;\r\n            boundaryWidth = $boundary.width();\r\n            boundaryHeight = $boundary.height()\r\n        }\r\n        return {\r\n            h: {\r\n                min: left + h.boundaryOffset,\r\n                max: left + boundaryWidth / hZoomLevel - h.mySize - h.boundaryOffset\r\n            },\r\n            v: {\r\n                min: top + v.boundaryOffset,\r\n                max: top + boundaryHeight / vZoomLevel - v.mySize - v.boundaryOffset\r\n            }\r\n        }\r\n    }();\r\n    h.oversize = calculateOversize(h, bounds.h);\r\n    v.oversize = calculateOversize(v, bounds.v);\r\n    h.collisionSide = collisionSide(\"h\", h, bounds.h);\r\n    v.collisionSide = collisionSide(\"v\", v, bounds.v);\r\n    if (collisionResolvers[h.collision]) {\r\n        collisionResolvers[h.collision](h, bounds.h)\r\n    }\r\n    if (collisionResolvers[v.collision]) {\r\n        collisionResolvers[v.collision](v, bounds.v)\r\n    }\r\n    var preciser = function(number) {\r\n        return options.precise ? number : Math.round(number)\r\n    };\r\n    extend(true, result, {\r\n        h: {\r\n            location: preciser(h.myLocation),\r\n            oversize: preciser(h.oversize),\r\n            fit: h.fit,\r\n            flip: h.flip,\r\n            collisionSide: h.collisionSide\r\n        },\r\n        v: {\r\n            location: preciser(v.myLocation),\r\n            oversize: preciser(v.oversize),\r\n            fit: v.fit,\r\n            flip: v.flip,\r\n            collisionSide: v.collisionSide\r\n        },\r\n        precise: options.precise\r\n    });\r\n    return result\r\n};\r\nvar getOffsetWithoutScale = function getOffsetWithoutScale($startElement) {\r\n    var _currentElement$getAt, _style$match;\r\n    var $currentElement = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : $startElement;\r\n    var currentElement = $currentElement.get(0);\r\n    if (!currentElement) {\r\n        return $startElement.offset()\r\n    }\r\n    var style = (null === (_currentElement$getAt = currentElement.getAttribute) || void 0 === _currentElement$getAt ? void 0 : _currentElement$getAt.call(currentElement, \"style\")) || \"\";\r\n    var scale = null === (_style$match = style.match(scaleRe)) || void 0 === _style$match ? void 0 : _style$match[0];\r\n    var offset;\r\n    if (scale) {\r\n        currentElement.setAttribute(\"style\", style.replace(scale, \"\"));\r\n        offset = getOffsetWithoutScale($startElement, $currentElement.parent());\r\n        currentElement.setAttribute(\"style\", style)\r\n    } else {\r\n        offset = getOffsetWithoutScale($startElement, $currentElement.parent())\r\n    }\r\n    return offset\r\n};\r\nvar position = function(what, options) {\r\n    var $what = $(what);\r\n    if (!options) {\r\n        return $what.offset()\r\n    }\r\n    resetPosition($what, true);\r\n    var offset = getOffsetWithoutScale($what);\r\n    var targetPosition = options.h && options.v ? options : calculatePosition($what, options);\r\n    var preciser = function(number) {\r\n        return options.precise ? number : Math.round(number)\r\n    };\r\n    move($what, {\r\n        left: targetPosition.h.location - preciser(offset.left),\r\n        top: targetPosition.v.location - preciser(offset.top)\r\n    });\r\n    return targetPosition\r\n};\r\nvar offset = function(element) {\r\n    element = $(element).get(0);\r\n    if (isWindow(element)) {\r\n        return null\r\n    } else if (element && \"pageY\" in element && \"pageX\" in element) {\r\n        return {\r\n            top: element.pageY,\r\n            left: element.pageX\r\n        }\r\n    }\r\n    return $(element).offset()\r\n};\r\nif (!position.inverseAlign) {\r\n    position.inverseAlign = inverseAlign\r\n}\r\nif (!position.normalizeAlign) {\r\n    position.normalizeAlign = normalizeAlign\r\n}\r\nexport default {\r\n    calculateScrollbarWidth: calculateScrollbarWidth,\r\n    calculate: calculatePosition,\r\n    setup: position,\r\n    offset: offset\r\n};\r\n"]},"metadata":{},"sourceType":"module"}