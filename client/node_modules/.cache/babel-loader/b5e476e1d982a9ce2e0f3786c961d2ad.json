{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/pager/content.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"defaultPageIndex\", \"defaultPageSize\", \"displayMode\", \"gridCompatibility\", \"hasKnownLastPage\", \"infoText\", \"infoTextRef\", \"infoTextVisible\", \"isLargeDisplayMode\", \"lightModeEnabled\", \"maxPagesCount\", \"onKeyDown\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"pageSizesRef\", \"pagesCountText\", \"pagesNavigatorVisible\", \"pagesRef\", \"rootElementRef\", \"rtlEnabled\", \"showInfo\", \"showNavigationButtons\", \"showPageSizes\", \"totalCount\", \"visible\"];\nimport { createVNode, createComponentVNode, normalizeProps } from \"inferno\";\nimport { InfernoEffect, InfernoComponent, normalizeStyles } from \"@devextreme/vdom\";\nimport { InfoText } from \"./info\";\nimport { PageIndexSelector } from \"./pages/page_index_selector\";\nimport { PageSizeSelector } from \"./page_size/selector\";\nimport { PAGER_PAGES_CLASS, PAGER_PAGE_INDEXES_CLASS, LIGHT_MODE_CLASS, PAGER_CLASS } from \"./common/consts\";\nimport { PagerProps } from \"./common/pager_props\";\nimport { combineClasses } from \"../../utils/combine_classes\";\nimport { Widget } from \"../common/widget\";\nimport { registerKeyboardAction as _registerKeyboardAction } from \"../../../ui/shared/accessibility\";\nexport var viewFunction = _ref => {\n  var {\n    classes: classes,\n    infoVisible: infoVisible,\n    isLargeDisplayMode: isLargeDisplayMode,\n    pageIndexSelectorVisible: pageIndexSelectorVisible,\n    pagesContainerVisibility: pagesContainerVisibility,\n    pagesContainerVisible: pagesContainerVisible,\n    props: {\n      hasKnownLastPage: hasKnownLastPage,\n      infoText: infoText,\n      infoTextRef: infoTextRef,\n      maxPagesCount: maxPagesCount,\n      pageCount: pageCount,\n      pageIndex: pageIndex,\n      pageIndexChange: pageIndexChange,\n      pageSize: pageSize,\n      pageSizeChange: pageSizeChange,\n      pageSizes: pageSizes,\n      pageSizesRef: pageSizesRef,\n      pagesCountText: pagesCountText,\n      pagesRef: pagesRef,\n      rtlEnabled: rtlEnabled,\n      showNavigationButtons: showNavigationButtons,\n      showPageSizes: showPageSizes,\n      totalCount: totalCount,\n      visible: visible\n    },\n    restAttributes: restAttributes,\n    widgetRootElementRef: widgetRootElementRef\n  } = _ref;\n  return normalizeProps(createComponentVNode(2, Widget, _extends({\n    rootElementRef: widgetRootElementRef,\n    rtlEnabled: rtlEnabled,\n    classes: classes,\n    visible: visible\n  }, restAttributes, {\n    children: [showPageSizes && createComponentVNode(2, PageSizeSelector, {\n      rootElementRef: pageSizesRef,\n      isLargeDisplayMode: isLargeDisplayMode,\n      pageSize: pageSize,\n      pageSizeChange: pageSizeChange,\n      pageSizes: pageSizes\n    }), pagesContainerVisible && createVNode(1, \"div\", PAGER_PAGES_CLASS, [infoVisible && createComponentVNode(2, InfoText, {\n      rootElementRef: infoTextRef,\n      infoText: infoText,\n      pageCount: pageCount,\n      pageIndex: pageIndex,\n      totalCount: totalCount\n    }), pageIndexSelectorVisible && createVNode(1, \"div\", PAGER_PAGE_INDEXES_CLASS, createComponentVNode(2, PageIndexSelector, {\n      hasKnownLastPage: hasKnownLastPage,\n      isLargeDisplayMode: isLargeDisplayMode,\n      maxPagesCount: maxPagesCount,\n      pageCount: pageCount,\n      pageIndex: pageIndex,\n      pageIndexChange: pageIndexChange,\n      pagesCountText: pagesCountText,\n      showNavigationButtons: showNavigationButtons,\n      totalCount: totalCount\n    }), 2, null, null, pagesRef)], 0, {\n      style: normalizeStyles({\n        visibility: pagesContainerVisibility\n      })\n    })]\n  })));\n};\nexport var PagerContentProps = _extends({}, PagerProps, {\n  infoTextVisible: true,\n  isLargeDisplayMode: true\n});\nimport { createRef as infernoCreateRef } from \"inferno\";\nexport class PagerContent extends InfernoComponent {\n  constructor(props) {\n    super(props);\n    this._currentState = null;\n    this.widgetRootElementRef = infernoCreateRef();\n    this.state = {\n      pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.props.defaultPageIndex,\n      pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.props.defaultPageSize\n    };\n    this.createFakeInstance = this.createFakeInstance.bind(this);\n    this.setRootElementRef = this.setRootElementRef.bind(this);\n  }\n\n  createEffects() {\n    return [new InfernoEffect(this.setRootElementRef, [])];\n  }\n\n  updateEffects() {}\n\n  get __state_pageIndex() {\n    var state = this._currentState || this.state;\n    return void 0 !== this.props.pageIndex ? this.props.pageIndex : state.pageIndex;\n  }\n\n  set_pageIndex(value) {\n    this.setState(state => {\n      var _this$props$pageIndex, _this$props;\n\n      this._currentState = state;\n      var newValue = value();\n      null === (_this$props$pageIndex = (_this$props = this.props).pageIndexChange) || void 0 === _this$props$pageIndex ? void 0 : _this$props$pageIndex.call(_this$props, newValue);\n      this._currentState = null;\n      return {\n        pageIndex: newValue\n      };\n    });\n  }\n\n  get __state_pageSize() {\n    var state = this._currentState || this.state;\n    return void 0 !== this.props.pageSize ? this.props.pageSize : state.pageSize;\n  }\n\n  set_pageSize(value) {\n    this.setState(state => {\n      var _this$props$pageSizeC, _this$props2;\n\n      this._currentState = state;\n      var newValue = value();\n      null === (_this$props$pageSizeC = (_this$props2 = this.props).pageSizeChange) || void 0 === _this$props$pageSizeC ? void 0 : _this$props$pageSizeC.call(_this$props2, newValue);\n      this._currentState = null;\n      return {\n        pageSize: newValue\n      };\n    });\n  }\n\n  getChildContext() {\n    return _extends({}, this.context, {\n      KeyboardActionContext: this.keyboardAction\n    });\n  }\n\n  setRootElementRef() {\n    var {\n      rootElementRef: rootElementRef\n    } = this.props;\n\n    if (rootElementRef) {\n      rootElementRef.current = this.widgetRootElementRef.current;\n    }\n  }\n\n  createFakeInstance() {\n    return {\n      option: () => false,\n      element: () => this.widgetRootElementRef.current,\n      _createActionByOption: () => e => {\n        var _this$props$onKeyDown, _this$props3;\n\n        null === (_this$props$onKeyDown = (_this$props3 = this.props).onKeyDown) || void 0 === _this$props$onKeyDown ? void 0 : _this$props$onKeyDown.call(_this$props3, e);\n      }\n    };\n  }\n\n  get keyboardAction() {\n    return {\n      registerKeyboardAction: (element, action) => {\n        var fakePagerInstance = this.createFakeInstance();\n        return _registerKeyboardAction(\"pager\", fakePagerInstance, element, void 0, action);\n      }\n    };\n  }\n\n  get infoVisible() {\n    var {\n      infoTextVisible: infoTextVisible,\n      showInfo: showInfo\n    } = this.props;\n    return showInfo && infoTextVisible && this.isLargeDisplayMode;\n  }\n\n  get pageIndexSelectorVisible() {\n    return 0 !== this.__state_pageSize;\n  }\n\n  get normalizedDisplayMode() {\n    var {\n      displayMode: displayMode,\n      lightModeEnabled: lightModeEnabled\n    } = this.props;\n\n    if (\"adaptive\" === displayMode && void 0 !== lightModeEnabled) {\n      return lightModeEnabled ? \"compact\" : \"full\";\n    }\n\n    return displayMode;\n  }\n\n  get pagesContainerVisible() {\n    return !!this.props.pagesNavigatorVisible && this.props.pageCount > 0;\n  }\n\n  get pagesContainerVisibility() {\n    if (\"auto\" === this.props.pagesNavigatorVisible && 1 === this.props.pageCount && this.props.hasKnownLastPage) {\n      return \"hidden\";\n    }\n\n    return;\n  }\n\n  get isLargeDisplayMode() {\n    var displayMode = this.normalizedDisplayMode;\n    var result = false;\n\n    if (\"adaptive\" === displayMode) {\n      result = this.props.isLargeDisplayMode;\n    } else {\n      result = \"full\" === displayMode;\n    }\n\n    return result;\n  }\n\n  get classes() {\n    var classesMap = {\n      [\"\".concat(this.props.className)]: !!this.props.className,\n      [PAGER_CLASS]: true,\n      [LIGHT_MODE_CLASS]: !this.isLargeDisplayMode\n    };\n    return combineClasses(classesMap);\n  }\n\n  get restAttributes() {\n    var _this$props$pageIndex2 = _extends({}, this.props, {\n      pageIndex: this.__state_pageIndex,\n      pageSize: this.__state_pageSize\n    }),\n        restProps = _objectWithoutPropertiesLoose(_this$props$pageIndex2, _excluded);\n\n    return restProps;\n  }\n\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props, {\n        pageIndex: this.__state_pageIndex,\n        pageSize: this.__state_pageSize\n      }),\n      widgetRootElementRef: this.widgetRootElementRef,\n      keyboardAction: this.keyboardAction,\n      infoVisible: this.infoVisible,\n      pageIndexSelectorVisible: this.pageIndexSelectorVisible,\n      pagesContainerVisible: this.pagesContainerVisible,\n      pagesContainerVisibility: this.pagesContainerVisibility,\n      isLargeDisplayMode: this.isLargeDisplayMode,\n      classes: this.classes,\n      restAttributes: this.restAttributes\n    });\n  }\n\n}\nPagerContent.defaultProps = _extends({}, PagerContentProps);","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/node_modules/devextreme/esm/renovation/ui/pager/content.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","createVNode","createComponentVNode","normalizeProps","InfernoEffect","InfernoComponent","normalizeStyles","InfoText","PageIndexSelector","PageSizeSelector","PAGER_PAGES_CLASS","PAGER_PAGE_INDEXES_CLASS","LIGHT_MODE_CLASS","PAGER_CLASS","PagerProps","combineClasses","Widget","registerKeyboardAction","_registerKeyboardAction","viewFunction","_ref","classes","infoVisible","isLargeDisplayMode","pageIndexSelectorVisible","pagesContainerVisibility","pagesContainerVisible","props","hasKnownLastPage","infoText","infoTextRef","maxPagesCount","pageCount","pageIndex","pageIndexChange","pageSize","pageSizeChange","pageSizes","pageSizesRef","pagesCountText","pagesRef","rtlEnabled","showNavigationButtons","showPageSizes","totalCount","visible","restAttributes","widgetRootElementRef","rootElementRef","children","style","visibility","PagerContentProps","infoTextVisible","createRef","infernoCreateRef","PagerContent","constructor","_currentState","state","defaultPageIndex","defaultPageSize","createFakeInstance","bind","setRootElementRef","createEffects","updateEffects","__state_pageIndex","set_pageIndex","value","setState","_this$props$pageIndex","_this$props","newValue","call","__state_pageSize","set_pageSize","_this$props$pageSizeC","_this$props2","getChildContext","context","KeyboardActionContext","keyboardAction","current","option","element","_createActionByOption","e","_this$props$onKeyDown","_this$props3","onKeyDown","action","fakePagerInstance","showInfo","normalizedDisplayMode","displayMode","lightModeEnabled","pagesNavigatorVisible","result","classesMap","concat","className","_this$props$pageIndex2","restProps","render","defaultProps"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/pager/content.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"className\", \"defaultPageIndex\", \"defaultPageSize\", \"displayMode\", \"gridCompatibility\", \"hasKnownLastPage\", \"infoText\", \"infoTextRef\", \"infoTextVisible\", \"isLargeDisplayMode\", \"lightModeEnabled\", \"maxPagesCount\", \"onKeyDown\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"pageSizesRef\", \"pagesCountText\", \"pagesNavigatorVisible\", \"pagesRef\", \"rootElementRef\", \"rtlEnabled\", \"showInfo\", \"showNavigationButtons\", \"showPageSizes\", \"totalCount\", \"visible\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent,\r\n    normalizeStyles\r\n} from \"@devextreme/vdom\";\r\nimport {\r\n    InfoText\r\n} from \"./info\";\r\nimport {\r\n    PageIndexSelector\r\n} from \"./pages/page_index_selector\";\r\nimport {\r\n    PageSizeSelector\r\n} from \"./page_size/selector\";\r\nimport {\r\n    PAGER_PAGES_CLASS,\r\n    PAGER_PAGE_INDEXES_CLASS,\r\n    LIGHT_MODE_CLASS,\r\n    PAGER_CLASS\r\n} from \"./common/consts\";\r\nimport {\r\n    PagerProps\r\n} from \"./common/pager_props\";\r\nimport {\r\n    combineClasses\r\n} from \"../../utils/combine_classes\";\r\nimport {\r\n    Widget\r\n} from \"../common/widget\";\r\nimport {\r\n    registerKeyboardAction as _registerKeyboardAction\r\n} from \"../../../ui/shared/accessibility\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        classes: classes,\r\n        infoVisible: infoVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode,\r\n        pageIndexSelectorVisible: pageIndexSelectorVisible,\r\n        pagesContainerVisibility: pagesContainerVisibility,\r\n        pagesContainerVisible: pagesContainerVisible,\r\n        props: {\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            infoText: infoText,\r\n            infoTextRef: infoTextRef,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes,\r\n            pageSizesRef: pageSizesRef,\r\n            pagesCountText: pagesCountText,\r\n            pagesRef: pagesRef,\r\n            rtlEnabled: rtlEnabled,\r\n            showNavigationButtons: showNavigationButtons,\r\n            showPageSizes: showPageSizes,\r\n            totalCount: totalCount,\r\n            visible: visible\r\n        },\r\n        restAttributes: restAttributes,\r\n        widgetRootElementRef: widgetRootElementRef\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, Widget, _extends({\r\n        rootElementRef: widgetRootElementRef,\r\n        rtlEnabled: rtlEnabled,\r\n        classes: classes,\r\n        visible: visible\r\n    }, restAttributes, {\r\n        children: [showPageSizes && createComponentVNode(2, PageSizeSelector, {\r\n            rootElementRef: pageSizesRef,\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes\r\n        }), pagesContainerVisible && createVNode(1, \"div\", PAGER_PAGES_CLASS, [infoVisible && createComponentVNode(2, InfoText, {\r\n            rootElementRef: infoTextRef,\r\n            infoText: infoText,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            totalCount: totalCount\r\n        }), pageIndexSelectorVisible && createVNode(1, \"div\", PAGER_PAGE_INDEXES_CLASS, createComponentVNode(2, PageIndexSelector, {\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pagesCountText: pagesCountText,\r\n            showNavigationButtons: showNavigationButtons,\r\n            totalCount: totalCount\r\n        }), 2, null, null, pagesRef)], 0, {\r\n            style: normalizeStyles({\r\n                visibility: pagesContainerVisibility\r\n            })\r\n        })]\r\n    })))\r\n};\r\nexport var PagerContentProps = _extends({}, PagerProps, {\r\n    infoTextVisible: true,\r\n    isLargeDisplayMode: true\r\n});\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PagerContent extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this._currentState = null;\r\n        this.widgetRootElementRef = infernoCreateRef();\r\n        this.state = {\r\n            pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.props.defaultPageIndex,\r\n            pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.props.defaultPageSize\r\n        };\r\n        this.createFakeInstance = this.createFakeInstance.bind(this);\r\n        this.setRootElementRef = this.setRootElementRef.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.setRootElementRef, [])]\r\n    }\r\n    updateEffects() {}\r\n    get __state_pageIndex() {\r\n        var state = this._currentState || this.state;\r\n        return void 0 !== this.props.pageIndex ? this.props.pageIndex : state.pageIndex\r\n    }\r\n    set_pageIndex(value) {\r\n        this.setState(state => {\r\n            var _this$props$pageIndex, _this$props;\r\n            this._currentState = state;\r\n            var newValue = value();\r\n            null === (_this$props$pageIndex = (_this$props = this.props).pageIndexChange) || void 0 === _this$props$pageIndex ? void 0 : _this$props$pageIndex.call(_this$props, newValue);\r\n            this._currentState = null;\r\n            return {\r\n                pageIndex: newValue\r\n            }\r\n        })\r\n    }\r\n    get __state_pageSize() {\r\n        var state = this._currentState || this.state;\r\n        return void 0 !== this.props.pageSize ? this.props.pageSize : state.pageSize\r\n    }\r\n    set_pageSize(value) {\r\n        this.setState(state => {\r\n            var _this$props$pageSizeC, _this$props2;\r\n            this._currentState = state;\r\n            var newValue = value();\r\n            null === (_this$props$pageSizeC = (_this$props2 = this.props).pageSizeChange) || void 0 === _this$props$pageSizeC ? void 0 : _this$props$pageSizeC.call(_this$props2, newValue);\r\n            this._currentState = null;\r\n            return {\r\n                pageSize: newValue\r\n            }\r\n        })\r\n    }\r\n    getChildContext() {\r\n        return _extends({}, this.context, {\r\n            KeyboardActionContext: this.keyboardAction\r\n        })\r\n    }\r\n    setRootElementRef() {\r\n        var {\r\n            rootElementRef: rootElementRef\r\n        } = this.props;\r\n        if (rootElementRef) {\r\n            rootElementRef.current = this.widgetRootElementRef.current\r\n        }\r\n    }\r\n    createFakeInstance() {\r\n        return {\r\n            option: () => false,\r\n            element: () => this.widgetRootElementRef.current,\r\n            _createActionByOption: () => e => {\r\n                var _this$props$onKeyDown, _this$props3;\r\n                null === (_this$props$onKeyDown = (_this$props3 = this.props).onKeyDown) || void 0 === _this$props$onKeyDown ? void 0 : _this$props$onKeyDown.call(_this$props3, e)\r\n            }\r\n        }\r\n    }\r\n    get keyboardAction() {\r\n        return {\r\n            registerKeyboardAction: (element, action) => {\r\n                var fakePagerInstance = this.createFakeInstance();\r\n                return _registerKeyboardAction(\"pager\", fakePagerInstance, element, void 0, action)\r\n            }\r\n        }\r\n    }\r\n    get infoVisible() {\r\n        var {\r\n            infoTextVisible: infoTextVisible,\r\n            showInfo: showInfo\r\n        } = this.props;\r\n        return showInfo && infoTextVisible && this.isLargeDisplayMode\r\n    }\r\n    get pageIndexSelectorVisible() {\r\n        return 0 !== this.__state_pageSize\r\n    }\r\n    get normalizedDisplayMode() {\r\n        var {\r\n            displayMode: displayMode,\r\n            lightModeEnabled: lightModeEnabled\r\n        } = this.props;\r\n        if (\"adaptive\" === displayMode && void 0 !== lightModeEnabled) {\r\n            return lightModeEnabled ? \"compact\" : \"full\"\r\n        }\r\n        return displayMode\r\n    }\r\n    get pagesContainerVisible() {\r\n        return !!this.props.pagesNavigatorVisible && this.props.pageCount > 0\r\n    }\r\n    get pagesContainerVisibility() {\r\n        if (\"auto\" === this.props.pagesNavigatorVisible && 1 === this.props.pageCount && this.props.hasKnownLastPage) {\r\n            return \"hidden\"\r\n        }\r\n        return\r\n    }\r\n    get isLargeDisplayMode() {\r\n        var displayMode = this.normalizedDisplayMode;\r\n        var result = false;\r\n        if (\"adaptive\" === displayMode) {\r\n            result = this.props.isLargeDisplayMode\r\n        } else {\r\n            result = \"full\" === displayMode\r\n        }\r\n        return result\r\n    }\r\n    get classes() {\r\n        var classesMap = {\r\n            [\"\".concat(this.props.className)]: !!this.props.className,\r\n            [PAGER_CLASS]: true,\r\n            [LIGHT_MODE_CLASS]: !this.isLargeDisplayMode\r\n        };\r\n        return combineClasses(classesMap)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$pageIndex2 = _extends({}, this.props, {\r\n                pageIndex: this.__state_pageIndex,\r\n                pageSize: this.__state_pageSize\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$pageIndex2, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                pageIndex: this.__state_pageIndex,\r\n                pageSize: this.__state_pageSize\r\n            }),\r\n            widgetRootElementRef: this.widgetRootElementRef,\r\n            keyboardAction: this.keyboardAction,\r\n            infoVisible: this.infoVisible,\r\n            pageIndexSelectorVisible: this.pageIndexSelectorVisible,\r\n            pagesContainerVisible: this.pagesContainerVisible,\r\n            pagesContainerVisibility: this.pagesContainerVisibility,\r\n            isLargeDisplayMode: this.isLargeDisplayMode,\r\n            classes: this.classes,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagerContent.defaultProps = _extends({}, PagerContentProps);\r\n"]},"metadata":{},"sourceType":"module"}