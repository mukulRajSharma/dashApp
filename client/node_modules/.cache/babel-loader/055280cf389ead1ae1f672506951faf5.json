{"ast":null,"code":"var _jsxFileName = \"/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/src/layouts/side-nav-outer-toolbar/side-nav-outer-toolbar.js\";\nimport Drawer from 'devextreme-react/drawer';\nimport ScrollView from 'devextreme-react/scroll-view';\nimport React, { useState, useCallback, useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { Header, SideNavigationMenu, Footer } from '../../components';\nimport './side-nav-outer-toolbar.scss';\nimport { useScreenSize } from '../../utils/media-query';\nimport { Template } from 'devextreme-react/core/template';\nimport { useMenuPatch } from '../../utils/patches';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ({\n  title,\n  children\n}) {\n  const scrollViewRef = useRef();\n  const history = useHistory();\n  const {\n    isXSmall,\n    isLarge\n  } = useScreenSize();\n  const [patchCssClass, onMenuReady] = useMenuPatch();\n  const [menuStatus, setMenuStatus] = useState(isLarge ? MenuStatus.Opened : MenuStatus.Closed);\n  const toggleMenu = useCallback(({\n    event\n  }) => {\n    setMenuStatus(prevMenuStatus => prevMenuStatus === MenuStatus.Closed ? MenuStatus.Opened : MenuStatus.Closed);\n    event.stopPropagation();\n  }, []);\n  const temporaryOpenMenu = useCallback(() => {\n    setMenuStatus(prevMenuStatus => prevMenuStatus === MenuStatus.Closed ? MenuStatus.TemporaryOpened : prevMenuStatus);\n  }, []);\n  const onOutsideClick = useCallback(() => {\n    setMenuStatus(prevMenuStatus => prevMenuStatus !== MenuStatus.Closed && !isLarge ? MenuStatus.Closed : prevMenuStatus);\n  }, [isLarge]);\n  const onNavigationChanged = useCallback(({\n    itemData: {\n      path\n    },\n    event,\n    node\n  }) => {\n    if (menuStatus === MenuStatus.Closed || !path || node.selected) {\n      event.preventDefault();\n      return;\n    }\n\n    history.push(path);\n    scrollViewRef.current.instance.scrollTo(0);\n\n    if (!isLarge || menuStatus === MenuStatus.TemporaryOpened) {\n      setMenuStatus(MenuStatus.Closed);\n      event.stopPropagation();\n    }\n  }, [history, menuStatus, isLarge]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'side-nav-outer-toolbar',\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      className: 'layout-header',\n      menuToggleEnabled: true,\n      toggleMenu: toggleMenu,\n      title: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: ['drawer', patchCssClass].join(' '),\n      position: 'before',\n      closeOnOutsideClick: onOutsideClick,\n      openedStateMode: isLarge ? 'shrink' : 'overlap',\n      revealMode: isXSmall ? 'slide' : 'expand',\n      minSize: isXSmall ? 0 : 60,\n      maxSize: 250,\n      shading: isLarge ? false : true,\n      opened: menuStatus === MenuStatus.Closed ? false : true,\n      template: 'menu',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'container',\n        children: /*#__PURE__*/_jsxDEV(ScrollView, {\n          ref: scrollViewRef,\n          className: 'layout-body with-footer',\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'content',\n            children: React.Children.map(children, item => {\n              return item.type !== Footer && item;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'content-block',\n            children: React.Children.map(children, item => {\n              return item.type === Footer && item;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Template, {\n        name: 'menu',\n        children: /*#__PURE__*/_jsxDEV(SideNavigationMenu, {\n          compactMode: menuStatus === MenuStatus.Closed,\n          selectedItemChanged: onNavigationChanged,\n          openMenu: temporaryOpenMenu,\n          onMenuReady: onMenuReady\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\nconst MenuStatus = {\n  Closed: 1,\n  Opened: 2,\n  TemporaryOpened: 3\n};","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/src/layouts/side-nav-outer-toolbar/side-nav-outer-toolbar.js"],"names":["Drawer","ScrollView","React","useState","useCallback","useRef","useHistory","Header","SideNavigationMenu","Footer","useScreenSize","Template","useMenuPatch","title","children","scrollViewRef","history","isXSmall","isLarge","patchCssClass","onMenuReady","menuStatus","setMenuStatus","MenuStatus","Opened","Closed","toggleMenu","event","prevMenuStatus","stopPropagation","temporaryOpenMenu","TemporaryOpened","onOutsideClick","onNavigationChanged","itemData","path","node","selected","preventDefault","push","current","instance","scrollTo","join","Children","map","item","type"],"mappings":"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","sourcesContent":["import Drawer from 'devextreme-react/drawer';\nimport ScrollView from 'devextreme-react/scroll-view';\nimport React, { useState, useCallback, useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { Header, SideNavigationMenu, Footer } from '../../components';\nimport './side-nav-outer-toolbar.scss';\nimport { useScreenSize } from '../../utils/media-query';\nimport { Template } from 'devextreme-react/core/template';\nimport { useMenuPatch } from '../../utils/patches';\n\nexport default function ({ title, children }) {\n  const scrollViewRef = useRef();\n  const history = useHistory();\n  const { isXSmall, isLarge } = useScreenSize();\n  const [patchCssClass, onMenuReady] = useMenuPatch();\n  const [menuStatus, setMenuStatus] = useState(\n    isLarge ? MenuStatus.Opened : MenuStatus.Closed\n  );\n\n  const toggleMenu = useCallback(({ event }) => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.Opened\n        : MenuStatus.Closed\n    );\n    event.stopPropagation();\n  }, []);\n\n  const temporaryOpenMenu = useCallback(() => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.TemporaryOpened\n        : prevMenuStatus\n    );\n  }, []);\n\n  const onOutsideClick = useCallback(() => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus !== MenuStatus.Closed && !isLarge\n        ? MenuStatus.Closed\n        : prevMenuStatus\n    );\n  }, [isLarge]);\n\n  const onNavigationChanged = useCallback(({ itemData: { path }, event, node }) => {\n    if (menuStatus === MenuStatus.Closed || !path || node.selected) {\n      event.preventDefault();\n      return;\n    }\n\n    history.push(path);\n    scrollViewRef.current.instance.scrollTo(0);\n\n    if (!isLarge || menuStatus === MenuStatus.TemporaryOpened) {\n      setMenuStatus(MenuStatus.Closed);\n      event.stopPropagation();\n    }\n  }, [history, menuStatus, isLarge]);\n\n  return (\n    <div className={'side-nav-outer-toolbar'}>\n      <Header\n        className={'layout-header'}\n        menuToggleEnabled\n        toggleMenu={toggleMenu}\n        title={title}\n      />\n      <Drawer\n        className={['drawer', patchCssClass].join(' ')}\n        position={'before'}\n        closeOnOutsideClick={onOutsideClick}\n        openedStateMode={isLarge ? 'shrink' : 'overlap'}\n        revealMode={isXSmall ? 'slide' : 'expand'}\n        minSize={isXSmall ? 0 : 60}\n        maxSize={250}\n        shading={isLarge ? false : true}\n        opened={menuStatus === MenuStatus.Closed ? false : true}\n        template={'menu'}\n      >\n        <div className={'container'}>\n          <ScrollView ref={scrollViewRef} className={'layout-body with-footer'}>\n            <div className={'content'}>\n              {React.Children.map(children, item => {\n                return item.type !== Footer && item;\n              })}\n            </div>\n            <div className={'content-block'}>\n              {React.Children.map(children, item => {\n                return item.type === Footer && item;\n              })}\n            </div>\n          </ScrollView>\n        </div>\n        <Template name={'menu'}>\n          <SideNavigationMenu\n            compactMode={menuStatus === MenuStatus.Closed}\n            selectedItemChanged={onNavigationChanged}\n            openMenu={temporaryOpenMenu}\n            onMenuReady={onMenuReady}\n          >\n          </SideNavigationMenu>\n        </Template>\n      </Drawer>\n    </div>\n  );\n}\n\nconst MenuStatus = {\n  Closed: 1,\n  Opened: 2,\n  TemporaryOpened: 3\n};\n"]},"metadata":{},"sourceType":"module"}