{"ast":null,"code":"/**\r\n * DevExtreme (esm/data/odata/utils.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Class from \"../../core/class\";\nimport { extend } from \"../../core/utils/extend\";\nimport { isDefined, isPlainObject, type, isObject } from \"../../core/utils/type\";\nimport { each, map } from \"../../core/utils/iterator\";\nimport ajax from \"../../core/utils/ajax\";\nimport _Guid from \"../../core/guid\";\nimport { grep } from \"../../core/utils/common\";\nimport { Deferred } from \"../../core/utils/deferred\";\nimport { errors } from \"../errors\";\nimport { errorMessageFromXhr, XHR_ERROR_UNLOAD } from \"../utils\";\nimport { format as stringFormat } from \"../../core/utils/string\";\nvar GUID_REGEX = /^(\\{{0,1}([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}\\}{0,1})$/;\nvar VERBOSE_DATE_REGEX = /^\\/Date\\((-?\\d+)((\\+|-)?(\\d+)?)\\)\\/$/;\nvar ISO8601_DATE_REGEX = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]{1}\\d{2}(:?)(\\d{2})?)?$/;\nvar JSON_VERBOSE_MIME_TYPE = \"application/json;odata=verbose\";\n\nvar makeArray = value => \"string\" === type(value) ? value.split() : value;\n\nvar hasDot = x => /\\./.test(x);\n\nvar pad = (text, length, right) => {\n  text = String(text);\n\n  while (text.length < length) {\n    text = right ? \"\".concat(text, \"0\") : \"0\".concat(text);\n  }\n\n  return text;\n};\n\nvar formatISO8601 = (date, skipZeroTime, skipTimezone) => {\n  var bag = [];\n\n  var padLeft2 = text => pad(text, 2);\n\n  bag.push(date.getFullYear());\n  bag.push(\"-\");\n  bag.push(padLeft2(date.getMonth() + 1));\n  bag.push(\"-\");\n  bag.push(padLeft2(date.getDate()));\n\n  if (!(skipZeroTime && date.getHours() + date.getMinutes() + date.getSeconds() + date.getMilliseconds() < 1)) {\n    bag.push(\"T\");\n    bag.push(padLeft2(date.getHours()));\n    bag.push(\":\");\n    bag.push(padLeft2(date.getMinutes()));\n    bag.push(\":\");\n    bag.push(padLeft2(date.getSeconds()));\n\n    if (date.getMilliseconds()) {\n      bag.push(\".\");\n      bag.push(pad(date.getMilliseconds(), 3));\n    }\n\n    if (!skipTimezone) {\n      bag.push(\"Z\");\n    }\n  }\n\n  return bag.join(\"\");\n};\n\nvar parseISO8601 = isoString => {\n  var result = new Date(60 * new Date(0).getTimezoneOffset() * 1e3);\n  var chunks = isoString.replace(\"Z\", \"\").split(\"T\");\n  var date = /(\\d{4})-(\\d{2})-(\\d{2})/.exec(chunks[0]);\n  var time = /(\\d{2}):(\\d{2}):(\\d{2})\\.?(\\d{0,7})?/.exec(chunks[1]);\n  result.setFullYear(Number(date[1]));\n  result.setMonth(Number(date[2]) - 1);\n  result.setDate(Number(date[3]));\n\n  if (Array.isArray(time) && time.length) {\n    result.setHours(Number(time[1]));\n    result.setMinutes(Number(time[2]));\n    result.setSeconds(Number(time[3]));\n    var fractional = (time[4] || \"\").slice(0, 3);\n    fractional = pad(fractional, 3, true);\n    result.setMilliseconds(Number(fractional));\n  }\n\n  return result;\n};\n\nvar isAbsoluteUrl = url => /^(?:[a-z]+:)?\\/\\//i.test(url);\n\nvar stripParams = url => {\n  var index = url.indexOf(\"?\");\n\n  if (index > -1) {\n    return url.substr(0, index);\n  }\n\n  return url;\n};\n\nvar toAbsoluteUrl = (basePath, relativePath) => {\n  var part;\n  var baseParts = stripParams(basePath).split(\"/\");\n  var relativeParts = relativePath.split(\"/\");\n  baseParts.pop();\n\n  while (relativeParts.length) {\n    part = relativeParts.shift();\n\n    if (\"..\" === part) {\n      baseParts.pop();\n    } else {\n      baseParts.push(part);\n    }\n  }\n\n  return baseParts.join(\"/\");\n};\n\nvar param = params => {\n  var result = [];\n\n  for (var name in params) {\n    result.push(name + \"=\" + params[name]);\n  }\n\n  return result.join(\"&\");\n};\n\nvar ajaxOptionsForRequest = function (protocolVersion, request) {\n  var _options$beforeSend;\n\n  var options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n\n  var formatPayload = payload => JSON.stringify(payload, function (key, value) {\n    if (!(this[key] instanceof Date)) {\n      return value;\n    }\n\n    value = formatISO8601(this[key]);\n\n    switch (protocolVersion) {\n      case 2:\n        return value.substr(0, value.length - 1);\n\n      case 3:\n      case 4:\n        return value;\n\n      default:\n        throw errors.Error(\"E4002\");\n    }\n  });\n\n  request = extend({\n    async: true,\n    method: \"get\",\n    url: \"\",\n    params: {},\n    payload: null,\n    headers: {},\n    timeout: 3e4\n  }, request);\n  null === (_options$beforeSend = options.beforeSend) || void 0 === _options$beforeSend ? void 0 : _options$beforeSend.call(options, request);\n  var {\n    async: async,\n    timeout: timeout,\n    headers: headers\n  } = request;\n  var {\n    url: url,\n    method: method\n  } = request;\n  var {\n    jsonp: jsonp,\n    withCredentials: withCredentials\n  } = options;\n  method = (method || \"get\").toLowerCase();\n  var isGet = \"get\" === method;\n  var useJsonp = isGet && jsonp;\n  var params = extend({}, request.params);\n  var ajaxData = isGet ? params : formatPayload(request.payload);\n  var qs = !isGet && param(params);\n  var contentType = !isGet && JSON_VERBOSE_MIME_TYPE;\n\n  if (qs) {\n    url += (url.indexOf(\"?\") > -1 ? \"&\" : \"?\") + qs;\n  }\n\n  if (useJsonp) {\n    ajaxData.$format = \"json\";\n  }\n\n  return {\n    url: url,\n    data: ajaxData,\n    dataType: useJsonp ? \"jsonp\" : \"json\",\n    jsonp: useJsonp && \"$callback\",\n    method: method,\n    async: async,\n    timeout: timeout,\n    headers: headers,\n    contentType: contentType,\n    accepts: {\n      json: [JSON_VERBOSE_MIME_TYPE, \"text/plain\"].join()\n    },\n    xhrFields: {\n      withCredentials: withCredentials\n    }\n  };\n};\n\nexport var sendRequest = (protocolVersion, request, options) => {\n  var {\n    deserializeDates: deserializeDates,\n    fieldTypes: fieldTypes,\n    countOnly: countOnly,\n    isPaged: isPaged\n  } = options;\n  var d = new Deferred();\n  var ajaxOptions = ajaxOptionsForRequest(protocolVersion, request, options);\n  ajax.sendRequest(ajaxOptions).always((obj, textStatus) => {\n    var transformOptions = {\n      deserializeDates: deserializeDates,\n      fieldTypes: fieldTypes\n    };\n    var tuple = interpretJsonFormat(obj, textStatus, transformOptions, ajaxOptions);\n    var {\n      error: error,\n      data: data,\n      count: count\n    } = tuple;\n    var {\n      nextUrl: nextUrl\n    } = tuple;\n\n    if (error) {\n      if (error.message !== XHR_ERROR_UNLOAD) {\n        d.reject(error);\n      }\n    } else if (countOnly) {\n      if (isFinite(count)) {\n        d.resolve(count);\n      } else {\n        d.reject(new errors.Error(\"E4018\"));\n      }\n    } else if (nextUrl && !isPaged) {\n      if (!isAbsoluteUrl(nextUrl)) {\n        nextUrl = toAbsoluteUrl(ajaxOptions.url, nextUrl);\n      }\n\n      sendRequest(protocolVersion, {\n        url: nextUrl\n      }, options).fail(d.reject).done(nextData => d.resolve(data.concat(nextData)));\n    } else {\n      var extra = isFinite(count) ? {\n        totalCount: count\n      } : void 0;\n      d.resolve(data, extra);\n    }\n  });\n  return d.promise();\n};\n\nvar formatDotNetError = errorObj => {\n  var message;\n  var currentError = errorObj;\n\n  if (\"message\" in errorObj) {\n    var _errorObj$message;\n\n    message = (null === (_errorObj$message = errorObj.message) || void 0 === _errorObj$message ? void 0 : _errorObj$message.value) || errorObj.message;\n  }\n\n  while (currentError = currentError.innererror || currentError.internalexception) {\n    message = currentError.message;\n\n    if (currentError.internalexception && -1 === message.indexOf(\"inner exception\")) {\n      break;\n    }\n  }\n\n  return message;\n};\n\nvar errorFromResponse = (obj, textStatus, ajaxOptions) => {\n  var _response, _response2, _response3, _response4;\n\n  if (\"nocontent\" === textStatus) {\n    return null;\n  }\n\n  var message = \"Unknown error\";\n  var response = obj;\n  var httpStatus = 200;\n  var errorData = {\n    requestOptions: ajaxOptions\n  };\n\n  if (\"success\" !== textStatus) {\n    var {\n      status: status,\n      responseText: responseText\n    } = obj;\n    httpStatus = status;\n    message = errorMessageFromXhr(obj, textStatus);\n\n    try {\n      response = JSON.parse(responseText);\n    } catch (x) {}\n  }\n\n  var errorObj = (null === (_response = response) || void 0 === _response ? void 0 : _response.then) || (null === (_response2 = response) || void 0 === _response2 ? void 0 : _response2.error) || (null === (_response3 = response) || void 0 === _response3 ? void 0 : _response3[\"odata.error\"]) || (null === (_response4 = response) || void 0 === _response4 ? void 0 : _response4[\"@odata.error\"]);\n\n  if (errorObj) {\n    message = formatDotNetError(errorObj) || message;\n    errorData.errorDetails = errorObj;\n\n    if (200 === httpStatus) {\n      httpStatus = 500;\n    }\n\n    var customCode = Number(errorObj.code);\n\n    if (isFinite(customCode) && customCode >= 400) {\n      httpStatus = customCode;\n    }\n  }\n\n  if (httpStatus >= 400 || 0 === httpStatus) {\n    errorData.httpStatus = httpStatus;\n    return extend(Error(message), errorData);\n  }\n\n  return null;\n};\n\nvar interpretJsonFormat = (obj, textStatus, transformOptions, ajaxOptions) => {\n  var error = errorFromResponse(obj, textStatus, ajaxOptions);\n\n  if (error) {\n    return {\n      error: error\n    };\n  }\n\n  if (!isPlainObject(obj)) {\n    return {\n      data: obj\n    };\n  }\n\n  var value = \"d\" in obj && (Array.isArray(obj.d) || isObject(obj.d)) ? interpretVerboseJsonFormat(obj, textStatus) : interpretLightJsonFormat(obj, textStatus);\n  transformTypes(value, transformOptions);\n  return value;\n};\n\nvar interpretVerboseJsonFormat = _ref => {\n  var _data$results;\n\n  var {\n    d: data\n  } = _ref;\n\n  if (!isDefined(data)) {\n    return {\n      error: Error(\"Malformed or unsupported JSON response received\")\n    };\n  }\n\n  return {\n    data: null !== (_data$results = data.results) && void 0 !== _data$results ? _data$results : data,\n    nextUrl: data.__next,\n    count: parseInt(data.__count, 10)\n  };\n};\n\nvar interpretLightJsonFormat = obj => {\n  var _obj$value;\n\n  return {\n    data: null !== (_obj$value = obj.value) && void 0 !== _obj$value ? _obj$value : obj,\n    nextUrl: obj[\"@odata.nextLink\"],\n    count: parseInt(obj[\"@odata.count\"], 10)\n  };\n};\n\nexport var EdmLiteral = Class.inherit({\n  ctor(value) {\n    this._value = value;\n  },\n\n  valueOf() {\n    return this._value;\n  }\n\n});\n\nvar transformTypes = function transformTypes(obj) {\n  var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n  each(obj, (key, value) => {\n    if (null !== value && \"object\" === typeof value) {\n      if (\"results\" in value) {\n        obj[key] = value.results;\n      }\n\n      transformTypes(obj[key], options);\n    } else if (\"string\" === typeof value) {\n      var {\n        fieldTypes: fieldTypes,\n        deserializeDates: deserializeDates\n      } = options;\n      var canBeGuid = !fieldTypes || \"String\" !== fieldTypes[key];\n\n      if (canBeGuid && GUID_REGEX.test(value)) {\n        obj[key] = new _Guid(value);\n      }\n\n      if (false !== deserializeDates) {\n        if (value.match(VERBOSE_DATE_REGEX)) {\n          var date = new Date(Number(RegExp.$1) + 60 * RegExp.$2 * 1e3);\n          obj[key] = new Date(date.valueOf() + 60 * date.getTimezoneOffset() * 1e3);\n        } else if (ISO8601_DATE_REGEX.test(value)) {\n          obj[key] = new Date(parseISO8601(obj[key]).valueOf());\n        }\n      }\n    }\n  });\n};\n\nvar serializeDate = date => \"datetime'\".concat(formatISO8601(date, true, true), \"'\");\n\nvar serializeString = value => \"'\".concat(value.replace(/'/g, \"''\"), \"'\");\n\nexport var serializePropName = propName => propName instanceof EdmLiteral ? propName.valueOf() : propName.replace(/\\./g, \"/\");\n\nvar serializeValueV4 = value => {\n  if (value instanceof Date) {\n    return formatISO8601(value, false, false);\n  }\n\n  if (value instanceof _Guid) {\n    return value.valueOf();\n  }\n\n  if (Array.isArray(value)) {\n    return \"[\".concat(value.map(item => serializeValueV4(item)).join(\",\"), \"]\");\n  }\n\n  return serializeValueV2(value);\n};\n\nvar serializeValueV2 = value => {\n  if (value instanceof Date) {\n    return serializeDate(value);\n  }\n\n  if (value instanceof _Guid) {\n    return \"guid'\".concat(value, \"'\");\n  }\n\n  if (value instanceof EdmLiteral) {\n    return value.valueOf();\n  }\n\n  if (\"string\" === typeof value) {\n    return serializeString(value);\n  }\n\n  return String(value);\n};\n\nexport var serializeValue = (value, protocolVersion) => {\n  switch (protocolVersion) {\n    case 2:\n    case 3:\n      return serializeValueV2(value);\n\n    case 4:\n      return serializeValueV4(value);\n\n    default:\n      throw errors.Error(\"E4002\");\n  }\n};\nexport var serializeKey = (key, protocolVersion) => {\n  if (isPlainObject(key)) {\n    var parts = [];\n    each(key, (k, v) => parts.push(\"\".concat(serializePropName(k), \"=\").concat(serializeValue(v, protocolVersion))));\n    return parts.join();\n  }\n\n  return serializeValue(key, protocolVersion);\n};\nexport var keyConverters = {\n  String: value => \"\".concat(value),\n  Int32: value => Math.floor(value),\n  Int64: value => value instanceof EdmLiteral ? value : new EdmLiteral(\"\".concat(value, \"L\")),\n  Guid: value => value instanceof _Guid ? value : new _Guid(value),\n  Boolean: value => !!value,\n  Single: value => value instanceof EdmLiteral ? value : new EdmLiteral(value + \"f\"),\n  Decimal: value => value instanceof EdmLiteral ? value : new EdmLiteral(value + \"m\")\n};\nexport var convertPrimitiveValue = (type, value) => {\n  if (null === value) {\n    return null;\n  }\n\n  var converter = keyConverters[type];\n\n  if (!converter) {\n    throw errors.Error(\"E4014\", type);\n  }\n\n  return converter(value);\n};\nexport var generateSelect = (oDataVersion, select) => {\n  if (!select) {\n    return;\n  }\n\n  return oDataVersion < 4 ? serializePropName(select.join()) : grep(select, hasDot, true).join();\n};\n\nvar formatCore = hash => {\n  var result = \"\";\n  var selectValue = [];\n  var expandValue = [];\n  each(hash, (key, value) => {\n    if (Array.isArray(value)) {\n      [].push.apply(selectValue, value);\n    }\n\n    if (isPlainObject(value)) {\n      expandValue.push(\"\".concat(key).concat(formatCore(value)));\n    }\n  });\n\n  if (selectValue.length || expandValue.length) {\n    result += \"(\";\n\n    if (selectValue.length) {\n      result += \"$select=\".concat(map(selectValue, serializePropName).join());\n    }\n\n    if (expandValue.length) {\n      if (selectValue.length) {\n        result += \";\";\n      }\n\n      result += \"$expand=\".concat(map(expandValue, serializePropName).join());\n    }\n\n    result += \")\";\n  }\n\n  return result;\n};\n\nvar format = hash => {\n  var result = [];\n  each(hash, (key, value) => result.push(\"\".concat(key).concat(formatCore(value))));\n  return result.join();\n};\n\nvar parseCore = (exprParts, root, stepper) => {\n  var result = stepper(root, exprParts.shift(), exprParts);\n\n  if (false === result) {\n    return;\n  }\n\n  parseCore(exprParts, result, stepper);\n};\n\nvar parseTree = (exprs, root, stepper) => each(exprs, (_, x) => parseCore(x.split(\".\"), root, stepper));\n\nvar generatorV2 = (expand, select) => {\n  var hash = {};\n\n  if (expand) {\n    each(makeArray(expand), function () {\n      hash[serializePropName(this)] = 1;\n    });\n  }\n\n  if (select) {\n    each(makeArray(select), function () {\n      var path = this.split(\".\");\n\n      if (path.length < 2) {\n        return;\n      }\n\n      path.pop();\n      hash[serializePropName(path.join(\".\"))] = 1;\n    });\n  }\n\n  return map(hash, (_, v) => v).join();\n};\n\nvar generatorV4 = (expand, select) => {\n  var hash = {};\n\n  if (expand || select) {\n    if (expand) {\n      parseTree(makeArray(expand), hash, (node, key, path) => {\n        node[key] = node[key] || {};\n        return !path.length ? false : node[key];\n      });\n    }\n\n    if (select) {\n      parseTree(grep(makeArray(select), hasDot), hash, (node, key, path) => {\n        if (!path.length) {\n          node[key] = node[key] || [];\n          node[key].push(key);\n          return false;\n        }\n\n        return node[key] = node[key] || {};\n      });\n    }\n\n    return format(hash);\n  }\n};\n\nexport var generateExpand = (oDataVersion, expand, select) => oDataVersion < 4 ? generatorV2(expand, select) : generatorV4(expand, select);\nexport var formatFunctionInvocationUrl = (baseUrl, args) => stringFormat(\"{0}({1})\", baseUrl, map(args || {}, (value, key) => stringFormat(\"{0}={1}\", key, value)).join(\",\"));\nexport var escapeServiceOperationParams = (params, version) => {\n  if (!params) {\n    return params;\n  }\n\n  var result = {};\n  each(params, (k, v) => {\n    result[k] = serializeValue(v, version);\n  });\n  return result;\n};","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/node_modules/devextreme/esm/data/odata/utils.js"],"names":["Class","extend","isDefined","isPlainObject","type","isObject","each","map","ajax","_Guid","grep","Deferred","errors","errorMessageFromXhr","XHR_ERROR_UNLOAD","format","stringFormat","GUID_REGEX","VERBOSE_DATE_REGEX","ISO8601_DATE_REGEX","JSON_VERBOSE_MIME_TYPE","makeArray","value","split","hasDot","x","test","pad","text","length","right","String","concat","formatISO8601","date","skipZeroTime","skipTimezone","bag","padLeft2","push","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","join","parseISO8601","isoString","result","Date","getTimezoneOffset","chunks","replace","exec","time","setFullYear","Number","setMonth","setDate","Array","isArray","setHours","setMinutes","setSeconds","fractional","slice","setMilliseconds","isAbsoluteUrl","url","stripParams","index","indexOf","substr","toAbsoluteUrl","basePath","relativePath","part","baseParts","relativeParts","pop","shift","param","params","name","ajaxOptionsForRequest","protocolVersion","request","_options$beforeSend","options","arguments","formatPayload","payload","JSON","stringify","key","Error","async","method","headers","timeout","beforeSend","call","jsonp","withCredentials","toLowerCase","isGet","useJsonp","ajaxData","qs","contentType","$format","data","dataType","accepts","json","xhrFields","sendRequest","deserializeDates","fieldTypes","countOnly","isPaged","d","ajaxOptions","always","obj","textStatus","transformOptions","tuple","interpretJsonFormat","error","count","nextUrl","message","reject","isFinite","resolve","fail","done","nextData","extra","totalCount","promise","formatDotNetError","errorObj","currentError","_errorObj$message","innererror","internalexception","errorFromResponse","_response","_response2","_response3","_response4","response","httpStatus","errorData","requestOptions","status","responseText","parse","then","errorDetails","customCode","code","interpretVerboseJsonFormat","interpretLightJsonFormat","transformTypes","_ref","_data$results","results","__next","parseInt","__count","_obj$value","EdmLiteral","inherit","ctor","_value","valueOf","canBeGuid","match","RegExp","$1","$2","serializeDate","serializeString","serializePropName","propName","serializeValueV4","item","serializeValueV2","serializeValue","serializeKey","parts","k","v","keyConverters","Int32","Math","floor","Int64","Guid","Boolean","Single","Decimal","convertPrimitiveValue","converter","generateSelect","oDataVersion","select","formatCore","hash","selectValue","expandValue","apply","parseCore","exprParts","root","stepper","parseTree","exprs","_","generatorV2","expand","path","generatorV4","node","generateExpand","formatFunctionInvocationUrl","baseUrl","args","escapeServiceOperationParams","version"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/data/odata/utils.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    type,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport ajax from \"../../core/utils/ajax\";\r\nimport _Guid from \"../../core/guid\";\r\nimport {\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    errors\r\n} from \"../errors\";\r\nimport {\r\n    errorMessageFromXhr,\r\n    XHR_ERROR_UNLOAD\r\n} from \"../utils\";\r\nimport {\r\n    format as stringFormat\r\n} from \"../../core/utils/string\";\r\nvar GUID_REGEX = /^(\\{{0,1}([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}\\}{0,1})$/;\r\nvar VERBOSE_DATE_REGEX = /^\\/Date\\((-?\\d+)((\\+|-)?(\\d+)?)\\)\\/$/;\r\nvar ISO8601_DATE_REGEX = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]{1}\\d{2}(:?)(\\d{2})?)?$/;\r\nvar JSON_VERBOSE_MIME_TYPE = \"application/json;odata=verbose\";\r\nvar makeArray = value => \"string\" === type(value) ? value.split() : value;\r\nvar hasDot = x => /\\./.test(x);\r\nvar pad = (text, length, right) => {\r\n    text = String(text);\r\n    while (text.length < length) {\r\n        text = right ? \"\".concat(text, \"0\") : \"0\".concat(text)\r\n    }\r\n    return text\r\n};\r\nvar formatISO8601 = (date, skipZeroTime, skipTimezone) => {\r\n    var bag = [];\r\n    var padLeft2 = text => pad(text, 2);\r\n    bag.push(date.getFullYear());\r\n    bag.push(\"-\");\r\n    bag.push(padLeft2(date.getMonth() + 1));\r\n    bag.push(\"-\");\r\n    bag.push(padLeft2(date.getDate()));\r\n    if (!(skipZeroTime && date.getHours() + date.getMinutes() + date.getSeconds() + date.getMilliseconds() < 1)) {\r\n        bag.push(\"T\");\r\n        bag.push(padLeft2(date.getHours()));\r\n        bag.push(\":\");\r\n        bag.push(padLeft2(date.getMinutes()));\r\n        bag.push(\":\");\r\n        bag.push(padLeft2(date.getSeconds()));\r\n        if (date.getMilliseconds()) {\r\n            bag.push(\".\");\r\n            bag.push(pad(date.getMilliseconds(), 3))\r\n        }\r\n        if (!skipTimezone) {\r\n            bag.push(\"Z\")\r\n        }\r\n    }\r\n    return bag.join(\"\")\r\n};\r\nvar parseISO8601 = isoString => {\r\n    var result = new Date(60 * new Date(0).getTimezoneOffset() * 1e3);\r\n    var chunks = isoString.replace(\"Z\", \"\").split(\"T\");\r\n    var date = /(\\d{4})-(\\d{2})-(\\d{2})/.exec(chunks[0]);\r\n    var time = /(\\d{2}):(\\d{2}):(\\d{2})\\.?(\\d{0,7})?/.exec(chunks[1]);\r\n    result.setFullYear(Number(date[1]));\r\n    result.setMonth(Number(date[2]) - 1);\r\n    result.setDate(Number(date[3]));\r\n    if (Array.isArray(time) && time.length) {\r\n        result.setHours(Number(time[1]));\r\n        result.setMinutes(Number(time[2]));\r\n        result.setSeconds(Number(time[3]));\r\n        var fractional = (time[4] || \"\").slice(0, 3);\r\n        fractional = pad(fractional, 3, true);\r\n        result.setMilliseconds(Number(fractional))\r\n    }\r\n    return result\r\n};\r\nvar isAbsoluteUrl = url => /^(?:[a-z]+:)?\\/\\//i.test(url);\r\nvar stripParams = url => {\r\n    var index = url.indexOf(\"?\");\r\n    if (index > -1) {\r\n        return url.substr(0, index)\r\n    }\r\n    return url\r\n};\r\nvar toAbsoluteUrl = (basePath, relativePath) => {\r\n    var part;\r\n    var baseParts = stripParams(basePath).split(\"/\");\r\n    var relativeParts = relativePath.split(\"/\");\r\n    baseParts.pop();\r\n    while (relativeParts.length) {\r\n        part = relativeParts.shift();\r\n        if (\"..\" === part) {\r\n            baseParts.pop()\r\n        } else {\r\n            baseParts.push(part)\r\n        }\r\n    }\r\n    return baseParts.join(\"/\")\r\n};\r\nvar param = params => {\r\n    var result = [];\r\n    for (var name in params) {\r\n        result.push(name + \"=\" + params[name])\r\n    }\r\n    return result.join(\"&\")\r\n};\r\nvar ajaxOptionsForRequest = function(protocolVersion, request) {\r\n    var _options$beforeSend;\r\n    var options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\r\n    var formatPayload = payload => JSON.stringify(payload, (function(key, value) {\r\n        if (!(this[key] instanceof Date)) {\r\n            return value\r\n        }\r\n        value = formatISO8601(this[key]);\r\n        switch (protocolVersion) {\r\n            case 2:\r\n                return value.substr(0, value.length - 1);\r\n            case 3:\r\n            case 4:\r\n                return value;\r\n            default:\r\n                throw errors.Error(\"E4002\")\r\n        }\r\n    }));\r\n    request = extend({\r\n        async: true,\r\n        method: \"get\",\r\n        url: \"\",\r\n        params: {},\r\n        payload: null,\r\n        headers: {},\r\n        timeout: 3e4\r\n    }, request);\r\n    null === (_options$beforeSend = options.beforeSend) || void 0 === _options$beforeSend ? void 0 : _options$beforeSend.call(options, request);\r\n    var {\r\n        async: async,\r\n        timeout: timeout,\r\n        headers: headers\r\n    } = request;\r\n    var {\r\n        url: url,\r\n        method: method\r\n    } = request;\r\n    var {\r\n        jsonp: jsonp,\r\n        withCredentials: withCredentials\r\n    } = options;\r\n    method = (method || \"get\").toLowerCase();\r\n    var isGet = \"get\" === method;\r\n    var useJsonp = isGet && jsonp;\r\n    var params = extend({}, request.params);\r\n    var ajaxData = isGet ? params : formatPayload(request.payload);\r\n    var qs = !isGet && param(params);\r\n    var contentType = !isGet && JSON_VERBOSE_MIME_TYPE;\r\n    if (qs) {\r\n        url += (url.indexOf(\"?\") > -1 ? \"&\" : \"?\") + qs\r\n    }\r\n    if (useJsonp) {\r\n        ajaxData.$format = \"json\"\r\n    }\r\n    return {\r\n        url: url,\r\n        data: ajaxData,\r\n        dataType: useJsonp ? \"jsonp\" : \"json\",\r\n        jsonp: useJsonp && \"$callback\",\r\n        method: method,\r\n        async: async,\r\n        timeout: timeout,\r\n        headers: headers,\r\n        contentType: contentType,\r\n        accepts: {\r\n            json: [JSON_VERBOSE_MIME_TYPE, \"text/plain\"].join()\r\n        },\r\n        xhrFields: {\r\n            withCredentials: withCredentials\r\n        }\r\n    }\r\n};\r\nexport var sendRequest = (protocolVersion, request, options) => {\r\n    var {\r\n        deserializeDates: deserializeDates,\r\n        fieldTypes: fieldTypes,\r\n        countOnly: countOnly,\r\n        isPaged: isPaged\r\n    } = options;\r\n    var d = new Deferred;\r\n    var ajaxOptions = ajaxOptionsForRequest(protocolVersion, request, options);\r\n    ajax.sendRequest(ajaxOptions).always((obj, textStatus) => {\r\n        var transformOptions = {\r\n            deserializeDates: deserializeDates,\r\n            fieldTypes: fieldTypes\r\n        };\r\n        var tuple = interpretJsonFormat(obj, textStatus, transformOptions, ajaxOptions);\r\n        var {\r\n            error: error,\r\n            data: data,\r\n            count: count\r\n        } = tuple;\r\n        var {\r\n            nextUrl: nextUrl\r\n        } = tuple;\r\n        if (error) {\r\n            if (error.message !== XHR_ERROR_UNLOAD) {\r\n                d.reject(error)\r\n            }\r\n        } else if (countOnly) {\r\n            if (isFinite(count)) {\r\n                d.resolve(count)\r\n            } else {\r\n                d.reject(new errors.Error(\"E4018\"))\r\n            }\r\n        } else if (nextUrl && !isPaged) {\r\n            if (!isAbsoluteUrl(nextUrl)) {\r\n                nextUrl = toAbsoluteUrl(ajaxOptions.url, nextUrl)\r\n            }\r\n            sendRequest(protocolVersion, {\r\n                url: nextUrl\r\n            }, options).fail(d.reject).done(nextData => d.resolve(data.concat(nextData)))\r\n        } else {\r\n            var extra = isFinite(count) ? {\r\n                totalCount: count\r\n            } : void 0;\r\n            d.resolve(data, extra)\r\n        }\r\n    });\r\n    return d.promise()\r\n};\r\nvar formatDotNetError = errorObj => {\r\n    var message;\r\n    var currentError = errorObj;\r\n    if (\"message\" in errorObj) {\r\n        var _errorObj$message;\r\n        message = (null === (_errorObj$message = errorObj.message) || void 0 === _errorObj$message ? void 0 : _errorObj$message.value) || errorObj.message\r\n    }\r\n    while (currentError = currentError.innererror || currentError.internalexception) {\r\n        message = currentError.message;\r\n        if (currentError.internalexception && -1 === message.indexOf(\"inner exception\")) {\r\n            break\r\n        }\r\n    }\r\n    return message\r\n};\r\nvar errorFromResponse = (obj, textStatus, ajaxOptions) => {\r\n    var _response, _response2, _response3, _response4;\r\n    if (\"nocontent\" === textStatus) {\r\n        return null\r\n    }\r\n    var message = \"Unknown error\";\r\n    var response = obj;\r\n    var httpStatus = 200;\r\n    var errorData = {\r\n        requestOptions: ajaxOptions\r\n    };\r\n    if (\"success\" !== textStatus) {\r\n        var {\r\n            status: status,\r\n            responseText: responseText\r\n        } = obj;\r\n        httpStatus = status;\r\n        message = errorMessageFromXhr(obj, textStatus);\r\n        try {\r\n            response = JSON.parse(responseText)\r\n        } catch (x) {}\r\n    }\r\n    var errorObj = (null === (_response = response) || void 0 === _response ? void 0 : _response.then) || (null === (_response2 = response) || void 0 === _response2 ? void 0 : _response2.error) || (null === (_response3 = response) || void 0 === _response3 ? void 0 : _response3[\"odata.error\"]) || (null === (_response4 = response) || void 0 === _response4 ? void 0 : _response4[\"@odata.error\"]);\r\n    if (errorObj) {\r\n        message = formatDotNetError(errorObj) || message;\r\n        errorData.errorDetails = errorObj;\r\n        if (200 === httpStatus) {\r\n            httpStatus = 500\r\n        }\r\n        var customCode = Number(errorObj.code);\r\n        if (isFinite(customCode) && customCode >= 400) {\r\n            httpStatus = customCode\r\n        }\r\n    }\r\n    if (httpStatus >= 400 || 0 === httpStatus) {\r\n        errorData.httpStatus = httpStatus;\r\n        return extend(Error(message), errorData)\r\n    }\r\n    return null\r\n};\r\nvar interpretJsonFormat = (obj, textStatus, transformOptions, ajaxOptions) => {\r\n    var error = errorFromResponse(obj, textStatus, ajaxOptions);\r\n    if (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n    if (!isPlainObject(obj)) {\r\n        return {\r\n            data: obj\r\n        }\r\n    }\r\n    var value = \"d\" in obj && (Array.isArray(obj.d) || isObject(obj.d)) ? interpretVerboseJsonFormat(obj, textStatus) : interpretLightJsonFormat(obj, textStatus);\r\n    transformTypes(value, transformOptions);\r\n    return value\r\n};\r\nvar interpretVerboseJsonFormat = _ref => {\r\n    var _data$results;\r\n    var {\r\n        d: data\r\n    } = _ref;\r\n    if (!isDefined(data)) {\r\n        return {\r\n            error: Error(\"Malformed or unsupported JSON response received\")\r\n        }\r\n    }\r\n    return {\r\n        data: null !== (_data$results = data.results) && void 0 !== _data$results ? _data$results : data,\r\n        nextUrl: data.__next,\r\n        count: parseInt(data.__count, 10)\r\n    }\r\n};\r\nvar interpretLightJsonFormat = obj => {\r\n    var _obj$value;\r\n    return {\r\n        data: null !== (_obj$value = obj.value) && void 0 !== _obj$value ? _obj$value : obj,\r\n        nextUrl: obj[\"@odata.nextLink\"],\r\n        count: parseInt(obj[\"@odata.count\"], 10)\r\n    }\r\n};\r\nexport var EdmLiteral = Class.inherit({\r\n    ctor(value) {\r\n        this._value = value\r\n    },\r\n    valueOf() {\r\n        return this._value\r\n    }\r\n});\r\nvar transformTypes = function transformTypes(obj) {\r\n    var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n    each(obj, (key, value) => {\r\n        if (null !== value && \"object\" === typeof value) {\r\n            if (\"results\" in value) {\r\n                obj[key] = value.results\r\n            }\r\n            transformTypes(obj[key], options)\r\n        } else if (\"string\" === typeof value) {\r\n            var {\r\n                fieldTypes: fieldTypes,\r\n                deserializeDates: deserializeDates\r\n            } = options;\r\n            var canBeGuid = !fieldTypes || \"String\" !== fieldTypes[key];\r\n            if (canBeGuid && GUID_REGEX.test(value)) {\r\n                obj[key] = new _Guid(value)\r\n            }\r\n            if (false !== deserializeDates) {\r\n                if (value.match(VERBOSE_DATE_REGEX)) {\r\n                    var date = new Date(Number(RegExp.$1) + 60 * RegExp.$2 * 1e3);\r\n                    obj[key] = new Date(date.valueOf() + 60 * date.getTimezoneOffset() * 1e3)\r\n                } else if (ISO8601_DATE_REGEX.test(value)) {\r\n                    obj[key] = new Date(parseISO8601(obj[key]).valueOf())\r\n                }\r\n            }\r\n        }\r\n    })\r\n};\r\nvar serializeDate = date => \"datetime'\".concat(formatISO8601(date, true, true), \"'\");\r\nvar serializeString = value => \"'\".concat(value.replace(/'/g, \"''\"), \"'\");\r\nexport var serializePropName = propName => propName instanceof EdmLiteral ? propName.valueOf() : propName.replace(/\\./g, \"/\");\r\nvar serializeValueV4 = value => {\r\n    if (value instanceof Date) {\r\n        return formatISO8601(value, false, false)\r\n    }\r\n    if (value instanceof _Guid) {\r\n        return value.valueOf()\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return \"[\".concat(value.map(item => serializeValueV4(item)).join(\",\"), \"]\")\r\n    }\r\n    return serializeValueV2(value)\r\n};\r\nvar serializeValueV2 = value => {\r\n    if (value instanceof Date) {\r\n        return serializeDate(value)\r\n    }\r\n    if (value instanceof _Guid) {\r\n        return \"guid'\".concat(value, \"'\")\r\n    }\r\n    if (value instanceof EdmLiteral) {\r\n        return value.valueOf()\r\n    }\r\n    if (\"string\" === typeof value) {\r\n        return serializeString(value)\r\n    }\r\n    return String(value)\r\n};\r\nexport var serializeValue = (value, protocolVersion) => {\r\n    switch (protocolVersion) {\r\n        case 2:\r\n        case 3:\r\n            return serializeValueV2(value);\r\n        case 4:\r\n            return serializeValueV4(value);\r\n        default:\r\n            throw errors.Error(\"E4002\")\r\n    }\r\n};\r\nexport var serializeKey = (key, protocolVersion) => {\r\n    if (isPlainObject(key)) {\r\n        var parts = [];\r\n        each(key, (k, v) => parts.push(\"\".concat(serializePropName(k), \"=\").concat(serializeValue(v, protocolVersion))));\r\n        return parts.join()\r\n    }\r\n    return serializeValue(key, protocolVersion)\r\n};\r\nexport var keyConverters = {\r\n    String: value => \"\".concat(value),\r\n    Int32: value => Math.floor(value),\r\n    Int64: value => value instanceof EdmLiteral ? value : new EdmLiteral(\"\".concat(value, \"L\")),\r\n    Guid: value => value instanceof _Guid ? value : new _Guid(value),\r\n    Boolean: value => !!value,\r\n    Single: value => value instanceof EdmLiteral ? value : new EdmLiteral(value + \"f\"),\r\n    Decimal: value => value instanceof EdmLiteral ? value : new EdmLiteral(value + \"m\")\r\n};\r\nexport var convertPrimitiveValue = (type, value) => {\r\n    if (null === value) {\r\n        return null\r\n    }\r\n    var converter = keyConverters[type];\r\n    if (!converter) {\r\n        throw errors.Error(\"E4014\", type)\r\n    }\r\n    return converter(value)\r\n};\r\nexport var generateSelect = (oDataVersion, select) => {\r\n    if (!select) {\r\n        return\r\n    }\r\n    return oDataVersion < 4 ? serializePropName(select.join()) : grep(select, hasDot, true).join()\r\n};\r\nvar formatCore = hash => {\r\n    var result = \"\";\r\n    var selectValue = [];\r\n    var expandValue = [];\r\n    each(hash, (key, value) => {\r\n        if (Array.isArray(value)) {\r\n            [].push.apply(selectValue, value)\r\n        }\r\n        if (isPlainObject(value)) {\r\n            expandValue.push(\"\".concat(key).concat(formatCore(value)))\r\n        }\r\n    });\r\n    if (selectValue.length || expandValue.length) {\r\n        result += \"(\";\r\n        if (selectValue.length) {\r\n            result += \"$select=\".concat(map(selectValue, serializePropName).join())\r\n        }\r\n        if (expandValue.length) {\r\n            if (selectValue.length) {\r\n                result += \";\"\r\n            }\r\n            result += \"$expand=\".concat(map(expandValue, serializePropName).join())\r\n        }\r\n        result += \")\"\r\n    }\r\n    return result\r\n};\r\nvar format = hash => {\r\n    var result = [];\r\n    each(hash, (key, value) => result.push(\"\".concat(key).concat(formatCore(value))));\r\n    return result.join()\r\n};\r\nvar parseCore = (exprParts, root, stepper) => {\r\n    var result = stepper(root, exprParts.shift(), exprParts);\r\n    if (false === result) {\r\n        return\r\n    }\r\n    parseCore(exprParts, result, stepper)\r\n};\r\nvar parseTree = (exprs, root, stepper) => each(exprs, (_, x) => parseCore(x.split(\".\"), root, stepper));\r\nvar generatorV2 = (expand, select) => {\r\n    var hash = {};\r\n    if (expand) {\r\n        each(makeArray(expand), (function() {\r\n            hash[serializePropName(this)] = 1\r\n        }))\r\n    }\r\n    if (select) {\r\n        each(makeArray(select), (function() {\r\n            var path = this.split(\".\");\r\n            if (path.length < 2) {\r\n                return\r\n            }\r\n            path.pop();\r\n            hash[serializePropName(path.join(\".\"))] = 1\r\n        }))\r\n    }\r\n    return map(hash, (_, v) => v).join()\r\n};\r\nvar generatorV4 = (expand, select) => {\r\n    var hash = {};\r\n    if (expand || select) {\r\n        if (expand) {\r\n            parseTree(makeArray(expand), hash, (node, key, path) => {\r\n                node[key] = node[key] || {};\r\n                return !path.length ? false : node[key]\r\n            })\r\n        }\r\n        if (select) {\r\n            parseTree(grep(makeArray(select), hasDot), hash, (node, key, path) => {\r\n                if (!path.length) {\r\n                    node[key] = node[key] || [];\r\n                    node[key].push(key);\r\n                    return false\r\n                }\r\n                return node[key] = node[key] || {}\r\n            })\r\n        }\r\n        return format(hash)\r\n    }\r\n};\r\nexport var generateExpand = (oDataVersion, expand, select) => oDataVersion < 4 ? generatorV2(expand, select) : generatorV4(expand, select);\r\nexport var formatFunctionInvocationUrl = (baseUrl, args) => stringFormat(\"{0}({1})\", baseUrl, map(args || {}, (value, key) => stringFormat(\"{0}={1}\", key, value)).join(\",\"));\r\nexport var escapeServiceOperationParams = (params, version) => {\r\n    if (!params) {\r\n        return params\r\n    }\r\n    var result = {};\r\n    each(params, (k, v) => {\r\n        result[k] = serializeValue(v, version)\r\n    });\r\n    return result\r\n};\r\n"]},"metadata":{},"sourceType":"module"}