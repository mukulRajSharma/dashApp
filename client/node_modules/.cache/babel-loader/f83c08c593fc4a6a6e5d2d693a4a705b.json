{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/form/ui.form.layout_manager.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport Guid from \"../../core/guid\";\nimport { default as FormItemsRunTimeInfo } from \"./ui.form.items_runtime_info\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { isDefined, isEmptyObject, isFunction, isObject, type } from \"../../core/utils/type\";\nimport { getPublicElement } from \"../../core/element\";\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\nimport { getCurrentScreenFactor, hasWindow } from \"../../core/utils/window\";\nimport { format } from \"../../core/utils/string\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { inArray, normalizeIndexes } from \"../../core/utils/array\";\nimport { compileGetter } from \"../../core/utils/data\";\nimport { removeEvent } from \"../../core/remove_event\";\nimport { name as clickEventName } from \"../../events/click\";\nimport errors from \"../widget/ui.errors\";\nimport messageLocalization from \"../../localization/message\";\nimport { styleProp } from \"../../core/utils/style\";\nimport { captionize } from \"../../core/utils/inflector\";\nimport Widget from \"../widget/ui.widget\";\nimport Validator from \"../validator\";\nimport ResponsiveBox from \"../responsive_box\";\nimport { isMaterial } from \"../themes\";\nimport { FIELD_ITEM_CLASS, FLEX_LAYOUT_CLASS, LAYOUT_MANAGER_ONE_COLUMN, FIELD_ITEM_OPTIONAL_CLASS, FIELD_ITEM_REQUIRED_CLASS, FIELD_ITEM_CONTENT_WRAPPER_CLASS, FORM_LAYOUT_MANAGER_CLASS, LABEL_VERTICAL_ALIGNMENT_CLASS, LABEL_HORIZONTAL_ALIGNMENT_CLASS, FIELD_ITEM_LABEL_ALIGN_CLASS, FIELD_ITEM_CONTENT_LOCATION_CLASS, FIELD_ITEM_CONTENT_CLASS, FIELD_EMPTY_ITEM_CLASS, SINGLE_COLUMN_ITEM_CONTENT, ROOT_SIMPLE_ITEM_CLASS } from \"./constants\";\nimport \"../text_box\";\nimport \"../number_box\";\nimport \"../check_box\";\nimport \"../date_box\";\nimport \"../button\";\nimport { renderLabel, renderHelpText, renderButton, adjustContainerAsButtonItem, convertAlignmentToJustifyContent, convertAlignmentToTextAlign } from \"./ui.form.utils\";\nvar FORM_EDITOR_BY_DEFAULT = \"dxTextBox\";\nvar LAYOUT_MANAGER_FIRST_ROW_CLASS = \"dx-first-row\";\nvar LAYOUT_MANAGER_LAST_ROW_CLASS = \"dx-last-row\";\nvar LAYOUT_MANAGER_FIRST_COL_CLASS = \"dx-first-col\";\nvar LAYOUT_MANAGER_LAST_COL_CLASS = \"dx-last-col\";\nvar INVALID_CLASS = \"dx-invalid\";\nvar LAYOUT_STRATEGY_FLEX = \"flex\";\nvar LAYOUT_STRATEGY_FALLBACK = \"fallback\";\nvar SIMPLE_ITEM_TYPE = \"simple\";\nvar TEMPLATE_WRAPPER_CLASS = \"dx-template-wrapper\";\nvar DATA_OPTIONS = [\"dataSource\", \"items\"];\nvar EDITORS_WITH_ARRAY_VALUE = [\"dxTagBox\", \"dxRangeSlider\"];\nvar LayoutManager = Widget.inherit({\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      layoutData: {},\n      readOnly: false,\n      colCount: 1,\n      colCountByScreen: void 0,\n      labelLocation: \"left\",\n      onFieldDataChanged: null,\n      onEditorEnterKey: null,\n      customizeItem: null,\n      alignItemLabels: true,\n      minColWidth: 200,\n      showRequiredMark: true,\n      screenByWidth: null,\n      showOptionalMark: false,\n      requiredMark: \"*\",\n      optionalMark: messageLocalization.format(\"dxForm-optionalMark\"),\n      requiredMessage: messageLocalization.getFormatter(\"dxForm-requiredMessage\")\n    });\n  },\n  _setOptionsByReference: function () {\n    this.callBase();\n    extend(this._optionsByReference, {\n      layoutData: true,\n      validationGroup: true\n    });\n  },\n  _init: function () {\n    var layoutData = this.option(\"layoutData\");\n    this.callBase();\n    this._itemWatchers = [];\n    this._itemsRunTimeInfo = new FormItemsRunTimeInfo();\n\n    this._updateReferencedOptions(layoutData);\n\n    this._initDataAndItems(layoutData);\n  },\n  _dispose: function () {\n    this.callBase();\n\n    this._cleanItemWatchers();\n  },\n  _initDataAndItems: function (initialData) {\n    this._syncDataWithItems();\n\n    this._updateItems(initialData);\n  },\n  _syncDataWithItems: function () {\n    var layoutData = this.option(\"layoutData\");\n    var userItems = this.option(\"items\");\n\n    if (isDefined(userItems)) {\n      userItems.forEach(item => {\n        if (item.dataField && void 0 === this._getDataByField(item.dataField)) {\n          var value;\n\n          if (item.editorOptions) {\n            value = item.editorOptions.value;\n          }\n\n          if (isDefined(value) || item.dataField in layoutData) {\n            this._updateFieldValue(item.dataField, value);\n          }\n        }\n      });\n    }\n  },\n  _getDataByField: function (dataField) {\n    return dataField ? this.option(\"layoutData.\" + dataField) : null;\n  },\n  _isCheckboxUndefinedStateEnabled: function (editorOption) {\n    if (true === editorOption.allowIndeterminateState && \"dxCheckBox\" === editorOption.editorType) {\n      var nameParts = [\"layoutData\", ...editorOption.dataField.split(\".\")];\n      var propertyName = nameParts.pop();\n      var layoutData = this.option(nameParts.join(\".\"));\n      return layoutData && propertyName in layoutData;\n    }\n\n    return false;\n  },\n  _updateFieldValue: function (dataField, value) {\n    var layoutData = this.option(\"layoutData\");\n    var newValue = value;\n\n    if (!variableWrapper.isWrapped(layoutData[dataField]) && isDefined(dataField)) {\n      this.option(\"layoutData.\" + dataField, newValue);\n    } else if (variableWrapper.isWritableWrapped(layoutData[dataField])) {\n      newValue = isFunction(newValue) ? newValue() : newValue;\n      layoutData[dataField](newValue);\n    }\n\n    this._triggerOnFieldDataChanged({\n      dataField: dataField,\n      value: newValue\n    });\n  },\n  _triggerOnFieldDataChanged: function (args) {\n    this._createActionByOption(\"onFieldDataChanged\")(args);\n  },\n  _updateItems: function (layoutData) {\n    var that = this;\n    var userItems = this.option(\"items\");\n    var isUserItemsExist = isDefined(userItems);\n    var customizeItem = that.option(\"customizeItem\");\n    var items = isUserItemsExist ? userItems : this._generateItemsByData(layoutData);\n\n    if (isDefined(items)) {\n      var processedItems = [];\n      each(items, function (index, item) {\n        if (that._isAcceptableItem(item)) {\n          item = that._processItem(item);\n          customizeItem && customizeItem(item);\n\n          if (isObject(item) && false !== variableWrapper.unwrap(item.visible)) {\n            processedItems.push(item);\n          }\n        }\n      });\n\n      if (!that._itemWatchers.length || !isUserItemsExist) {\n        that._updateItemWatchers(items);\n      }\n\n      this._setItems(processedItems);\n\n      this._sortItems();\n    }\n  },\n  _cleanItemWatchers: function () {\n    this._itemWatchers.forEach(function (dispose) {\n      dispose();\n    });\n\n    this._itemWatchers = [];\n  },\n  _updateItemWatchers: function (items) {\n    var that = this;\n\n    var watch = that._getWatch();\n\n    items.forEach(function (item) {\n      if (isObject(item) && isDefined(item.visible) && isFunction(watch)) {\n        that._itemWatchers.push(watch(function () {\n          return variableWrapper.unwrap(item.visible);\n        }, function () {\n          that._updateItems(that.option(\"layoutData\"));\n\n          that.repaint();\n        }, {\n          skipImmediate: true\n        }));\n      }\n    });\n  },\n  _generateItemsByData: function (layoutData) {\n    var result = [];\n\n    if (isDefined(layoutData)) {\n      each(layoutData, function (dataField) {\n        result.push({\n          dataField: dataField\n        });\n      });\n    }\n\n    return result;\n  },\n  _isAcceptableItem: function (item) {\n    var itemField = item.dataField || item;\n\n    var itemData = this._getDataByField(itemField);\n\n    return !(isFunction(itemData) && !variableWrapper.isWrapped(itemData));\n  },\n  _processItem: function (item) {\n    if (\"string\" === typeof item) {\n      item = {\n        dataField: item\n      };\n    }\n\n    if (\"object\" === typeof item && !item.itemType) {\n      item.itemType = SIMPLE_ITEM_TYPE;\n    }\n\n    if (!isDefined(item.editorType) && isDefined(item.dataField)) {\n      var value = this._getDataByField(item.dataField);\n\n      item.editorType = isDefined(value) ? this._getEditorTypeByDataType(type(value)) : FORM_EDITOR_BY_DEFAULT;\n    }\n\n    if (\"dxCheckBox\" === item.editorType) {\n      var _item$allowIndetermin;\n\n      item.allowIndeterminateState = null !== (_item$allowIndetermin = item.allowIndeterminateState) && void 0 !== _item$allowIndetermin ? _item$allowIndetermin : true;\n    }\n\n    return item;\n  },\n  _getEditorTypeByDataType: function (dataType) {\n    switch (dataType) {\n      case \"number\":\n        return \"dxNumberBox\";\n\n      case \"date\":\n        return \"dxDateBox\";\n\n      case \"boolean\":\n        return \"dxCheckBox\";\n\n      default:\n        return \"dxTextBox\";\n    }\n  },\n  _sortItems: function () {\n    normalizeIndexes(this._items, \"visibleIndex\");\n\n    this._sortIndexes();\n  },\n  _sortIndexes: function () {\n    this._items.sort(function (itemA, itemB) {\n      var indexA = itemA.visibleIndex;\n      var indexB = itemB.visibleIndex;\n      var result;\n\n      if (indexA > indexB) {\n        result = 1;\n      } else if (indexA < indexB) {\n        result = -1;\n      } else {\n        result = 0;\n      }\n\n      return result;\n    });\n  },\n  _initMarkup: function () {\n    this._itemsRunTimeInfo.clear();\n\n    this.$element().addClass(FORM_LAYOUT_MANAGER_CLASS);\n    this.callBase();\n\n    this._renderResponsiveBox();\n  },\n  _hasBrowserFlex: function () {\n    return styleProp(LAYOUT_STRATEGY_FLEX) === LAYOUT_STRATEGY_FLEX;\n  },\n  _renderResponsiveBox: function () {\n    var templatesInfo = [];\n\n    if (this._items && this._items.length) {\n      var colCount = this._getColCount();\n\n      var $container = $(\"<div>\").appendTo(this.$element());\n\n      this._prepareItemsWithMerging(colCount);\n\n      var layoutItems = this._generateLayoutItems();\n\n      this._responsiveBox = this._createComponent($container, ResponsiveBox, this._getResponsiveBoxConfig(layoutItems, colCount, templatesInfo));\n\n      if (!hasWindow()) {\n        this._renderTemplates(templatesInfo);\n      }\n    }\n  },\n  _itemStateChangedHandler: function (e) {\n    this._refresh();\n  },\n  _renderTemplate: function ($container, item) {\n    switch (item.itemType) {\n      case \"empty\":\n        this._renderEmptyItem($container);\n\n        break;\n\n      case \"button\":\n        this._renderButtonItem(item, $container);\n\n        break;\n\n      default:\n        this._renderFieldItem(item, $container);\n\n    }\n  },\n  _renderTemplates: function (templatesInfo) {\n    var that = this;\n    each(templatesInfo, function (index, info) {\n      that._renderTemplate(info.container, info.formItem);\n    });\n  },\n  _getResponsiveBoxConfig: function (layoutItems, colCount, templatesInfo) {\n    var that = this;\n    var colCountByScreen = that.option(\"colCountByScreen\");\n    var xsColCount = colCountByScreen && colCountByScreen.xs;\n    return {\n      onItemStateChanged: this._itemStateChangedHandler.bind(this),\n      _layoutStrategy: that._hasBrowserFlex() ? LAYOUT_STRATEGY_FLEX : LAYOUT_STRATEGY_FALLBACK,\n      onLayoutChanged: function () {\n        var onLayoutChanged = that.option(\"onLayoutChanged\");\n        var isSingleColumnMode = that.isSingleColumnMode();\n\n        if (onLayoutChanged) {\n          that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, isSingleColumnMode);\n          onLayoutChanged(isSingleColumnMode);\n        }\n      },\n      onContentReady: function (e) {\n        if (hasWindow()) {\n          that._renderTemplates(templatesInfo);\n        }\n\n        if (that.option(\"onLayoutChanged\")) {\n          that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, that.isSingleColumnMode(e.component));\n        }\n      },\n      itemTemplate: function (e, itemData, itemElement) {\n        if (!e.location) {\n          return;\n        }\n\n        var $itemElement = $(itemElement);\n        var itemRenderedCountInPreviousRows = e.location.row * colCount;\n        var item = that._items[e.location.col + itemRenderedCountInPreviousRows];\n        var $fieldItem = $(\"<div>\").addClass(item.cssClass).appendTo($itemElement);\n        templatesInfo.push({\n          container: $fieldItem,\n          formItem: item\n        });\n        $itemElement.toggleClass(SINGLE_COLUMN_ITEM_CONTENT, that.isSingleColumnMode(this));\n\n        if (0 === e.location.row) {\n          $fieldItem.addClass(LAYOUT_MANAGER_FIRST_ROW_CLASS);\n        }\n\n        if (0 === e.location.col) {\n          $fieldItem.addClass(LAYOUT_MANAGER_FIRST_COL_CLASS);\n        }\n\n        if (item.itemType === SIMPLE_ITEM_TYPE && that.option(\"isRoot\")) {\n          $itemElement.addClass(ROOT_SIMPLE_ITEM_CLASS);\n        }\n\n        var isLastColumn = e.location.col === colCount - 1 || e.location.col + e.location.colspan === colCount;\n\n        var rowsCount = that._getRowsCount();\n\n        var isLastRow = e.location.row === rowsCount - 1;\n\n        if (isLastColumn) {\n          $fieldItem.addClass(LAYOUT_MANAGER_LAST_COL_CLASS);\n        }\n\n        if (isLastRow) {\n          $fieldItem.addClass(LAYOUT_MANAGER_LAST_ROW_CLASS);\n        }\n      },\n      cols: that._generateRatio(colCount),\n      rows: that._generateRatio(that._getRowsCount(), true),\n      dataSource: layoutItems,\n      screenByWidth: that.option(\"screenByWidth\"),\n      singleColumnScreen: xsColCount ? false : \"xs\"\n    };\n  },\n  _getColCount: function () {\n    var colCount = this.option(\"colCount\");\n    var colCountByScreen = this.option(\"colCountByScreen\");\n\n    if (colCountByScreen) {\n      var screenFactor = this.option(\"form\").getTargetScreenFactor();\n\n      if (!screenFactor) {\n        screenFactor = hasWindow() ? getCurrentScreenFactor(this.option(\"screenByWidth\")) : \"lg\";\n      }\n\n      colCount = colCountByScreen[screenFactor] || colCount;\n    }\n\n    if (\"auto\" === colCount) {\n      if (this._cashedColCount) {\n        return this._cashedColCount;\n      }\n\n      this._cashedColCount = colCount = this._getMaxColCount();\n    }\n\n    return colCount < 1 ? 1 : colCount;\n  },\n  _getMaxColCount: function () {\n    if (!hasWindow()) {\n      return 1;\n    }\n\n    var minColWidth = this.option(\"minColWidth\");\n    var width = this.$element().width();\n    var itemsCount = this._items.length;\n    var maxColCount = Math.floor(width / minColWidth) || 1;\n    return itemsCount < maxColCount ? itemsCount : maxColCount;\n  },\n  isCachedColCountObsolete: function () {\n    return this._cashedColCount && this._getMaxColCount() !== this._cashedColCount;\n  },\n  _prepareItemsWithMerging: function (colCount) {\n    var items = this._items.slice(0);\n\n    var item;\n    var itemsMergedByCol;\n    var result = [];\n    var j;\n    var i;\n\n    for (i = 0; i < items.length; i++) {\n      item = items[i];\n      result.push(item);\n\n      if (this.option(\"alignItemLabels\") || item.alignItemLabels || item.colSpan) {\n        item.col = this._getColByIndex(result.length - 1, colCount);\n      }\n\n      if (item.colSpan > 1 && item.col + item.colSpan <= colCount) {\n        itemsMergedByCol = [];\n\n        for (j = 0; j < item.colSpan - 1; j++) {\n          itemsMergedByCol.push({\n            merged: true\n          });\n        }\n\n        result = result.concat(itemsMergedByCol);\n      } else {\n        delete item.colSpan;\n      }\n    }\n\n    this._setItems(result);\n  },\n  _getColByIndex: function (index, colCount) {\n    return index % colCount;\n  },\n  _setItems: function (items) {\n    this._items = items;\n    this._cashedColCount = null;\n  },\n  _generateLayoutItems: function () {\n    var items = this._items;\n\n    var colCount = this._getColCount();\n\n    var result = [];\n    var item;\n    var i;\n\n    for (i = 0; i < items.length; i++) {\n      item = items[i];\n\n      if (!item.merged) {\n        var generatedItem = {\n          location: {\n            row: parseInt(i / colCount),\n            col: this._getColByIndex(i, colCount)\n          }\n        };\n\n        if (isDefined(item.disabled)) {\n          generatedItem.disabled = item.disabled;\n        }\n\n        if (isDefined(item.visible)) {\n          generatedItem.visible = item.visible;\n        }\n\n        if (isDefined(item.colSpan)) {\n          generatedItem.location.colspan = item.colSpan;\n        }\n\n        if (isDefined(item.rowSpan)) {\n          generatedItem.location.rowspan = item.rowSpan;\n        }\n\n        result.push(generatedItem);\n      }\n    }\n\n    return result;\n  },\n  _renderEmptyItem: function ($container) {\n    return $container.addClass(FIELD_EMPTY_ITEM_CLASS).html(\"&nbsp;\");\n  },\n  _renderButtonItem: function (item, $container) {\n    adjustContainerAsButtonItem({\n      $container: $container,\n      justifyContent: convertAlignmentToJustifyContent(item.verticalAlignment),\n      textAlign: convertAlignmentToTextAlign(item.horizontalAlignment),\n      cssItemClass: this.option(\"cssItemClass\"),\n      targetColIndex: item.col\n    });\n    var $button = renderButton({\n      buttonOptions: extend({\n        validationGroup: this.option(\"validationGroup\")\n      }, item.buttonOptions),\n      createComponentCallback: this._createComponent.bind(this)\n    });\n    $container.append($button);\n\n    this._itemsRunTimeInfo.add({\n      item: item,\n      widgetInstance: $button.dxButton(\"instance\"),\n      guid: item.guid,\n      $itemContainer: $container\n    });\n  },\n  _addItemClasses: function ($item, column) {\n    $item.addClass(FIELD_ITEM_CLASS).addClass(this.option(\"cssItemClass\")).addClass(isDefined(column) ? \"dx-col-\" + column : \"\");\n  },\n  _renderFieldItem: function (item, $container) {\n    var name = this._getName(item);\n\n    var id = this.getItemID(name);\n    var isRequired = isDefined(item.isRequired) ? item.isRequired : !!this._hasRequiredRuleInSet(item.validationRules);\n\n    var labelOptions = this._getLabelOptions(item, id, isRequired);\n\n    var $editor = $(\"<div>\");\n    var helpID = item.helpText ? \"dx-\" + new Guid() : null;\n    var $label;\n\n    this._addItemClasses($container, item.col);\n\n    $container.addClass(isRequired ? FIELD_ITEM_REQUIRED_CLASS : FIELD_ITEM_OPTIONAL_CLASS);\n\n    if (labelOptions.visible && labelOptions.text) {\n      $label = this._renderLabel(labelOptions).appendTo($container);\n    }\n\n    if (item.itemType === SIMPLE_ITEM_TYPE) {\n      if (this._isLabelNeedBaselineAlign(item) && \"top\" !== labelOptions.location) {\n        $container.addClass(FIELD_ITEM_LABEL_ALIGN_CLASS);\n      }\n\n      this._hasBrowserFlex() && $container.addClass(FLEX_LAYOUT_CLASS);\n    }\n\n    $editor.data(\"dx-form-item\", item);\n\n    this._appendEditorToField({\n      $fieldItem: $container,\n      $label: $label,\n      $editor: $editor,\n      labelOptions: labelOptions\n    });\n\n    var instance = this._renderEditor({\n      $container: $editor,\n      dataField: item.dataField,\n      name: item.name,\n      editorType: item.editorType,\n      editorOptions: item.editorOptions,\n      template: this._getTemplateByFieldItem(item),\n      isRequired: isRequired,\n      helpID: helpID,\n      labelID: labelOptions.labelID,\n      id: id,\n      validationBoundary: this.option(\"validationBoundary\"),\n      allowIndeterminateState: item.allowIndeterminateState\n    });\n\n    this._itemsRunTimeInfo.add({\n      item: item,\n      widgetInstance: instance,\n      guid: item.guid,\n      $itemContainer: $container\n    });\n\n    var editorElem = $editor.children().first();\n    var $validationTarget = editorElem.hasClass(TEMPLATE_WRAPPER_CLASS) ? editorElem.children().first() : editorElem;\n    var validationTargetInstance = $validationTarget && $validationTarget.data(\"dx-validation-target\");\n\n    if (validationTargetInstance) {\n      this._renderValidator($validationTarget, item);\n\n      if (isMaterial()) {\n        this._addWrapperInvalidClass(validationTargetInstance);\n      }\n    }\n\n    var helpText = item.helpText;\n    var isSimpleItem = item.itemType === SIMPLE_ITEM_TYPE;\n\n    if (helpText && isSimpleItem) {\n      var $editorParent = $editor.parent();\n      $editorParent.append($(\"<div>\").addClass(FIELD_ITEM_CONTENT_WRAPPER_CLASS).append($editor).append(renderHelpText(helpText, helpID)));\n    }\n\n    this._attachClickHandler($label, $editor, item.editorType);\n  },\n  _hasRequiredRuleInSet: function (rules) {\n    var hasRequiredRule;\n\n    if (rules && rules.length) {\n      each(rules, function (index, rule) {\n        if (\"required\" === rule.type) {\n          hasRequiredRule = true;\n          return false;\n        }\n      });\n    }\n\n    return hasRequiredRule;\n  },\n  _getName: function (item) {\n    return item.dataField || item.name;\n  },\n  _isLabelNeedBaselineAlign: function (item) {\n    return !!item.helpText && !this._hasBrowserFlex() || -1 !== inArray(item.editorType, [\"dxTextArea\", \"dxRadioGroup\", \"dxCalendar\", \"dxHtmlEditor\"]);\n  },\n  _isLabelNeedId: function (item) {\n    return -1 !== inArray(item.editorType, [\"dxRadioGroup\", \"dxCheckBox\", \"dxLookup\", \"dxSlider\", \"dxRangeSlider\", \"dxSwitch\", \"dxHtmlEditor\"]);\n  },\n  _getLabelOptions: function (item, id, isRequired) {\n    var labelOptions = extend({\n      showColon: this.option(\"showColonAfterLabel\"),\n      location: this.option(\"labelLocation\"),\n      id: id,\n      visible: true,\n      isRequired: isRequired\n    }, item ? item.label : {});\n\n    if (this._isLabelNeedId(item)) {\n      labelOptions.labelID = \"dx-label-\".concat(new Guid());\n    }\n\n    if (!labelOptions.text && item.dataField) {\n      labelOptions.text = captionize(item.dataField);\n    }\n\n    if (labelOptions.text) {\n      labelOptions.text += labelOptions.showColon ? \":\" : \"\";\n    }\n\n    return labelOptions;\n  },\n  _renderLabel: function (labelOptions) {\n    return renderLabel(this._getRenderLabelOptions(labelOptions));\n  },\n  _getRenderLabelOptions: function () {\n    var labelOptions = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n    return _extends({}, labelOptions, {\n      markOptions: {\n        isRequiredMark: this.option(\"showRequiredMark\") && labelOptions.isRequired,\n        requiredMark: this.option(\"requiredMark\"),\n        isOptionalMark: this.option(\"showOptionalMark\") && !labelOptions.isRequired,\n        optionalMark: this.option(\"optionalMark\")\n      }\n    });\n  },\n  _renderEditor: function (options) {\n    var dataValue = this._getDataByField(options.dataField);\n\n    var defaultEditorOptions = void 0 !== dataValue || this._isCheckboxUndefinedStateEnabled(options) ? {\n      value: dataValue\n    } : {};\n\n    if (-1 !== EDITORS_WITH_ARRAY_VALUE.indexOf(options.editorType)) {\n      defaultEditorOptions.value = defaultEditorOptions.value || [];\n    }\n\n    var formInstance = this.option(\"form\");\n    var editorOptions = extend(true, defaultEditorOptions, options.editorOptions, {\n      inputAttr: {\n        id: options.id\n      },\n      validationBoundary: options.validationBoundary,\n      stylingMode: formInstance && formInstance.option(\"stylingMode\")\n    });\n\n    this._replaceDataOptions(options.editorOptions, editorOptions);\n\n    var renderOptions = {\n      editorType: options.editorType,\n      dataField: options.dataField,\n      template: options.template,\n      name: options.name,\n      helpID: options.helpID,\n      labelID: options.labelID,\n      isRequired: options.isRequired\n    };\n    return this._createEditor(options.$container, renderOptions, editorOptions);\n  },\n  _replaceDataOptions: function (originalOptions, resultOptions) {\n    if (originalOptions) {\n      DATA_OPTIONS.forEach(function (item) {\n        if (resultOptions[item]) {\n          resultOptions[item] = originalOptions[item];\n        }\n      });\n    }\n  },\n  _renderValidator: function ($editor, item) {\n    var fieldName = this._getFieldLabelName(item);\n\n    var validationRules = this._prepareValidationRules(item.validationRules, item.isRequired, item.itemType, fieldName);\n\n    if (Array.isArray(validationRules) && validationRules.length) {\n      this._createComponent($editor, Validator, {\n        validationRules: validationRules,\n        validationGroup: this.option(\"validationGroup\"),\n        dataGetter: function () {\n          return {\n            formItem: item\n          };\n        }\n      });\n    }\n  },\n  _getFieldLabelName: function (item) {\n    var isItemHaveCustomLabel = item.label && item.label.text;\n    var itemName = isItemHaveCustomLabel ? null : this._getName(item);\n    return isItemHaveCustomLabel ? item.label.text : itemName && captionize(itemName);\n  },\n  _prepareValidationRules: function (userValidationRules, isItemRequired, itemType, itemName) {\n    var isSimpleItem = itemType === SIMPLE_ITEM_TYPE;\n    var validationRules;\n\n    if (isSimpleItem) {\n      if (userValidationRules) {\n        validationRules = userValidationRules;\n      } else {\n        var requiredMessage = format(this.option(\"requiredMessage\"), itemName || \"\");\n        validationRules = isItemRequired ? [{\n          type: \"required\",\n          message: requiredMessage\n        }] : null;\n      }\n    }\n\n    return validationRules;\n  },\n  _addWrapperInvalidClass: function (editorInstance) {\n    var wrapperClass = \".\" + FIELD_ITEM_CONTENT_WRAPPER_CLASS;\n\n    var toggleInvalidClass = function (e) {\n      $(e.element).parents(wrapperClass).toggleClass(INVALID_CLASS, e.component._isFocused() && false === e.component.option(\"isValid\"));\n    };\n\n    editorInstance.on(\"focusIn\", toggleInvalidClass).on(\"focusOut\", toggleInvalidClass).on(\"enterKey\", toggleInvalidClass);\n  },\n  _createEditor: function ($container, renderOptions, editorOptions) {\n    var template = renderOptions.template;\n    var editorInstance;\n\n    if (renderOptions.dataField && !editorOptions.name) {\n      editorOptions.name = renderOptions.dataField;\n    }\n\n    this._addItemContentClasses($container);\n\n    if (template) {\n      var data = {\n        dataField: renderOptions.dataField,\n        editorType: renderOptions.editorType,\n        editorOptions: editorOptions,\n        component: this._getComponentOwner(),\n        name: renderOptions.name\n      };\n      template.render({\n        model: data,\n        container: getPublicElement($container)\n      });\n    } else {\n      var $editor = $(\"<div>\").appendTo($container);\n\n      try {\n        editorInstance = this._createComponent($editor, renderOptions.editorType, editorOptions);\n        editorInstance.setAria(\"describedby\", renderOptions.helpID);\n        editorInstance.setAria(\"labelledby\", renderOptions.labelID);\n        editorInstance.setAria(\"required\", renderOptions.isRequired);\n\n        if (renderOptions.dataField) {\n          this._bindDataField(editorInstance, renderOptions, $container);\n        }\n      } catch (e) {\n        errors.log(\"E1035\", e.message);\n      }\n    }\n\n    return editorInstance;\n  },\n  _getComponentOwner: function () {\n    return this.option(\"form\") || this;\n  },\n  _bindDataField: function (editorInstance, renderOptions, $container) {\n    var componentOwner = this._getComponentOwner();\n\n    editorInstance.on(\"enterKey\", function (args) {\n      componentOwner._createActionByOption(\"onEditorEnterKey\")(extend(args, {\n        dataField: renderOptions.dataField\n      }));\n    });\n\n    this._createWatcher(editorInstance, $container, renderOptions);\n\n    this.linkEditorToDataField(editorInstance, renderOptions.dataField, renderOptions.editorType);\n  },\n  _createWatcher: function (editorInstance, $container, renderOptions) {\n    var that = this;\n\n    var watch = that._getWatch();\n\n    if (!isFunction(watch)) {\n      return;\n    }\n\n    var dispose = watch(function () {\n      return that._getDataByField(renderOptions.dataField);\n    }, function () {\n      editorInstance.option(\"value\", that._getDataByField(renderOptions.dataField));\n    }, {\n      deep: true,\n      skipImmediate: true\n    });\n    eventsEngine.on($container, removeEvent, dispose);\n  },\n  _getWatch: function () {\n    if (!isDefined(this._watch)) {\n      var formInstance = this.option(\"form\");\n      this._watch = formInstance && formInstance.option(\"integrationOptions.watchMethod\");\n    }\n\n    return this._watch;\n  },\n  _addItemContentClasses: function ($itemContent) {\n    var locationSpecificClass = this._getItemContentLocationSpecificClass();\n\n    $itemContent.addClass([FIELD_ITEM_CONTENT_CLASS, locationSpecificClass].join(\" \"));\n  },\n  _getItemContentLocationSpecificClass: function () {\n    var labelLocation = this.option(\"labelLocation\");\n    return FIELD_ITEM_CONTENT_LOCATION_CLASS + {\n      right: \"left\",\n      left: \"right\",\n      top: \"bottom\"\n    }[labelLocation];\n  },\n  _createComponent: function ($editor, type, editorOptions) {\n    var readOnlyState = this.option(\"readOnly\");\n    var instance = this.callBase($editor, type, editorOptions);\n    readOnlyState && instance.option(\"readOnly\", readOnlyState);\n    this.on(\"optionChanged\", function (args) {\n      if (\"readOnly\" === args.name && !isDefined(editorOptions.readOnly)) {\n        instance.option(args.name, args.value);\n      }\n    });\n    return instance;\n  },\n  _getTemplateByFieldItem: function (fieldItem) {\n    return fieldItem.template ? this._getTemplate(fieldItem.template) : null;\n  },\n  _appendEditorToField: function (params) {\n    if (params.$label) {\n      var location = params.labelOptions.location;\n\n      if (\"top\" === location || \"left\" === location) {\n        params.$fieldItem.append(params.$editor);\n      }\n\n      if (\"right\" === location) {\n        params.$fieldItem.prepend(params.$editor);\n      }\n\n      this._addInnerItemAlignmentClass(params.$fieldItem, location);\n    } else {\n      params.$fieldItem.append(params.$editor);\n    }\n  },\n  _addInnerItemAlignmentClass: function ($fieldItem, location) {\n    if (\"top\" === location) {\n      $fieldItem.addClass(LABEL_VERTICAL_ALIGNMENT_CLASS);\n    } else {\n      $fieldItem.addClass(LABEL_HORIZONTAL_ALIGNMENT_CLASS);\n    }\n  },\n  _attachClickHandler: function ($label, $editor, editorType) {\n    var isBooleanEditors = \"dxCheckBox\" === editorType || \"dxSwitch\" === editorType;\n\n    if ($label && isBooleanEditors) {\n      eventsEngine.on($label, clickEventName, function () {\n        eventsEngine.trigger($editor.children(), clickEventName);\n      });\n    }\n  },\n  _generateRatio: function (count, isAutoSize) {\n    var result = [];\n    var ratio;\n    var i;\n\n    for (i = 0; i < count; i++) {\n      ratio = {\n        ratio: 1\n      };\n\n      if (isAutoSize) {\n        ratio.baseSize = \"auto\";\n      }\n\n      result.push(ratio);\n    }\n\n    return result;\n  },\n  _getRowsCount: function () {\n    return Math.ceil(this._items.length / this._getColCount());\n  },\n  _updateReferencedOptions: function (newLayoutData) {\n    var layoutData = this.option(\"layoutData\");\n\n    if (isObject(layoutData)) {\n      Object.getOwnPropertyNames(layoutData).forEach(property => delete this._optionsByReference[\"layoutData.\" + property]);\n    }\n\n    if (isObject(newLayoutData)) {\n      Object.getOwnPropertyNames(newLayoutData).forEach(property => this._optionsByReference[\"layoutData.\" + property] = true);\n    }\n  },\n\n  _resetWidget(instance) {\n    this._disableEditorValueChangedHandler = true;\n    instance.reset();\n    this._disableEditorValueChangedHandler = false;\n    instance.option(\"isValid\", true);\n  },\n\n  _optionChanged(args) {\n    if (0 === args.fullName.search(\"layoutData.\")) {\n      return;\n    }\n\n    switch (args.name) {\n      case \"showRequiredMark\":\n      case \"showOptionalMark\":\n      case \"requiredMark\":\n      case \"optionalMark\":\n        this._cashedRequiredConfig = null;\n\n        this._invalidate();\n\n        break;\n\n      case \"layoutData\":\n        this._updateReferencedOptions(args.value);\n\n        if (this.option(\"items\")) {\n          if (!isEmptyObject(args.value)) {\n            this._itemsRunTimeInfo.each((_, itemRunTimeInfo) => {\n              if (isDefined(itemRunTimeInfo.item)) {\n                var dataField = itemRunTimeInfo.item.dataField;\n\n                if (dataField && isDefined(itemRunTimeInfo.widgetInstance)) {\n                  var valueGetter = compileGetter(dataField);\n                  var dataValue = valueGetter(args.value);\n\n                  if (void 0 !== dataValue || this._isCheckboxUndefinedStateEnabled(itemRunTimeInfo.item)) {\n                    itemRunTimeInfo.widgetInstance.option(\"value\", dataValue);\n                  } else {\n                    this._resetWidget(itemRunTimeInfo.widgetInstance);\n                  }\n                }\n              }\n            });\n          }\n        } else {\n          this._initDataAndItems(args.value);\n\n          this._invalidate();\n        }\n\n        break;\n\n      case \"items\":\n        this._cleanItemWatchers();\n\n        this._initDataAndItems(args.value);\n\n        this._invalidate();\n\n        break;\n\n      case \"alignItemLabels\":\n      case \"labelLocation\":\n      case \"requiredMessage\":\n        this._invalidate();\n\n        break;\n\n      case \"customizeItem\":\n        this._updateItems(this.option(\"layoutData\"));\n\n        this._invalidate();\n\n        break;\n\n      case \"colCount\":\n        this._resetColCount();\n\n        break;\n\n      case \"minColWidth\":\n        if (\"auto\" === this.option(\"colCount\")) {\n          this._resetColCount();\n        }\n\n        break;\n\n      case \"readOnly\":\n        break;\n\n      case \"width\":\n        this.callBase(args);\n\n        if (\"auto\" === this.option(\"colCount\")) {\n          this._resetColCount();\n        }\n\n        break;\n\n      case \"onFieldDataChanged\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n\n  _resetColCount: function () {\n    this._cashedColCount = null;\n\n    this._invalidate();\n  },\n\n  linkEditorToDataField(editorInstance, dataField) {\n    this.on(\"optionChanged\", args => {\n      if (args.fullName === \"layoutData.\".concat(dataField)) {\n        editorInstance._setOptionWithoutOptionChange(\"value\", args.value);\n      }\n    });\n    editorInstance.on(\"valueChanged\", args => {\n      var isValueReferenceType = isObject(args.value) || Array.isArray(args.value);\n\n      if (!this._disableEditorValueChangedHandler && !(isValueReferenceType && args.value === args.previousValue)) {\n        this._updateFieldValue(dataField, args.value);\n      }\n    });\n  },\n\n  _dimensionChanged: function () {\n    if (\"auto\" === this.option(\"colCount\") && this.isCachedColCountObsolete()) {\n      this._eventsStrategy.fireEvent(\"autoColCountChanged\");\n    }\n  },\n  getItemID: function (name) {\n    var formInstance = this.option(\"form\");\n    return formInstance && formInstance.getItemID(name);\n  },\n  updateData: function (data, value) {\n    var that = this;\n\n    if (isObject(data)) {\n      each(data, function (dataField, fieldValue) {\n        that._updateFieldValue(dataField, fieldValue);\n      });\n    } else if (\"string\" === typeof data) {\n      that._updateFieldValue(data, value);\n    }\n  },\n  getEditor: function (field) {\n    return this._itemsRunTimeInfo.findWidgetInstanceByDataField(field) || this._itemsRunTimeInfo.findWidgetInstanceByName(field);\n  },\n  isSingleColumnMode: function (component) {\n    var responsiveBox = this._responsiveBox || component;\n\n    if (responsiveBox) {\n      return responsiveBox.option(\"currentScreenFactor\") === responsiveBox.option(\"singleColumnScreen\");\n    }\n  },\n  getItemsRunTimeInfo: function () {\n    return this._itemsRunTimeInfo;\n  }\n});\nregisterComponent(\"dxLayoutManager\", LayoutManager);\nexport default LayoutManager;","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/node_modules/devextreme/esm/ui/form/ui.form.layout_manager.js"],"names":["_extends","$","eventsEngine","Guid","default","FormItemsRunTimeInfo","registerComponent","isDefined","isEmptyObject","isFunction","isObject","type","getPublicElement","variableWrapper","getCurrentScreenFactor","hasWindow","format","each","extend","inArray","normalizeIndexes","compileGetter","removeEvent","name","clickEventName","errors","messageLocalization","styleProp","captionize","Widget","Validator","ResponsiveBox","isMaterial","FIELD_ITEM_CLASS","FLEX_LAYOUT_CLASS","LAYOUT_MANAGER_ONE_COLUMN","FIELD_ITEM_OPTIONAL_CLASS","FIELD_ITEM_REQUIRED_CLASS","FIELD_ITEM_CONTENT_WRAPPER_CLASS","FORM_LAYOUT_MANAGER_CLASS","LABEL_VERTICAL_ALIGNMENT_CLASS","LABEL_HORIZONTAL_ALIGNMENT_CLASS","FIELD_ITEM_LABEL_ALIGN_CLASS","FIELD_ITEM_CONTENT_LOCATION_CLASS","FIELD_ITEM_CONTENT_CLASS","FIELD_EMPTY_ITEM_CLASS","SINGLE_COLUMN_ITEM_CONTENT","ROOT_SIMPLE_ITEM_CLASS","renderLabel","renderHelpText","renderButton","adjustContainerAsButtonItem","convertAlignmentToJustifyContent","convertAlignmentToTextAlign","FORM_EDITOR_BY_DEFAULT","LAYOUT_MANAGER_FIRST_ROW_CLASS","LAYOUT_MANAGER_LAST_ROW_CLASS","LAYOUT_MANAGER_FIRST_COL_CLASS","LAYOUT_MANAGER_LAST_COL_CLASS","INVALID_CLASS","LAYOUT_STRATEGY_FLEX","LAYOUT_STRATEGY_FALLBACK","SIMPLE_ITEM_TYPE","TEMPLATE_WRAPPER_CLASS","DATA_OPTIONS","EDITORS_WITH_ARRAY_VALUE","LayoutManager","inherit","_getDefaultOptions","callBase","layoutData","readOnly","colCount","colCountByScreen","labelLocation","onFieldDataChanged","onEditorEnterKey","customizeItem","alignItemLabels","minColWidth","showRequiredMark","screenByWidth","showOptionalMark","requiredMark","optionalMark","requiredMessage","getFormatter","_setOptionsByReference","_optionsByReference","validationGroup","_init","option","_itemWatchers","_itemsRunTimeInfo","_updateReferencedOptions","_initDataAndItems","_dispose","_cleanItemWatchers","initialData","_syncDataWithItems","_updateItems","userItems","forEach","item","dataField","_getDataByField","value","editorOptions","_updateFieldValue","_isCheckboxUndefinedStateEnabled","editorOption","allowIndeterminateState","editorType","nameParts","split","propertyName","pop","join","newValue","isWrapped","isWritableWrapped","_triggerOnFieldDataChanged","args","_createActionByOption","that","isUserItemsExist","items","_generateItemsByData","processedItems","index","_isAcceptableItem","_processItem","unwrap","visible","push","length","_updateItemWatchers","_setItems","_sortItems","dispose","watch","_getWatch","repaint","skipImmediate","result","itemField","itemData","itemType","_getEditorTypeByDataType","_item$allowIndetermin","dataType","_items","_sortIndexes","sort","itemA","itemB","indexA","visibleIndex","indexB","_initMarkup","clear","$element","addClass","_renderResponsiveBox","_hasBrowserFlex","templatesInfo","_getColCount","$container","appendTo","_prepareItemsWithMerging","layoutItems","_generateLayoutItems","_responsiveBox","_createComponent","_getResponsiveBoxConfig","_renderTemplates","_itemStateChangedHandler","e","_refresh","_renderTemplate","_renderEmptyItem","_renderButtonItem","_renderFieldItem","info","container","formItem","xsColCount","xs","onItemStateChanged","bind","_layoutStrategy","onLayoutChanged","isSingleColumnMode","toggleClass","onContentReady","component","itemTemplate","itemElement","location","$itemElement","itemRenderedCountInPreviousRows","row","col","$fieldItem","cssClass","isLastColumn","colspan","rowsCount","_getRowsCount","isLastRow","cols","_generateRatio","rows","dataSource","singleColumnScreen","screenFactor","getTargetScreenFactor","_cashedColCount","_getMaxColCount","width","itemsCount","maxColCount","Math","floor","isCachedColCountObsolete","slice","itemsMergedByCol","j","i","colSpan","_getColByIndex","merged","concat","generatedItem","parseInt","disabled","rowSpan","rowspan","html","justifyContent","verticalAlignment","textAlign","horizontalAlignment","cssItemClass","targetColIndex","$button","buttonOptions","createComponentCallback","append","add","widgetInstance","dxButton","guid","$itemContainer","_addItemClasses","$item","column","_getName","id","getItemID","isRequired","_hasRequiredRuleInSet","validationRules","labelOptions","_getLabelOptions","$editor","helpID","helpText","$label","text","_renderLabel","_isLabelNeedBaselineAlign","data","_appendEditorToField","instance","_renderEditor","template","_getTemplateByFieldItem","labelID","validationBoundary","editorElem","children","first","$validationTarget","hasClass","validationTargetInstance","_renderValidator","_addWrapperInvalidClass","isSimpleItem","$editorParent","parent","_attachClickHandler","rules","hasRequiredRule","rule","_isLabelNeedId","showColon","label","_getRenderLabelOptions","arguments","markOptions","isRequiredMark","isOptionalMark","options","dataValue","defaultEditorOptions","indexOf","formInstance","inputAttr","stylingMode","_replaceDataOptions","renderOptions","_createEditor","originalOptions","resultOptions","fieldName","_getFieldLabelName","_prepareValidationRules","Array","isArray","dataGetter","isItemHaveCustomLabel","itemName","userValidationRules","isItemRequired","message","editorInstance","wrapperClass","toggleInvalidClass","element","parents","_isFocused","on","_addItemContentClasses","_getComponentOwner","render","model","setAria","_bindDataField","log","componentOwner","_createWatcher","linkEditorToDataField","deep","_watch","$itemContent","locationSpecificClass","_getItemContentLocationSpecificClass","right","left","top","readOnlyState","fieldItem","_getTemplate","params","prepend","_addInnerItemAlignmentClass","isBooleanEditors","trigger","count","isAutoSize","ratio","baseSize","ceil","newLayoutData","Object","getOwnPropertyNames","property","_resetWidget","_disableEditorValueChangedHandler","reset","_optionChanged","fullName","search","_cashedRequiredConfig","_invalidate","_","itemRunTimeInfo","valueGetter","_resetColCount","_setOptionWithoutOptionChange","isValueReferenceType","previousValue","_dimensionChanged","_eventsStrategy","fireEvent","updateData","fieldValue","getEditor","field","findWidgetInstanceByDataField","findWidgetInstanceByName","responsiveBox","getItemsRunTimeInfo"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/form/ui.form.layout_manager.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Guid from \"../../core/guid\";\r\nimport {\r\n    default as FormItemsRunTimeInfo\r\n} from \"./ui.form.items_runtime_info\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject,\r\n    isFunction,\r\n    isObject,\r\n    type\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    getCurrentScreenFactor,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    format\r\n} from \"../../core/utils/string\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    inArray,\r\n    normalizeIndexes\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    removeEvent\r\n} from \"../../core/remove_event\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    styleProp\r\n} from \"../../core/utils/style\";\r\nimport {\r\n    captionize\r\n} from \"../../core/utils/inflector\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport Validator from \"../validator\";\r\nimport ResponsiveBox from \"../responsive_box\";\r\nimport {\r\n    isMaterial\r\n} from \"../themes\";\r\nimport {\r\n    FIELD_ITEM_CLASS,\r\n    FLEX_LAYOUT_CLASS,\r\n    LAYOUT_MANAGER_ONE_COLUMN,\r\n    FIELD_ITEM_OPTIONAL_CLASS,\r\n    FIELD_ITEM_REQUIRED_CLASS,\r\n    FIELD_ITEM_CONTENT_WRAPPER_CLASS,\r\n    FORM_LAYOUT_MANAGER_CLASS,\r\n    LABEL_VERTICAL_ALIGNMENT_CLASS,\r\n    LABEL_HORIZONTAL_ALIGNMENT_CLASS,\r\n    FIELD_ITEM_LABEL_ALIGN_CLASS,\r\n    FIELD_ITEM_CONTENT_LOCATION_CLASS,\r\n    FIELD_ITEM_CONTENT_CLASS,\r\n    FIELD_EMPTY_ITEM_CLASS,\r\n    SINGLE_COLUMN_ITEM_CONTENT,\r\n    ROOT_SIMPLE_ITEM_CLASS\r\n} from \"./constants\";\r\nimport \"../text_box\";\r\nimport \"../number_box\";\r\nimport \"../check_box\";\r\nimport \"../date_box\";\r\nimport \"../button\";\r\nimport {\r\n    renderLabel,\r\n    renderHelpText,\r\n    renderButton,\r\n    adjustContainerAsButtonItem,\r\n    convertAlignmentToJustifyContent,\r\n    convertAlignmentToTextAlign\r\n} from \"./ui.form.utils\";\r\nvar FORM_EDITOR_BY_DEFAULT = \"dxTextBox\";\r\nvar LAYOUT_MANAGER_FIRST_ROW_CLASS = \"dx-first-row\";\r\nvar LAYOUT_MANAGER_LAST_ROW_CLASS = \"dx-last-row\";\r\nvar LAYOUT_MANAGER_FIRST_COL_CLASS = \"dx-first-col\";\r\nvar LAYOUT_MANAGER_LAST_COL_CLASS = \"dx-last-col\";\r\nvar INVALID_CLASS = \"dx-invalid\";\r\nvar LAYOUT_STRATEGY_FLEX = \"flex\";\r\nvar LAYOUT_STRATEGY_FALLBACK = \"fallback\";\r\nvar SIMPLE_ITEM_TYPE = \"simple\";\r\nvar TEMPLATE_WRAPPER_CLASS = \"dx-template-wrapper\";\r\nvar DATA_OPTIONS = [\"dataSource\", \"items\"];\r\nvar EDITORS_WITH_ARRAY_VALUE = [\"dxTagBox\", \"dxRangeSlider\"];\r\nvar LayoutManager = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            layoutData: {},\r\n            readOnly: false,\r\n            colCount: 1,\r\n            colCountByScreen: void 0,\r\n            labelLocation: \"left\",\r\n            onFieldDataChanged: null,\r\n            onEditorEnterKey: null,\r\n            customizeItem: null,\r\n            alignItemLabels: true,\r\n            minColWidth: 200,\r\n            showRequiredMark: true,\r\n            screenByWidth: null,\r\n            showOptionalMark: false,\r\n            requiredMark: \"*\",\r\n            optionalMark: messageLocalization.format(\"dxForm-optionalMark\"),\r\n            requiredMessage: messageLocalization.getFormatter(\"dxForm-requiredMessage\")\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            layoutData: true,\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        var layoutData = this.option(\"layoutData\");\r\n        this.callBase();\r\n        this._itemWatchers = [];\r\n        this._itemsRunTimeInfo = new FormItemsRunTimeInfo;\r\n        this._updateReferencedOptions(layoutData);\r\n        this._initDataAndItems(layoutData)\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._cleanItemWatchers()\r\n    },\r\n    _initDataAndItems: function(initialData) {\r\n        this._syncDataWithItems();\r\n        this._updateItems(initialData)\r\n    },\r\n    _syncDataWithItems: function() {\r\n        var layoutData = this.option(\"layoutData\");\r\n        var userItems = this.option(\"items\");\r\n        if (isDefined(userItems)) {\r\n            userItems.forEach(item => {\r\n                if (item.dataField && void 0 === this._getDataByField(item.dataField)) {\r\n                    var value;\r\n                    if (item.editorOptions) {\r\n                        value = item.editorOptions.value\r\n                    }\r\n                    if (isDefined(value) || item.dataField in layoutData) {\r\n                        this._updateFieldValue(item.dataField, value)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _getDataByField: function(dataField) {\r\n        return dataField ? this.option(\"layoutData.\" + dataField) : null\r\n    },\r\n    _isCheckboxUndefinedStateEnabled: function(editorOption) {\r\n        if (true === editorOption.allowIndeterminateState && \"dxCheckBox\" === editorOption.editorType) {\r\n            var nameParts = [\"layoutData\", ...editorOption.dataField.split(\".\")];\r\n            var propertyName = nameParts.pop();\r\n            var layoutData = this.option(nameParts.join(\".\"));\r\n            return layoutData && propertyName in layoutData\r\n        }\r\n        return false\r\n    },\r\n    _updateFieldValue: function(dataField, value) {\r\n        var layoutData = this.option(\"layoutData\");\r\n        var newValue = value;\r\n        if (!variableWrapper.isWrapped(layoutData[dataField]) && isDefined(dataField)) {\r\n            this.option(\"layoutData.\" + dataField, newValue)\r\n        } else if (variableWrapper.isWritableWrapped(layoutData[dataField])) {\r\n            newValue = isFunction(newValue) ? newValue() : newValue;\r\n            layoutData[dataField](newValue)\r\n        }\r\n        this._triggerOnFieldDataChanged({\r\n            dataField: dataField,\r\n            value: newValue\r\n        })\r\n    },\r\n    _triggerOnFieldDataChanged: function(args) {\r\n        this._createActionByOption(\"onFieldDataChanged\")(args)\r\n    },\r\n    _updateItems: function(layoutData) {\r\n        var that = this;\r\n        var userItems = this.option(\"items\");\r\n        var isUserItemsExist = isDefined(userItems);\r\n        var customizeItem = that.option(\"customizeItem\");\r\n        var items = isUserItemsExist ? userItems : this._generateItemsByData(layoutData);\r\n        if (isDefined(items)) {\r\n            var processedItems = [];\r\n            each(items, (function(index, item) {\r\n                if (that._isAcceptableItem(item)) {\r\n                    item = that._processItem(item);\r\n                    customizeItem && customizeItem(item);\r\n                    if (isObject(item) && false !== variableWrapper.unwrap(item.visible)) {\r\n                        processedItems.push(item)\r\n                    }\r\n                }\r\n            }));\r\n            if (!that._itemWatchers.length || !isUserItemsExist) {\r\n                that._updateItemWatchers(items)\r\n            }\r\n            this._setItems(processedItems);\r\n            this._sortItems()\r\n        }\r\n    },\r\n    _cleanItemWatchers: function() {\r\n        this._itemWatchers.forEach((function(dispose) {\r\n            dispose()\r\n        }));\r\n        this._itemWatchers = []\r\n    },\r\n    _updateItemWatchers: function(items) {\r\n        var that = this;\r\n        var watch = that._getWatch();\r\n        items.forEach((function(item) {\r\n            if (isObject(item) && isDefined(item.visible) && isFunction(watch)) {\r\n                that._itemWatchers.push(watch((function() {\r\n                    return variableWrapper.unwrap(item.visible)\r\n                }), (function() {\r\n                    that._updateItems(that.option(\"layoutData\"));\r\n                    that.repaint()\r\n                }), {\r\n                    skipImmediate: true\r\n                }))\r\n            }\r\n        }))\r\n    },\r\n    _generateItemsByData: function(layoutData) {\r\n        var result = [];\r\n        if (isDefined(layoutData)) {\r\n            each(layoutData, (function(dataField) {\r\n                result.push({\r\n                    dataField: dataField\r\n                })\r\n            }))\r\n        }\r\n        return result\r\n    },\r\n    _isAcceptableItem: function(item) {\r\n        var itemField = item.dataField || item;\r\n        var itemData = this._getDataByField(itemField);\r\n        return !(isFunction(itemData) && !variableWrapper.isWrapped(itemData))\r\n    },\r\n    _processItem: function(item) {\r\n        if (\"string\" === typeof item) {\r\n            item = {\r\n                dataField: item\r\n            }\r\n        }\r\n        if (\"object\" === typeof item && !item.itemType) {\r\n            item.itemType = SIMPLE_ITEM_TYPE\r\n        }\r\n        if (!isDefined(item.editorType) && isDefined(item.dataField)) {\r\n            var value = this._getDataByField(item.dataField);\r\n            item.editorType = isDefined(value) ? this._getEditorTypeByDataType(type(value)) : FORM_EDITOR_BY_DEFAULT\r\n        }\r\n        if (\"dxCheckBox\" === item.editorType) {\r\n            var _item$allowIndetermin;\r\n            item.allowIndeterminateState = null !== (_item$allowIndetermin = item.allowIndeterminateState) && void 0 !== _item$allowIndetermin ? _item$allowIndetermin : true\r\n        }\r\n        return item\r\n    },\r\n    _getEditorTypeByDataType: function(dataType) {\r\n        switch (dataType) {\r\n            case \"number\":\r\n                return \"dxNumberBox\";\r\n            case \"date\":\r\n                return \"dxDateBox\";\r\n            case \"boolean\":\r\n                return \"dxCheckBox\";\r\n            default:\r\n                return \"dxTextBox\"\r\n        }\r\n    },\r\n    _sortItems: function() {\r\n        normalizeIndexes(this._items, \"visibleIndex\");\r\n        this._sortIndexes()\r\n    },\r\n    _sortIndexes: function() {\r\n        this._items.sort((function(itemA, itemB) {\r\n            var indexA = itemA.visibleIndex;\r\n            var indexB = itemB.visibleIndex;\r\n            var result;\r\n            if (indexA > indexB) {\r\n                result = 1\r\n            } else if (indexA < indexB) {\r\n                result = -1\r\n            } else {\r\n                result = 0\r\n            }\r\n            return result\r\n        }))\r\n    },\r\n    _initMarkup: function() {\r\n        this._itemsRunTimeInfo.clear();\r\n        this.$element().addClass(FORM_LAYOUT_MANAGER_CLASS);\r\n        this.callBase();\r\n        this._renderResponsiveBox()\r\n    },\r\n    _hasBrowserFlex: function() {\r\n        return styleProp(LAYOUT_STRATEGY_FLEX) === LAYOUT_STRATEGY_FLEX\r\n    },\r\n    _renderResponsiveBox: function() {\r\n        var templatesInfo = [];\r\n        if (this._items && this._items.length) {\r\n            var colCount = this._getColCount();\r\n            var $container = $(\"<div>\").appendTo(this.$element());\r\n            this._prepareItemsWithMerging(colCount);\r\n            var layoutItems = this._generateLayoutItems();\r\n            this._responsiveBox = this._createComponent($container, ResponsiveBox, this._getResponsiveBoxConfig(layoutItems, colCount, templatesInfo));\r\n            if (!hasWindow()) {\r\n                this._renderTemplates(templatesInfo)\r\n            }\r\n        }\r\n    },\r\n    _itemStateChangedHandler: function(e) {\r\n        this._refresh()\r\n    },\r\n    _renderTemplate: function($container, item) {\r\n        switch (item.itemType) {\r\n            case \"empty\":\r\n                this._renderEmptyItem($container);\r\n                break;\r\n            case \"button\":\r\n                this._renderButtonItem(item, $container);\r\n                break;\r\n            default:\r\n                this._renderFieldItem(item, $container)\r\n        }\r\n    },\r\n    _renderTemplates: function(templatesInfo) {\r\n        var that = this;\r\n        each(templatesInfo, (function(index, info) {\r\n            that._renderTemplate(info.container, info.formItem)\r\n        }))\r\n    },\r\n    _getResponsiveBoxConfig: function(layoutItems, colCount, templatesInfo) {\r\n        var that = this;\r\n        var colCountByScreen = that.option(\"colCountByScreen\");\r\n        var xsColCount = colCountByScreen && colCountByScreen.xs;\r\n        return {\r\n            onItemStateChanged: this._itemStateChangedHandler.bind(this),\r\n            _layoutStrategy: that._hasBrowserFlex() ? LAYOUT_STRATEGY_FLEX : LAYOUT_STRATEGY_FALLBACK,\r\n            onLayoutChanged: function() {\r\n                var onLayoutChanged = that.option(\"onLayoutChanged\");\r\n                var isSingleColumnMode = that.isSingleColumnMode();\r\n                if (onLayoutChanged) {\r\n                    that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, isSingleColumnMode);\r\n                    onLayoutChanged(isSingleColumnMode)\r\n                }\r\n            },\r\n            onContentReady: function(e) {\r\n                if (hasWindow()) {\r\n                    that._renderTemplates(templatesInfo)\r\n                }\r\n                if (that.option(\"onLayoutChanged\")) {\r\n                    that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, that.isSingleColumnMode(e.component))\r\n                }\r\n            },\r\n            itemTemplate: function(e, itemData, itemElement) {\r\n                if (!e.location) {\r\n                    return\r\n                }\r\n                var $itemElement = $(itemElement);\r\n                var itemRenderedCountInPreviousRows = e.location.row * colCount;\r\n                var item = that._items[e.location.col + itemRenderedCountInPreviousRows];\r\n                var $fieldItem = $(\"<div>\").addClass(item.cssClass).appendTo($itemElement);\r\n                templatesInfo.push({\r\n                    container: $fieldItem,\r\n                    formItem: item\r\n                });\r\n                $itemElement.toggleClass(SINGLE_COLUMN_ITEM_CONTENT, that.isSingleColumnMode(this));\r\n                if (0 === e.location.row) {\r\n                    $fieldItem.addClass(LAYOUT_MANAGER_FIRST_ROW_CLASS)\r\n                }\r\n                if (0 === e.location.col) {\r\n                    $fieldItem.addClass(LAYOUT_MANAGER_FIRST_COL_CLASS)\r\n                }\r\n                if (item.itemType === SIMPLE_ITEM_TYPE && that.option(\"isRoot\")) {\r\n                    $itemElement.addClass(ROOT_SIMPLE_ITEM_CLASS)\r\n                }\r\n                var isLastColumn = e.location.col === colCount - 1 || e.location.col + e.location.colspan === colCount;\r\n                var rowsCount = that._getRowsCount();\r\n                var isLastRow = e.location.row === rowsCount - 1;\r\n                if (isLastColumn) {\r\n                    $fieldItem.addClass(LAYOUT_MANAGER_LAST_COL_CLASS)\r\n                }\r\n                if (isLastRow) {\r\n                    $fieldItem.addClass(LAYOUT_MANAGER_LAST_ROW_CLASS)\r\n                }\r\n            },\r\n            cols: that._generateRatio(colCount),\r\n            rows: that._generateRatio(that._getRowsCount(), true),\r\n            dataSource: layoutItems,\r\n            screenByWidth: that.option(\"screenByWidth\"),\r\n            singleColumnScreen: xsColCount ? false : \"xs\"\r\n        }\r\n    },\r\n    _getColCount: function() {\r\n        var colCount = this.option(\"colCount\");\r\n        var colCountByScreen = this.option(\"colCountByScreen\");\r\n        if (colCountByScreen) {\r\n            var screenFactor = this.option(\"form\").getTargetScreenFactor();\r\n            if (!screenFactor) {\r\n                screenFactor = hasWindow() ? getCurrentScreenFactor(this.option(\"screenByWidth\")) : \"lg\"\r\n            }\r\n            colCount = colCountByScreen[screenFactor] || colCount\r\n        }\r\n        if (\"auto\" === colCount) {\r\n            if (this._cashedColCount) {\r\n                return this._cashedColCount\r\n            }\r\n            this._cashedColCount = colCount = this._getMaxColCount()\r\n        }\r\n        return colCount < 1 ? 1 : colCount\r\n    },\r\n    _getMaxColCount: function() {\r\n        if (!hasWindow()) {\r\n            return 1\r\n        }\r\n        var minColWidth = this.option(\"minColWidth\");\r\n        var width = this.$element().width();\r\n        var itemsCount = this._items.length;\r\n        var maxColCount = Math.floor(width / minColWidth) || 1;\r\n        return itemsCount < maxColCount ? itemsCount : maxColCount\r\n    },\r\n    isCachedColCountObsolete: function() {\r\n        return this._cashedColCount && this._getMaxColCount() !== this._cashedColCount\r\n    },\r\n    _prepareItemsWithMerging: function(colCount) {\r\n        var items = this._items.slice(0);\r\n        var item;\r\n        var itemsMergedByCol;\r\n        var result = [];\r\n        var j;\r\n        var i;\r\n        for (i = 0; i < items.length; i++) {\r\n            item = items[i];\r\n            result.push(item);\r\n            if (this.option(\"alignItemLabels\") || item.alignItemLabels || item.colSpan) {\r\n                item.col = this._getColByIndex(result.length - 1, colCount)\r\n            }\r\n            if (item.colSpan > 1 && item.col + item.colSpan <= colCount) {\r\n                itemsMergedByCol = [];\r\n                for (j = 0; j < item.colSpan - 1; j++) {\r\n                    itemsMergedByCol.push({\r\n                        merged: true\r\n                    })\r\n                }\r\n                result = result.concat(itemsMergedByCol)\r\n            } else {\r\n                delete item.colSpan\r\n            }\r\n        }\r\n        this._setItems(result)\r\n    },\r\n    _getColByIndex: function(index, colCount) {\r\n        return index % colCount\r\n    },\r\n    _setItems: function(items) {\r\n        this._items = items;\r\n        this._cashedColCount = null\r\n    },\r\n    _generateLayoutItems: function() {\r\n        var items = this._items;\r\n        var colCount = this._getColCount();\r\n        var result = [];\r\n        var item;\r\n        var i;\r\n        for (i = 0; i < items.length; i++) {\r\n            item = items[i];\r\n            if (!item.merged) {\r\n                var generatedItem = {\r\n                    location: {\r\n                        row: parseInt(i / colCount),\r\n                        col: this._getColByIndex(i, colCount)\r\n                    }\r\n                };\r\n                if (isDefined(item.disabled)) {\r\n                    generatedItem.disabled = item.disabled\r\n                }\r\n                if (isDefined(item.visible)) {\r\n                    generatedItem.visible = item.visible\r\n                }\r\n                if (isDefined(item.colSpan)) {\r\n                    generatedItem.location.colspan = item.colSpan\r\n                }\r\n                if (isDefined(item.rowSpan)) {\r\n                    generatedItem.location.rowspan = item.rowSpan\r\n                }\r\n                result.push(generatedItem)\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _renderEmptyItem: function($container) {\r\n        return $container.addClass(FIELD_EMPTY_ITEM_CLASS).html(\"&nbsp;\")\r\n    },\r\n    _renderButtonItem: function(item, $container) {\r\n        adjustContainerAsButtonItem({\r\n            $container: $container,\r\n            justifyContent: convertAlignmentToJustifyContent(item.verticalAlignment),\r\n            textAlign: convertAlignmentToTextAlign(item.horizontalAlignment),\r\n            cssItemClass: this.option(\"cssItemClass\"),\r\n            targetColIndex: item.col\r\n        });\r\n        var $button = renderButton({\r\n            buttonOptions: extend({\r\n                validationGroup: this.option(\"validationGroup\")\r\n            }, item.buttonOptions),\r\n            createComponentCallback: this._createComponent.bind(this)\r\n        });\r\n        $container.append($button);\r\n        this._itemsRunTimeInfo.add({\r\n            item: item,\r\n            widgetInstance: $button.dxButton(\"instance\"),\r\n            guid: item.guid,\r\n            $itemContainer: $container\r\n        })\r\n    },\r\n    _addItemClasses: function($item, column) {\r\n        $item.addClass(FIELD_ITEM_CLASS).addClass(this.option(\"cssItemClass\")).addClass(isDefined(column) ? \"dx-col-\" + column : \"\")\r\n    },\r\n    _renderFieldItem: function(item, $container) {\r\n        var name = this._getName(item);\r\n        var id = this.getItemID(name);\r\n        var isRequired = isDefined(item.isRequired) ? item.isRequired : !!this._hasRequiredRuleInSet(item.validationRules);\r\n        var labelOptions = this._getLabelOptions(item, id, isRequired);\r\n        var $editor = $(\"<div>\");\r\n        var helpID = item.helpText ? \"dx-\" + new Guid : null;\r\n        var $label;\r\n        this._addItemClasses($container, item.col);\r\n        $container.addClass(isRequired ? FIELD_ITEM_REQUIRED_CLASS : FIELD_ITEM_OPTIONAL_CLASS);\r\n        if (labelOptions.visible && labelOptions.text) {\r\n            $label = this._renderLabel(labelOptions).appendTo($container)\r\n        }\r\n        if (item.itemType === SIMPLE_ITEM_TYPE) {\r\n            if (this._isLabelNeedBaselineAlign(item) && \"top\" !== labelOptions.location) {\r\n                $container.addClass(FIELD_ITEM_LABEL_ALIGN_CLASS)\r\n            }\r\n            this._hasBrowserFlex() && $container.addClass(FLEX_LAYOUT_CLASS)\r\n        }\r\n        $editor.data(\"dx-form-item\", item);\r\n        this._appendEditorToField({\r\n            $fieldItem: $container,\r\n            $label: $label,\r\n            $editor: $editor,\r\n            labelOptions: labelOptions\r\n        });\r\n        var instance = this._renderEditor({\r\n            $container: $editor,\r\n            dataField: item.dataField,\r\n            name: item.name,\r\n            editorType: item.editorType,\r\n            editorOptions: item.editorOptions,\r\n            template: this._getTemplateByFieldItem(item),\r\n            isRequired: isRequired,\r\n            helpID: helpID,\r\n            labelID: labelOptions.labelID,\r\n            id: id,\r\n            validationBoundary: this.option(\"validationBoundary\"),\r\n            allowIndeterminateState: item.allowIndeterminateState\r\n        });\r\n        this._itemsRunTimeInfo.add({\r\n            item: item,\r\n            widgetInstance: instance,\r\n            guid: item.guid,\r\n            $itemContainer: $container\r\n        });\r\n        var editorElem = $editor.children().first();\r\n        var $validationTarget = editorElem.hasClass(TEMPLATE_WRAPPER_CLASS) ? editorElem.children().first() : editorElem;\r\n        var validationTargetInstance = $validationTarget && $validationTarget.data(\"dx-validation-target\");\r\n        if (validationTargetInstance) {\r\n            this._renderValidator($validationTarget, item);\r\n            if (isMaterial()) {\r\n                this._addWrapperInvalidClass(validationTargetInstance)\r\n            }\r\n        }\r\n        var helpText = item.helpText;\r\n        var isSimpleItem = item.itemType === SIMPLE_ITEM_TYPE;\r\n        if (helpText && isSimpleItem) {\r\n            var $editorParent = $editor.parent();\r\n            $editorParent.append($(\"<div>\").addClass(FIELD_ITEM_CONTENT_WRAPPER_CLASS).append($editor).append(renderHelpText(helpText, helpID)))\r\n        }\r\n        this._attachClickHandler($label, $editor, item.editorType)\r\n    },\r\n    _hasRequiredRuleInSet: function(rules) {\r\n        var hasRequiredRule;\r\n        if (rules && rules.length) {\r\n            each(rules, (function(index, rule) {\r\n                if (\"required\" === rule.type) {\r\n                    hasRequiredRule = true;\r\n                    return false\r\n                }\r\n            }))\r\n        }\r\n        return hasRequiredRule\r\n    },\r\n    _getName: function(item) {\r\n        return item.dataField || item.name\r\n    },\r\n    _isLabelNeedBaselineAlign: function(item) {\r\n        return !!item.helpText && !this._hasBrowserFlex() || -1 !== inArray(item.editorType, [\"dxTextArea\", \"dxRadioGroup\", \"dxCalendar\", \"dxHtmlEditor\"])\r\n    },\r\n    _isLabelNeedId: function(item) {\r\n        return -1 !== inArray(item.editorType, [\"dxRadioGroup\", \"dxCheckBox\", \"dxLookup\", \"dxSlider\", \"dxRangeSlider\", \"dxSwitch\", \"dxHtmlEditor\"])\r\n    },\r\n    _getLabelOptions: function(item, id, isRequired) {\r\n        var labelOptions = extend({\r\n            showColon: this.option(\"showColonAfterLabel\"),\r\n            location: this.option(\"labelLocation\"),\r\n            id: id,\r\n            visible: true,\r\n            isRequired: isRequired\r\n        }, item ? item.label : {});\r\n        if (this._isLabelNeedId(item)) {\r\n            labelOptions.labelID = \"dx-label-\".concat(new Guid)\r\n        }\r\n        if (!labelOptions.text && item.dataField) {\r\n            labelOptions.text = captionize(item.dataField)\r\n        }\r\n        if (labelOptions.text) {\r\n            labelOptions.text += labelOptions.showColon ? \":\" : \"\"\r\n        }\r\n        return labelOptions\r\n    },\r\n    _renderLabel: function(labelOptions) {\r\n        return renderLabel(this._getRenderLabelOptions(labelOptions))\r\n    },\r\n    _getRenderLabelOptions: function() {\r\n        var labelOptions = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\r\n        return _extends({}, labelOptions, {\r\n            markOptions: {\r\n                isRequiredMark: this.option(\"showRequiredMark\") && labelOptions.isRequired,\r\n                requiredMark: this.option(\"requiredMark\"),\r\n                isOptionalMark: this.option(\"showOptionalMark\") && !labelOptions.isRequired,\r\n                optionalMark: this.option(\"optionalMark\")\r\n            }\r\n        })\r\n    },\r\n    _renderEditor: function(options) {\r\n        var dataValue = this._getDataByField(options.dataField);\r\n        var defaultEditorOptions = void 0 !== dataValue || this._isCheckboxUndefinedStateEnabled(options) ? {\r\n            value: dataValue\r\n        } : {};\r\n        if (-1 !== EDITORS_WITH_ARRAY_VALUE.indexOf(options.editorType)) {\r\n            defaultEditorOptions.value = defaultEditorOptions.value || []\r\n        }\r\n        var formInstance = this.option(\"form\");\r\n        var editorOptions = extend(true, defaultEditorOptions, options.editorOptions, {\r\n            inputAttr: {\r\n                id: options.id\r\n            },\r\n            validationBoundary: options.validationBoundary,\r\n            stylingMode: formInstance && formInstance.option(\"stylingMode\")\r\n        });\r\n        this._replaceDataOptions(options.editorOptions, editorOptions);\r\n        var renderOptions = {\r\n            editorType: options.editorType,\r\n            dataField: options.dataField,\r\n            template: options.template,\r\n            name: options.name,\r\n            helpID: options.helpID,\r\n            labelID: options.labelID,\r\n            isRequired: options.isRequired\r\n        };\r\n        return this._createEditor(options.$container, renderOptions, editorOptions)\r\n    },\r\n    _replaceDataOptions: function(originalOptions, resultOptions) {\r\n        if (originalOptions) {\r\n            DATA_OPTIONS.forEach((function(item) {\r\n                if (resultOptions[item]) {\r\n                    resultOptions[item] = originalOptions[item]\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _renderValidator: function($editor, item) {\r\n        var fieldName = this._getFieldLabelName(item);\r\n        var validationRules = this._prepareValidationRules(item.validationRules, item.isRequired, item.itemType, fieldName);\r\n        if (Array.isArray(validationRules) && validationRules.length) {\r\n            this._createComponent($editor, Validator, {\r\n                validationRules: validationRules,\r\n                validationGroup: this.option(\"validationGroup\"),\r\n                dataGetter: function() {\r\n                    return {\r\n                        formItem: item\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _getFieldLabelName: function(item) {\r\n        var isItemHaveCustomLabel = item.label && item.label.text;\r\n        var itemName = isItemHaveCustomLabel ? null : this._getName(item);\r\n        return isItemHaveCustomLabel ? item.label.text : itemName && captionize(itemName)\r\n    },\r\n    _prepareValidationRules: function(userValidationRules, isItemRequired, itemType, itemName) {\r\n        var isSimpleItem = itemType === SIMPLE_ITEM_TYPE;\r\n        var validationRules;\r\n        if (isSimpleItem) {\r\n            if (userValidationRules) {\r\n                validationRules = userValidationRules\r\n            } else {\r\n                var requiredMessage = format(this.option(\"requiredMessage\"), itemName || \"\");\r\n                validationRules = isItemRequired ? [{\r\n                    type: \"required\",\r\n                    message: requiredMessage\r\n                }] : null\r\n            }\r\n        }\r\n        return validationRules\r\n    },\r\n    _addWrapperInvalidClass: function(editorInstance) {\r\n        var wrapperClass = \".\" + FIELD_ITEM_CONTENT_WRAPPER_CLASS;\r\n        var toggleInvalidClass = function(e) {\r\n            $(e.element).parents(wrapperClass).toggleClass(INVALID_CLASS, e.component._isFocused() && false === e.component.option(\"isValid\"))\r\n        };\r\n        editorInstance.on(\"focusIn\", toggleInvalidClass).on(\"focusOut\", toggleInvalidClass).on(\"enterKey\", toggleInvalidClass)\r\n    },\r\n    _createEditor: function($container, renderOptions, editorOptions) {\r\n        var template = renderOptions.template;\r\n        var editorInstance;\r\n        if (renderOptions.dataField && !editorOptions.name) {\r\n            editorOptions.name = renderOptions.dataField\r\n        }\r\n        this._addItemContentClasses($container);\r\n        if (template) {\r\n            var data = {\r\n                dataField: renderOptions.dataField,\r\n                editorType: renderOptions.editorType,\r\n                editorOptions: editorOptions,\r\n                component: this._getComponentOwner(),\r\n                name: renderOptions.name\r\n            };\r\n            template.render({\r\n                model: data,\r\n                container: getPublicElement($container)\r\n            })\r\n        } else {\r\n            var $editor = $(\"<div>\").appendTo($container);\r\n            try {\r\n                editorInstance = this._createComponent($editor, renderOptions.editorType, editorOptions);\r\n                editorInstance.setAria(\"describedby\", renderOptions.helpID);\r\n                editorInstance.setAria(\"labelledby\", renderOptions.labelID);\r\n                editorInstance.setAria(\"required\", renderOptions.isRequired);\r\n                if (renderOptions.dataField) {\r\n                    this._bindDataField(editorInstance, renderOptions, $container)\r\n                }\r\n            } catch (e) {\r\n                errors.log(\"E1035\", e.message)\r\n            }\r\n        }\r\n        return editorInstance\r\n    },\r\n    _getComponentOwner: function() {\r\n        return this.option(\"form\") || this\r\n    },\r\n    _bindDataField: function(editorInstance, renderOptions, $container) {\r\n        var componentOwner = this._getComponentOwner();\r\n        editorInstance.on(\"enterKey\", (function(args) {\r\n            componentOwner._createActionByOption(\"onEditorEnterKey\")(extend(args, {\r\n                dataField: renderOptions.dataField\r\n            }))\r\n        }));\r\n        this._createWatcher(editorInstance, $container, renderOptions);\r\n        this.linkEditorToDataField(editorInstance, renderOptions.dataField, renderOptions.editorType)\r\n    },\r\n    _createWatcher: function(editorInstance, $container, renderOptions) {\r\n        var that = this;\r\n        var watch = that._getWatch();\r\n        if (!isFunction(watch)) {\r\n            return\r\n        }\r\n        var dispose = watch((function() {\r\n            return that._getDataByField(renderOptions.dataField)\r\n        }), (function() {\r\n            editorInstance.option(\"value\", that._getDataByField(renderOptions.dataField))\r\n        }), {\r\n            deep: true,\r\n            skipImmediate: true\r\n        });\r\n        eventsEngine.on($container, removeEvent, dispose)\r\n    },\r\n    _getWatch: function() {\r\n        if (!isDefined(this._watch)) {\r\n            var formInstance = this.option(\"form\");\r\n            this._watch = formInstance && formInstance.option(\"integrationOptions.watchMethod\")\r\n        }\r\n        return this._watch\r\n    },\r\n    _addItemContentClasses: function($itemContent) {\r\n        var locationSpecificClass = this._getItemContentLocationSpecificClass();\r\n        $itemContent.addClass([FIELD_ITEM_CONTENT_CLASS, locationSpecificClass].join(\" \"))\r\n    },\r\n    _getItemContentLocationSpecificClass: function() {\r\n        var labelLocation = this.option(\"labelLocation\");\r\n        return FIELD_ITEM_CONTENT_LOCATION_CLASS + {\r\n            right: \"left\",\r\n            left: \"right\",\r\n            top: \"bottom\"\r\n        } [labelLocation]\r\n    },\r\n    _createComponent: function($editor, type, editorOptions) {\r\n        var readOnlyState = this.option(\"readOnly\");\r\n        var instance = this.callBase($editor, type, editorOptions);\r\n        readOnlyState && instance.option(\"readOnly\", readOnlyState);\r\n        this.on(\"optionChanged\", (function(args) {\r\n            if (\"readOnly\" === args.name && !isDefined(editorOptions.readOnly)) {\r\n                instance.option(args.name, args.value)\r\n            }\r\n        }));\r\n        return instance\r\n    },\r\n    _getTemplateByFieldItem: function(fieldItem) {\r\n        return fieldItem.template ? this._getTemplate(fieldItem.template) : null\r\n    },\r\n    _appendEditorToField: function(params) {\r\n        if (params.$label) {\r\n            var location = params.labelOptions.location;\r\n            if (\"top\" === location || \"left\" === location) {\r\n                params.$fieldItem.append(params.$editor)\r\n            }\r\n            if (\"right\" === location) {\r\n                params.$fieldItem.prepend(params.$editor)\r\n            }\r\n            this._addInnerItemAlignmentClass(params.$fieldItem, location)\r\n        } else {\r\n            params.$fieldItem.append(params.$editor)\r\n        }\r\n    },\r\n    _addInnerItemAlignmentClass: function($fieldItem, location) {\r\n        if (\"top\" === location) {\r\n            $fieldItem.addClass(LABEL_VERTICAL_ALIGNMENT_CLASS)\r\n        } else {\r\n            $fieldItem.addClass(LABEL_HORIZONTAL_ALIGNMENT_CLASS)\r\n        }\r\n    },\r\n    _attachClickHandler: function($label, $editor, editorType) {\r\n        var isBooleanEditors = \"dxCheckBox\" === editorType || \"dxSwitch\" === editorType;\r\n        if ($label && isBooleanEditors) {\r\n            eventsEngine.on($label, clickEventName, (function() {\r\n                eventsEngine.trigger($editor.children(), clickEventName)\r\n            }))\r\n        }\r\n    },\r\n    _generateRatio: function(count, isAutoSize) {\r\n        var result = [];\r\n        var ratio;\r\n        var i;\r\n        for (i = 0; i < count; i++) {\r\n            ratio = {\r\n                ratio: 1\r\n            };\r\n            if (isAutoSize) {\r\n                ratio.baseSize = \"auto\"\r\n            }\r\n            result.push(ratio)\r\n        }\r\n        return result\r\n    },\r\n    _getRowsCount: function() {\r\n        return Math.ceil(this._items.length / this._getColCount())\r\n    },\r\n    _updateReferencedOptions: function(newLayoutData) {\r\n        var layoutData = this.option(\"layoutData\");\r\n        if (isObject(layoutData)) {\r\n            Object.getOwnPropertyNames(layoutData).forEach(property => delete this._optionsByReference[\"layoutData.\" + property])\r\n        }\r\n        if (isObject(newLayoutData)) {\r\n            Object.getOwnPropertyNames(newLayoutData).forEach(property => this._optionsByReference[\"layoutData.\" + property] = true)\r\n        }\r\n    },\r\n    _resetWidget(instance) {\r\n        this._disableEditorValueChangedHandler = true;\r\n        instance.reset();\r\n        this._disableEditorValueChangedHandler = false;\r\n        instance.option(\"isValid\", true)\r\n    },\r\n    _optionChanged(args) {\r\n        if (0 === args.fullName.search(\"layoutData.\")) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"showRequiredMark\":\r\n            case \"showOptionalMark\":\r\n            case \"requiredMark\":\r\n            case \"optionalMark\":\r\n                this._cashedRequiredConfig = null;\r\n                this._invalidate();\r\n                break;\r\n            case \"layoutData\":\r\n                this._updateReferencedOptions(args.value);\r\n                if (this.option(\"items\")) {\r\n                    if (!isEmptyObject(args.value)) {\r\n                        this._itemsRunTimeInfo.each((_, itemRunTimeInfo) => {\r\n                            if (isDefined(itemRunTimeInfo.item)) {\r\n                                var dataField = itemRunTimeInfo.item.dataField;\r\n                                if (dataField && isDefined(itemRunTimeInfo.widgetInstance)) {\r\n                                    var valueGetter = compileGetter(dataField);\r\n                                    var dataValue = valueGetter(args.value);\r\n                                    if (void 0 !== dataValue || this._isCheckboxUndefinedStateEnabled(itemRunTimeInfo.item)) {\r\n                                        itemRunTimeInfo.widgetInstance.option(\"value\", dataValue)\r\n                                    } else {\r\n                                        this._resetWidget(itemRunTimeInfo.widgetInstance)\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                } else {\r\n                    this._initDataAndItems(args.value);\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"items\":\r\n                this._cleanItemWatchers();\r\n                this._initDataAndItems(args.value);\r\n                this._invalidate();\r\n                break;\r\n            case \"alignItemLabels\":\r\n            case \"labelLocation\":\r\n            case \"requiredMessage\":\r\n                this._invalidate();\r\n                break;\r\n            case \"customizeItem\":\r\n                this._updateItems(this.option(\"layoutData\"));\r\n                this._invalidate();\r\n                break;\r\n            case \"colCount\":\r\n                this._resetColCount();\r\n                break;\r\n            case \"minColWidth\":\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._resetColCount()\r\n                }\r\n                break;\r\n            case \"readOnly\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._resetColCount()\r\n                }\r\n                break;\r\n            case \"onFieldDataChanged\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _resetColCount: function() {\r\n        this._cashedColCount = null;\r\n        this._invalidate()\r\n    },\r\n    linkEditorToDataField(editorInstance, dataField) {\r\n        this.on(\"optionChanged\", args => {\r\n            if (args.fullName === \"layoutData.\".concat(dataField)) {\r\n                editorInstance._setOptionWithoutOptionChange(\"value\", args.value)\r\n            }\r\n        });\r\n        editorInstance.on(\"valueChanged\", args => {\r\n            var isValueReferenceType = isObject(args.value) || Array.isArray(args.value);\r\n            if (!this._disableEditorValueChangedHandler && !(isValueReferenceType && args.value === args.previousValue)) {\r\n                this._updateFieldValue(dataField, args.value)\r\n            }\r\n        })\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (\"auto\" === this.option(\"colCount\") && this.isCachedColCountObsolete()) {\r\n            this._eventsStrategy.fireEvent(\"autoColCountChanged\")\r\n        }\r\n    },\r\n    getItemID: function(name) {\r\n        var formInstance = this.option(\"form\");\r\n        return formInstance && formInstance.getItemID(name)\r\n    },\r\n    updateData: function(data, value) {\r\n        var that = this;\r\n        if (isObject(data)) {\r\n            each(data, (function(dataField, fieldValue) {\r\n                that._updateFieldValue(dataField, fieldValue)\r\n            }))\r\n        } else if (\"string\" === typeof data) {\r\n            that._updateFieldValue(data, value)\r\n        }\r\n    },\r\n    getEditor: function(field) {\r\n        return this._itemsRunTimeInfo.findWidgetInstanceByDataField(field) || this._itemsRunTimeInfo.findWidgetInstanceByName(field)\r\n    },\r\n    isSingleColumnMode: function(component) {\r\n        var responsiveBox = this._responsiveBox || component;\r\n        if (responsiveBox) {\r\n            return responsiveBox.option(\"currentScreenFactor\") === responsiveBox.option(\"singleColumnScreen\")\r\n        }\r\n    },\r\n    getItemsRunTimeInfo: function() {\r\n        return this._itemsRunTimeInfo\r\n    }\r\n});\r\nregisterComponent(\"dxLayoutManager\", LayoutManager);\r\nexport default LayoutManager;\r\n"]},"metadata":{},"sourceType":"module"}