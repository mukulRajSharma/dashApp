{"ast":null,"code":"/**\r\n * DevExtreme (esm/data/odata/store.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isDefined } from \"../../core/utils/type\";\nimport config from \"../../core/config\";\nimport { generateExpand, generateSelect, serializeKey, convertPrimitiveValue, formatFunctionInvocationUrl, escapeServiceOperationParams } from \"./utils\";\nimport { errors } from \"../errors\";\nimport query from \"../query\";\nimport Store from \"../abstract_store\";\nimport RequestDispatcher from \"./request_dispatcher\";\nimport { when, Deferred } from \"../../core/utils/deferred\";\nimport \"./query_adapter\";\nvar ANONYMOUS_KEY_NAME = \"5d46402c-7899-4ea9-bd81-8b73c47c7683\";\n\nvar expandKeyType = (key, keyType) => ({\n  [key]: keyType\n});\n\nvar mergeFieldTypesWithKeyType = (fieldTypes, keyType) => {\n  var result = {};\n\n  for (var field in fieldTypes) {\n    result[field] = fieldTypes[field];\n  }\n\n  for (var keyName in keyType) {\n    if (keyName in result) {\n      if (result[keyName] !== keyType[keyName]) {\n        errors.log(\"W4001\", keyName);\n      }\n    } else {\n      result[keyName] = keyType[keyName];\n    }\n  }\n\n  return result;\n};\n\nvar ODataStore = Store.inherit({\n  ctor(options) {\n    this.callBase(options);\n    this._requestDispatcher = new RequestDispatcher(options);\n    var key = this.key();\n    var fieldTypes = options.fieldTypes;\n    var keyType = options.keyType;\n\n    if (keyType) {\n      var keyTypeIsString = \"string\" === typeof keyType;\n\n      if (!key) {\n        key = keyTypeIsString ? ANONYMOUS_KEY_NAME : Object.keys(keyType);\n        this._legacyAnonymousKey = key;\n      }\n\n      if (keyTypeIsString) {\n        keyType = expandKeyType(key, keyType);\n      }\n\n      fieldTypes = mergeFieldTypesWithKeyType(fieldTypes, keyType);\n    }\n\n    this._fieldTypes = fieldTypes || {};\n\n    if (2 === this.version()) {\n      this._updateMethod = \"MERGE\";\n    } else {\n      this._updateMethod = \"PATCH\";\n    }\n  },\n\n  _customLoadOptions: () => [\"expand\", \"customQueryParams\"],\n\n  _byKeyImpl(key, extraOptions) {\n    var params = {};\n\n    if (extraOptions) {\n      params.$expand = generateExpand(this.version(), extraOptions.expand, extraOptions.select) || void 0;\n      params.$select = generateSelect(this.version(), extraOptions.select) || void 0;\n    }\n\n    return this._requestDispatcher.sendRequest(this._byKeyUrl(key), \"GET\", params);\n  },\n\n  createQuery(loadOptions) {\n    var _loadOptions$urlOverr;\n\n    var url;\n    var queryOptions = {\n      adapter: \"odata\",\n      beforeSend: this._requestDispatcher.beforeSend,\n      errorHandler: this._errorHandler,\n      jsonp: this._requestDispatcher.jsonp,\n      version: this._requestDispatcher.version,\n      withCredentials: this._requestDispatcher._withCredentials,\n      expand: null === loadOptions || void 0 === loadOptions ? void 0 : loadOptions.expand,\n      requireTotalCount: null === loadOptions || void 0 === loadOptions ? void 0 : loadOptions.requireTotalCount,\n      deserializeDates: this._requestDispatcher._deserializeDates,\n      fieldTypes: this._fieldTypes\n    };\n    url = null !== (_loadOptions$urlOverr = null === loadOptions || void 0 === loadOptions ? void 0 : loadOptions.urlOverride) && void 0 !== _loadOptions$urlOverr ? _loadOptions$urlOverr : this._requestDispatcher.url;\n\n    if (isDefined(this._requestDispatcher.filterToLower)) {\n      queryOptions.filterToLower = this._requestDispatcher.filterToLower;\n    }\n\n    if (null !== loadOptions && void 0 !== loadOptions && loadOptions.customQueryParams) {\n      var params = escapeServiceOperationParams(null === loadOptions || void 0 === loadOptions ? void 0 : loadOptions.customQueryParams, this.version());\n\n      if (4 === this.version()) {\n        url = formatFunctionInvocationUrl(url, params);\n      } else {\n        queryOptions.params = params;\n      }\n    }\n\n    return query(url, queryOptions);\n  },\n\n  _insertImpl(values) {\n    this._requireKey();\n\n    var d = new Deferred();\n    when(this._requestDispatcher.sendRequest(this._requestDispatcher.url, \"POST\", null, values)).done(serverResponse => d.resolve(serverResponse && !config().useLegacyStoreResult ? serverResponse : values, this.keyOf(serverResponse))).fail(d.reject);\n    return d.promise();\n  },\n\n  _updateImpl(key, values) {\n    var d = new Deferred();\n    when(this._requestDispatcher.sendRequest(this._byKeyUrl(key), this._updateMethod, null, values)).done(serverResponse => config().useLegacyStoreResult ? d.resolve(key, values) : d.resolve(serverResponse || values, key)).fail(d.reject);\n    return d.promise();\n  },\n\n  _removeImpl(key) {\n    var d = new Deferred();\n    when(this._requestDispatcher.sendRequest(this._byKeyUrl(key), \"DELETE\")).done(() => d.resolve(key)).fail(d.reject);\n    return d.promise();\n  },\n\n  _convertKey(value) {\n    var result = value;\n    var fieldTypes = this._fieldTypes;\n\n    var key = this.key() || this._legacyAnonymousKey;\n\n    if (Array.isArray(key)) {\n      result = {};\n\n      for (var i = 0; i < key.length; i++) {\n        var keyName = key[i];\n        result[keyName] = convertPrimitiveValue(fieldTypes[keyName], value[keyName]);\n      }\n    } else if (fieldTypes[key]) {\n      result = convertPrimitiveValue(fieldTypes[key], value);\n    }\n\n    return result;\n  },\n\n  _byKeyUrl(value) {\n    var baseUrl = this._requestDispatcher.url;\n\n    var convertedKey = this._convertKey(value);\n\n    return \"\".concat(baseUrl, \"(\").concat(encodeURIComponent(serializeKey(convertedKey, this.version())), \")\");\n  },\n\n  version() {\n    return this._requestDispatcher.version;\n  }\n\n}, \"odata\");\nexport default ODataStore;","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/node_modules/devextreme/esm/data/odata/store.js"],"names":["isDefined","config","generateExpand","generateSelect","serializeKey","convertPrimitiveValue","formatFunctionInvocationUrl","escapeServiceOperationParams","errors","query","Store","RequestDispatcher","when","Deferred","ANONYMOUS_KEY_NAME","expandKeyType","key","keyType","mergeFieldTypesWithKeyType","fieldTypes","result","field","keyName","log","ODataStore","inherit","ctor","options","callBase","_requestDispatcher","keyTypeIsString","Object","keys","_legacyAnonymousKey","_fieldTypes","version","_updateMethod","_customLoadOptions","_byKeyImpl","extraOptions","params","$expand","expand","select","$select","sendRequest","_byKeyUrl","createQuery","loadOptions","_loadOptions$urlOverr","url","queryOptions","adapter","beforeSend","errorHandler","_errorHandler","jsonp","withCredentials","_withCredentials","requireTotalCount","deserializeDates","_deserializeDates","urlOverride","filterToLower","customQueryParams","_insertImpl","values","_requireKey","d","done","serverResponse","resolve","useLegacyStoreResult","keyOf","fail","reject","promise","_updateImpl","_removeImpl","_convertKey","value","Array","isArray","i","length","baseUrl","convertedKey","concat","encodeURIComponent"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/data/odata/store.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport config from \"../../core/config\";\r\nimport {\r\n    generateExpand,\r\n    generateSelect,\r\n    serializeKey,\r\n    convertPrimitiveValue,\r\n    formatFunctionInvocationUrl,\r\n    escapeServiceOperationParams\r\n} from \"./utils\";\r\nimport {\r\n    errors\r\n} from \"../errors\";\r\nimport query from \"../query\";\r\nimport Store from \"../abstract_store\";\r\nimport RequestDispatcher from \"./request_dispatcher\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport \"./query_adapter\";\r\nvar ANONYMOUS_KEY_NAME = \"5d46402c-7899-4ea9-bd81-8b73c47c7683\";\r\nvar expandKeyType = (key, keyType) => ({\r\n    [key]: keyType\r\n});\r\nvar mergeFieldTypesWithKeyType = (fieldTypes, keyType) => {\r\n    var result = {};\r\n    for (var field in fieldTypes) {\r\n        result[field] = fieldTypes[field]\r\n    }\r\n    for (var keyName in keyType) {\r\n        if (keyName in result) {\r\n            if (result[keyName] !== keyType[keyName]) {\r\n                errors.log(\"W4001\", keyName)\r\n            }\r\n        } else {\r\n            result[keyName] = keyType[keyName]\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar ODataStore = Store.inherit({\r\n    ctor(options) {\r\n        this.callBase(options);\r\n        this._requestDispatcher = new RequestDispatcher(options);\r\n        var key = this.key();\r\n        var fieldTypes = options.fieldTypes;\r\n        var keyType = options.keyType;\r\n        if (keyType) {\r\n            var keyTypeIsString = \"string\" === typeof keyType;\r\n            if (!key) {\r\n                key = keyTypeIsString ? ANONYMOUS_KEY_NAME : Object.keys(keyType);\r\n                this._legacyAnonymousKey = key\r\n            }\r\n            if (keyTypeIsString) {\r\n                keyType = expandKeyType(key, keyType)\r\n            }\r\n            fieldTypes = mergeFieldTypesWithKeyType(fieldTypes, keyType)\r\n        }\r\n        this._fieldTypes = fieldTypes || {};\r\n        if (2 === this.version()) {\r\n            this._updateMethod = \"MERGE\"\r\n        } else {\r\n            this._updateMethod = \"PATCH\"\r\n        }\r\n    },\r\n    _customLoadOptions: () => [\"expand\", \"customQueryParams\"],\r\n    _byKeyImpl(key, extraOptions) {\r\n        var params = {};\r\n        if (extraOptions) {\r\n            params.$expand = generateExpand(this.version(), extraOptions.expand, extraOptions.select) || void 0;\r\n            params.$select = generateSelect(this.version(), extraOptions.select) || void 0\r\n        }\r\n        return this._requestDispatcher.sendRequest(this._byKeyUrl(key), \"GET\", params)\r\n    },\r\n    createQuery(loadOptions) {\r\n        var _loadOptions$urlOverr;\r\n        var url;\r\n        var queryOptions = {\r\n            adapter: \"odata\",\r\n            beforeSend: this._requestDispatcher.beforeSend,\r\n            errorHandler: this._errorHandler,\r\n            jsonp: this._requestDispatcher.jsonp,\r\n            version: this._requestDispatcher.version,\r\n            withCredentials: this._requestDispatcher._withCredentials,\r\n            expand: null === loadOptions || void 0 === loadOptions ? void 0 : loadOptions.expand,\r\n            requireTotalCount: null === loadOptions || void 0 === loadOptions ? void 0 : loadOptions.requireTotalCount,\r\n            deserializeDates: this._requestDispatcher._deserializeDates,\r\n            fieldTypes: this._fieldTypes\r\n        };\r\n        url = null !== (_loadOptions$urlOverr = null === loadOptions || void 0 === loadOptions ? void 0 : loadOptions.urlOverride) && void 0 !== _loadOptions$urlOverr ? _loadOptions$urlOverr : this._requestDispatcher.url;\r\n        if (isDefined(this._requestDispatcher.filterToLower)) {\r\n            queryOptions.filterToLower = this._requestDispatcher.filterToLower\r\n        }\r\n        if (null !== loadOptions && void 0 !== loadOptions && loadOptions.customQueryParams) {\r\n            var params = escapeServiceOperationParams(null === loadOptions || void 0 === loadOptions ? void 0 : loadOptions.customQueryParams, this.version());\r\n            if (4 === this.version()) {\r\n                url = formatFunctionInvocationUrl(url, params)\r\n            } else {\r\n                queryOptions.params = params\r\n            }\r\n        }\r\n        return query(url, queryOptions)\r\n    },\r\n    _insertImpl(values) {\r\n        this._requireKey();\r\n        var d = new Deferred;\r\n        when(this._requestDispatcher.sendRequest(this._requestDispatcher.url, \"POST\", null, values)).done(serverResponse => d.resolve(serverResponse && !config().useLegacyStoreResult ? serverResponse : values, this.keyOf(serverResponse))).fail(d.reject);\r\n        return d.promise()\r\n    },\r\n    _updateImpl(key, values) {\r\n        var d = new Deferred;\r\n        when(this._requestDispatcher.sendRequest(this._byKeyUrl(key), this._updateMethod, null, values)).done(serverResponse => config().useLegacyStoreResult ? d.resolve(key, values) : d.resolve(serverResponse || values, key)).fail(d.reject);\r\n        return d.promise()\r\n    },\r\n    _removeImpl(key) {\r\n        var d = new Deferred;\r\n        when(this._requestDispatcher.sendRequest(this._byKeyUrl(key), \"DELETE\")).done(() => d.resolve(key)).fail(d.reject);\r\n        return d.promise()\r\n    },\r\n    _convertKey(value) {\r\n        var result = value;\r\n        var fieldTypes = this._fieldTypes;\r\n        var key = this.key() || this._legacyAnonymousKey;\r\n        if (Array.isArray(key)) {\r\n            result = {};\r\n            for (var i = 0; i < key.length; i++) {\r\n                var keyName = key[i];\r\n                result[keyName] = convertPrimitiveValue(fieldTypes[keyName], value[keyName])\r\n            }\r\n        } else if (fieldTypes[key]) {\r\n            result = convertPrimitiveValue(fieldTypes[key], value)\r\n        }\r\n        return result\r\n    },\r\n    _byKeyUrl(value) {\r\n        var baseUrl = this._requestDispatcher.url;\r\n        var convertedKey = this._convertKey(value);\r\n        return \"\".concat(baseUrl, \"(\").concat(encodeURIComponent(serializeKey(convertedKey, this.version())), \")\")\r\n    },\r\n    version() {\r\n        return this._requestDispatcher.version\r\n    }\r\n}, \"odata\");\r\nexport default ODataStore;\r\n"]},"metadata":{},"sourceType":"module"}