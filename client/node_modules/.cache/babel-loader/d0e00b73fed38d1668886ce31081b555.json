{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/small.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"defaultPageIndex\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pagesCountText\"];\nimport { createVNode, createComponentVNode } from \"inferno\";\nimport { InfernoEffect, InfernoComponent } from \"@devextreme/vdom\";\nimport { Page } from \"./page\";\nimport { PAGER_INFO_CLASS } from \"../info\";\nimport { NumberBox } from \"../../number_box\";\nimport messageLocalization from \"../../../../localization/message\";\nimport { calculateValuesFittedWidth } from \"../utils/calculate_values_fitted_width\";\nimport { getElementMinWidth } from \"../utils/get_element_width\";\nimport { PagerProps } from \"../common/pager_props\";\nvar PAGER_INFO_TEXT_CLASS = \"\".concat(PAGER_INFO_CLASS, \"  dx-info-text\");\nvar PAGER_PAGE_INDEX_CLASS = \"dx-page-index\";\nvar LIGHT_PAGES_CLASS = \"dx-light-pages\";\nvar PAGER_PAGES_COUNT_CLASS = \"dx-pages-count\";\nexport var viewFunction = _ref => {\n  var {\n    pageIndexRef: pageIndexRef,\n    pagesCountText: pagesCountText,\n    props: {\n      pageCount: pageCount\n    },\n    selectLastPageIndex: selectLastPageIndex,\n    value: value,\n    valueChange: valueChange,\n    width: width\n  } = _ref;\n  return createVNode(1, \"div\", LIGHT_PAGES_CLASS, [createComponentVNode(2, NumberBox, {\n    rootElementRef: pageIndexRef,\n    className: PAGER_PAGE_INDEX_CLASS,\n    min: 1,\n    max: pageCount,\n    width: width,\n    value: value,\n    valueChange: valueChange\n  }), createVNode(1, \"span\", PAGER_INFO_TEXT_CLASS, pagesCountText, 0), createComponentVNode(2, Page, {\n    className: PAGER_PAGES_COUNT_CLASS,\n    selected: false,\n    index: pageCount - 1,\n    onClick: selectLastPageIndex\n  })], 4);\n};\nvar PagerSmallProps = {\n  pageCount: PagerProps.pageCount,\n  defaultPageIndex: PagerProps.pageIndex\n};\nimport { createRef as infernoCreateRef } from \"inferno\";\nexport class PagesSmall extends InfernoComponent {\n  constructor(props) {\n    super(props);\n    this._currentState = null;\n    this.pageIndexRef = infernoCreateRef();\n    this.state = {\n      minWidth: 10,\n      pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.props.defaultPageIndex\n    };\n    this.updateWidth = this.updateWidth.bind(this);\n    this.selectLastPageIndex = this.selectLastPageIndex.bind(this);\n    this.valueChange = this.valueChange.bind(this);\n  }\n\n  createEffects() {\n    return [new InfernoEffect(this.updateWidth, [this.minWidth])];\n  }\n\n  updateEffects() {\n    var _this$_effects$;\n\n    null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.minWidth]);\n  }\n\n  get minWidth() {\n    var state = this._currentState || this.state;\n    return state.minWidth;\n  }\n\n  set_minWidth(value) {\n    this.setState(state => {\n      this._currentState = state;\n      var newValue = value();\n      this._currentState = null;\n      return {\n        minWidth: newValue\n      };\n    });\n  }\n\n  get __state_pageIndex() {\n    var state = this._currentState || this.state;\n    return void 0 !== this.props.pageIndex ? this.props.pageIndex : state.pageIndex;\n  }\n\n  set_pageIndex(value) {\n    this.setState(state => {\n      var _this$props$pageIndex, _this$props;\n\n      this._currentState = state;\n      var newValue = value();\n      null === (_this$props$pageIndex = (_this$props = this.props).pageIndexChange) || void 0 === _this$props$pageIndex ? void 0 : _this$props$pageIndex.call(_this$props, newValue);\n      this._currentState = null;\n      return {\n        pageIndex: newValue\n      };\n    });\n  }\n\n  updateWidth() {\n    this.set_minWidth(() => this.pageIndexRef.current && getElementMinWidth(this.pageIndexRef.current) || this.minWidth);\n  }\n\n  get value() {\n    return this.__state_pageIndex + 1;\n  }\n\n  get width() {\n    var pageCount = this.props.pageCount;\n    return calculateValuesFittedWidth(this.minWidth, [pageCount]);\n  }\n\n  get pagesCountText() {\n    return this.props.pagesCountText || messageLocalization.getFormatter(\"dxPager-pagesCountText\")();\n  }\n\n  selectLastPageIndex() {\n    var _this$props$pageIndex2, _this$props2;\n\n    var {\n      pageCount: pageCount\n    } = this.props;\n    null === (_this$props$pageIndex2 = (_this$props2 = this.props).pageIndexChange) || void 0 === _this$props$pageIndex2 ? void 0 : _this$props$pageIndex2.call(_this$props2, pageCount - 1);\n  }\n\n  valueChange(value) {\n    this.set_pageIndex(() => value - 1);\n  }\n\n  get restAttributes() {\n    var _this$props$pageIndex3 = _extends({}, this.props, {\n      pageIndex: this.__state_pageIndex\n    }),\n        restProps = _objectWithoutPropertiesLoose(_this$props$pageIndex3, _excluded);\n\n    return restProps;\n  }\n\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props, {\n        pageIndex: this.__state_pageIndex\n      }),\n      pageIndexRef: this.pageIndexRef,\n      value: this.value,\n      width: this.width,\n      pagesCountText: this.pagesCountText,\n      selectLastPageIndex: this.selectLastPageIndex,\n      valueChange: this.valueChange,\n      restAttributes: this.restAttributes\n    });\n  }\n\n}\nPagesSmall.defaultProps = _extends({}, PagerSmallProps);","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/node_modules/devextreme/esm/renovation/ui/pager/pages/small.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","createVNode","createComponentVNode","InfernoEffect","InfernoComponent","Page","PAGER_INFO_CLASS","NumberBox","messageLocalization","calculateValuesFittedWidth","getElementMinWidth","PagerProps","PAGER_INFO_TEXT_CLASS","concat","PAGER_PAGE_INDEX_CLASS","LIGHT_PAGES_CLASS","PAGER_PAGES_COUNT_CLASS","viewFunction","_ref","pageIndexRef","pagesCountText","props","pageCount","selectLastPageIndex","value","valueChange","width","rootElementRef","className","min","max","selected","index","onClick","PagerSmallProps","defaultPageIndex","pageIndex","createRef","infernoCreateRef","PagesSmall","constructor","_currentState","state","minWidth","updateWidth","bind","createEffects","updateEffects","_this$_effects$","_effects","update","set_minWidth","setState","newValue","__state_pageIndex","set_pageIndex","_this$props$pageIndex","_this$props","pageIndexChange","call","current","getFormatter","_this$props$pageIndex2","_this$props2","restAttributes","_this$props$pageIndex3","restProps","render","defaultProps"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/small.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"defaultPageIndex\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pagesCountText\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/vdom\";\r\nimport {\r\n    Page\r\n} from \"./page\";\r\nimport {\r\n    PAGER_INFO_CLASS\r\n} from \"../info\";\r\nimport {\r\n    NumberBox\r\n} from \"../../number_box\";\r\nimport messageLocalization from \"../../../../localization/message\";\r\nimport {\r\n    calculateValuesFittedWidth\r\n} from \"../utils/calculate_values_fitted_width\";\r\nimport {\r\n    getElementMinWidth\r\n} from \"../utils/get_element_width\";\r\nimport {\r\n    PagerProps\r\n} from \"../common/pager_props\";\r\nvar PAGER_INFO_TEXT_CLASS = \"\".concat(PAGER_INFO_CLASS, \"  dx-info-text\");\r\nvar PAGER_PAGE_INDEX_CLASS = \"dx-page-index\";\r\nvar LIGHT_PAGES_CLASS = \"dx-light-pages\";\r\nvar PAGER_PAGES_COUNT_CLASS = \"dx-pages-count\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pageIndexRef: pageIndexRef,\r\n        pagesCountText: pagesCountText,\r\n        props: {\r\n            pageCount: pageCount\r\n        },\r\n        selectLastPageIndex: selectLastPageIndex,\r\n        value: value,\r\n        valueChange: valueChange,\r\n        width: width\r\n    } = _ref;\r\n    return createVNode(1, \"div\", LIGHT_PAGES_CLASS, [createComponentVNode(2, NumberBox, {\r\n        rootElementRef: pageIndexRef,\r\n        className: PAGER_PAGE_INDEX_CLASS,\r\n        min: 1,\r\n        max: pageCount,\r\n        width: width,\r\n        value: value,\r\n        valueChange: valueChange\r\n    }), createVNode(1, \"span\", PAGER_INFO_TEXT_CLASS, pagesCountText, 0), createComponentVNode(2, Page, {\r\n        className: PAGER_PAGES_COUNT_CLASS,\r\n        selected: false,\r\n        index: pageCount - 1,\r\n        onClick: selectLastPageIndex\r\n    })], 4)\r\n};\r\nvar PagerSmallProps = {\r\n    pageCount: PagerProps.pageCount,\r\n    defaultPageIndex: PagerProps.pageIndex\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PagesSmall extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this._currentState = null;\r\n        this.pageIndexRef = infernoCreateRef();\r\n        this.state = {\r\n            minWidth: 10,\r\n            pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.props.defaultPageIndex\r\n        };\r\n        this.updateWidth = this.updateWidth.bind(this);\r\n        this.selectLastPageIndex = this.selectLastPageIndex.bind(this);\r\n        this.valueChange = this.valueChange.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.updateWidth, [this.minWidth])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.minWidth])\r\n    }\r\n    get minWidth() {\r\n        var state = this._currentState || this.state;\r\n        return state.minWidth\r\n    }\r\n    set_minWidth(value) {\r\n        this.setState(state => {\r\n            this._currentState = state;\r\n            var newValue = value();\r\n            this._currentState = null;\r\n            return {\r\n                minWidth: newValue\r\n            }\r\n        })\r\n    }\r\n    get __state_pageIndex() {\r\n        var state = this._currentState || this.state;\r\n        return void 0 !== this.props.pageIndex ? this.props.pageIndex : state.pageIndex\r\n    }\r\n    set_pageIndex(value) {\r\n        this.setState(state => {\r\n            var _this$props$pageIndex, _this$props;\r\n            this._currentState = state;\r\n            var newValue = value();\r\n            null === (_this$props$pageIndex = (_this$props = this.props).pageIndexChange) || void 0 === _this$props$pageIndex ? void 0 : _this$props$pageIndex.call(_this$props, newValue);\r\n            this._currentState = null;\r\n            return {\r\n                pageIndex: newValue\r\n            }\r\n        })\r\n    }\r\n    updateWidth() {\r\n        this.set_minWidth(() => this.pageIndexRef.current && getElementMinWidth(this.pageIndexRef.current) || this.minWidth)\r\n    }\r\n    get value() {\r\n        return this.__state_pageIndex + 1\r\n    }\r\n    get width() {\r\n        var pageCount = this.props.pageCount;\r\n        return calculateValuesFittedWidth(this.minWidth, [pageCount])\r\n    }\r\n    get pagesCountText() {\r\n        return this.props.pagesCountText || messageLocalization.getFormatter(\"dxPager-pagesCountText\")()\r\n    }\r\n    selectLastPageIndex() {\r\n        var _this$props$pageIndex2, _this$props2;\r\n        var {\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        null === (_this$props$pageIndex2 = (_this$props2 = this.props).pageIndexChange) || void 0 === _this$props$pageIndex2 ? void 0 : _this$props$pageIndex2.call(_this$props2, pageCount - 1)\r\n    }\r\n    valueChange(value) {\r\n        this.set_pageIndex(() => value - 1)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$pageIndex3 = _extends({}, this.props, {\r\n                pageIndex: this.__state_pageIndex\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$pageIndex3, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                pageIndex: this.__state_pageIndex\r\n            }),\r\n            pageIndexRef: this.pageIndexRef,\r\n            value: this.value,\r\n            width: this.width,\r\n            pagesCountText: this.pagesCountText,\r\n            selectLastPageIndex: this.selectLastPageIndex,\r\n            valueChange: this.valueChange,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagesSmall.defaultProps = _extends({}, PagerSmallProps);\r\n"]},"metadata":{},"sourceType":"module"}