{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/resizable.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { locate, move } from \"../animation/translator\";\nimport registerComponent from \"../core/component_registrator\";\nimport DOMComponent from \"../core/dom_component\";\nimport $ from \"../core/renderer\";\nimport { inArray } from \"../core/utils/array\";\nimport { pairToObject } from \"../core/utils/common\";\nimport { extend } from \"../core/utils/extend\";\nimport { each } from \"../core/utils/iterator\";\nimport { fitIntoRange } from \"../core/utils/math\";\nimport { isPlainObject, isFunction, isWindow } from \"../core/utils/type\";\nimport { hasWindow } from \"../core/utils/window\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport { start as dragEventStart, move as dragEventMove, end as dragEventEnd } from \"../events/drag\";\nimport { getBoundingRect } from \"../core/utils/position\";\nimport { addNamespace } from \"../events/utils/index\";\nimport { triggerResizeEvent } from \"../events/visibility_change\";\nvar RESIZABLE = \"dxResizable\";\nvar RESIZABLE_CLASS = \"dx-resizable\";\nvar RESIZABLE_RESIZING_CLASS = \"dx-resizable-resizing\";\nvar RESIZABLE_HANDLE_CLASS = \"dx-resizable-handle\";\nvar RESIZABLE_HANDLE_TOP_CLASS = \"dx-resizable-handle-top\";\nvar RESIZABLE_HANDLE_BOTTOM_CLASS = \"dx-resizable-handle-bottom\";\nvar RESIZABLE_HANDLE_LEFT_CLASS = \"dx-resizable-handle-left\";\nvar RESIZABLE_HANDLE_RIGHT_CLASS = \"dx-resizable-handle-right\";\nvar RESIZABLE_HANDLE_CORNER_CLASS = \"dx-resizable-handle-corner\";\nvar DRAGSTART_START_EVENT_NAME = addNamespace(dragEventStart, RESIZABLE);\nvar DRAGSTART_EVENT_NAME = addNamespace(dragEventMove, RESIZABLE);\nvar DRAGSTART_END_EVENT_NAME = addNamespace(dragEventEnd, RESIZABLE);\nvar SIDE_BORDER_WIDTH_STYLES = {\n  left: \"borderLeftWidth\",\n  top: \"borderTopWidth\",\n  right: \"borderRightWidth\",\n  bottom: \"borderBottomWidth\"\n};\nvar Resizable = DOMComponent.inherit({\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      handles: \"all\",\n      step: \"1\",\n      stepPrecision: \"simple\",\n      area: void 0,\n      minWidth: 30,\n      maxWidth: 1 / 0,\n      minHeight: 30,\n      maxHeight: 1 / 0,\n      onResizeStart: null,\n      onResize: null,\n      onResizeEnd: null,\n      roundStepValue: true\n    });\n  },\n  _init: function () {\n    this.callBase();\n    this.$element().addClass(RESIZABLE_CLASS);\n  },\n  _initMarkup: function () {\n    this.callBase();\n\n    this._renderHandles();\n  },\n  _render: function () {\n    this.callBase();\n\n    this._renderActions();\n  },\n  _renderActions: function () {\n    this._resizeStartAction = this._createActionByOption(\"onResizeStart\");\n    this._resizeEndAction = this._createActionByOption(\"onResizeEnd\");\n    this._resizeAction = this._createActionByOption(\"onResize\");\n  },\n  _renderHandles: function () {\n    this._handles = [];\n    var handles = this.option(\"handles\");\n\n    if (\"none\" === handles) {\n      return;\n    }\n\n    var directions = \"all\" === handles ? [\"top\", \"bottom\", \"left\", \"right\"] : handles.split(\" \");\n    each(directions, (index, handleName) => {\n      this._renderHandle(handleName);\n    });\n    inArray(\"bottom\", directions) + 1 && inArray(\"right\", directions) + 1 && this._renderHandle(\"corner-bottom-right\");\n    inArray(\"bottom\", directions) + 1 && inArray(\"left\", directions) + 1 && this._renderHandle(\"corner-bottom-left\");\n    inArray(\"top\", directions) + 1 && inArray(\"right\", directions) + 1 && this._renderHandle(\"corner-top-right\");\n    inArray(\"top\", directions) + 1 && inArray(\"left\", directions) + 1 && this._renderHandle(\"corner-top-left\");\n\n    this._attachEventHandlers();\n  },\n  _renderHandle: function (handleName) {\n    var $handle = $(\"<div>\").addClass(RESIZABLE_HANDLE_CLASS).addClass(RESIZABLE_HANDLE_CLASS + \"-\" + handleName).appendTo(this.$element());\n\n    this._handles.push($handle);\n  },\n  _attachEventHandlers: function () {\n    if (this.option(\"disabled\")) {\n      return;\n    }\n\n    var handlers = {};\n    handlers[DRAGSTART_START_EVENT_NAME] = this._dragStartHandler.bind(this);\n    handlers[DRAGSTART_EVENT_NAME] = this._dragHandler.bind(this);\n    handlers[DRAGSTART_END_EVENT_NAME] = this._dragEndHandler.bind(this);\n\n    this._handles.forEach(handleElement => {\n      eventsEngine.on(handleElement, handlers, {\n        direction: \"both\",\n        immediate: true\n      });\n    });\n  },\n  _detachEventHandlers: function () {\n    this._handles.forEach(handleElement => {\n      eventsEngine.off(handleElement);\n    });\n  },\n  _toggleEventHandlers: function (shouldAttachEvents) {\n    shouldAttachEvents ? this._attachEventHandlers() : this._detachEventHandlers();\n  },\n  _dragStartHandler: function (e) {\n    var $element = this.$element();\n\n    if ($element.is(\".dx-state-disabled, .dx-state-disabled *\")) {\n      e.cancel = true;\n      return;\n    }\n\n    this._toggleResizingClass(true);\n\n    this._movingSides = this._getMovingSides(e);\n    this._elementLocation = locate($element);\n    var elementRect = getBoundingRect($element.get(0));\n    this._elementSize = {\n      width: elementRect.width,\n      height: elementRect.height\n    };\n\n    this._renderDragOffsets(e);\n\n    this._resizeStartAction({\n      event: e,\n      width: this._elementSize.width,\n      height: this._elementSize.height,\n      handles: this._movingSides\n    });\n\n    e.targetElements = null;\n  },\n  _toggleResizingClass: function (value) {\n    this.$element().toggleClass(RESIZABLE_RESIZING_CLASS, value);\n  },\n  _renderDragOffsets: function (e) {\n    var area = this._getArea();\n\n    if (!area) {\n      return;\n    }\n\n    var $handle = $(e.target).closest(\".\" + RESIZABLE_HANDLE_CLASS);\n    var handleWidth = $handle.outerWidth();\n    var handleHeight = $handle.outerHeight();\n    var handleOffset = $handle.offset();\n    var areaOffset = area.offset;\n\n    var scrollOffset = this._getAreaScrollOffset();\n\n    e.maxLeftOffset = handleOffset.left - areaOffset.left - scrollOffset.scrollX;\n    e.maxRightOffset = areaOffset.left + area.width - handleOffset.left - handleWidth + scrollOffset.scrollX;\n    e.maxTopOffset = handleOffset.top - areaOffset.top - scrollOffset.scrollY;\n    e.maxBottomOffset = areaOffset.top + area.height - handleOffset.top - handleHeight + scrollOffset.scrollY;\n  },\n  _getBorderWidth: function ($element, direction) {\n    if (isWindow($element.get(0))) {\n      return 0;\n    }\n\n    var borderWidth = $element.css(SIDE_BORDER_WIDTH_STYLES[direction]);\n    return parseInt(borderWidth) || 0;\n  },\n  _dragHandler: function (e) {\n    var $element = this.$element();\n    var sides = this._movingSides;\n    var location = this._elementLocation;\n    var size = this._elementSize;\n\n    var offset = this._getOffset(e);\n\n    var width = size.width + offset.x * (sides.left ? -1 : 1);\n    var height = size.height + offset.y * (sides.top ? -1 : 1);\n\n    if (offset.x || \"strict\" === this.option(\"stepPrecision\")) {\n      this._renderWidth(width);\n    }\n\n    if (offset.y || \"strict\" === this.option(\"stepPrecision\")) {\n      this._renderHeight(height);\n    }\n\n    var elementRect = getBoundingRect($element.get(0));\n    var offsetTop = offset.y - ((elementRect.height || height) - height);\n    var offsetLeft = offset.x - ((elementRect.width || width) - width);\n    move($element, {\n      top: location.top + (sides.top ? offsetTop : 0),\n      left: location.left + (sides.left ? offsetLeft : 0)\n    });\n\n    this._resizeAction({\n      event: e,\n      width: this.option(\"width\") || width,\n      height: this.option(\"height\") || height,\n      handles: this._movingSides\n    });\n\n    triggerResizeEvent($element);\n  },\n  _getOffset: function (e) {\n    var offset = e.offset;\n    var steps = pairToObject(this.option(\"step\"), !this.option(\"roundStepValue\"));\n\n    var sides = this._getMovingSides(e);\n\n    var strictPrecision = \"strict\" === this.option(\"stepPrecision\");\n\n    if (!sides.left && !sides.right) {\n      offset.x = 0;\n    }\n\n    if (!sides.top && !sides.bottom) {\n      offset.y = 0;\n    }\n\n    return strictPrecision ? this._getStrictOffset(offset, steps, sides) : this._getSimpleOffset(offset, steps);\n  },\n  _getSimpleOffset: function (offset, steps) {\n    return {\n      x: offset.x - offset.x % steps.h,\n      y: offset.y - offset.y % steps.v\n    };\n  },\n  _getStrictOffset: function (offset, steps, sides) {\n    var location = this._elementLocation;\n    var size = this._elementSize;\n    var xPos = sides.left ? location.left : location.left + size.width;\n    var yPos = sides.top ? location.top : location.top + size.height;\n    var newXShift = (xPos + offset.x) % steps.h;\n    var newYShift = (yPos + offset.y) % steps.v;\n\n    var sign = Math.sign || (x => {\n      x = +x;\n\n      if (0 === x || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    });\n\n    var separatorOffset = (steps, offset) => (1 + .2 * sign(offset)) % 1 * steps;\n\n    var isSmallOffset = (offset, steps) => Math.abs(offset) < .2 * steps;\n\n    var newOffsetX = offset.x - newXShift;\n    var newOffsetY = offset.y - newYShift;\n\n    if (newXShift > separatorOffset(steps.h, offset.x)) {\n      newOffsetX += steps.h;\n    }\n\n    if (newYShift > separatorOffset(steps.v, offset.y)) {\n      newOffsetY += steps.v;\n    }\n\n    return {\n      x: (sides.left || sides.right) && !isSmallOffset(offset.x, steps.h) ? newOffsetX : 0,\n      y: (sides.top || sides.bottom) && !isSmallOffset(offset.y, steps.v) ? newOffsetY : 0\n    };\n  },\n  _getMovingSides: function (e) {\n    var $target = $(e.target);\n    var hasCornerTopLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-left\");\n    var hasCornerTopRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-right\");\n    var hasCornerBottomLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-left\");\n    var hasCornerBottomRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-right\");\n    return {\n      top: $target.hasClass(RESIZABLE_HANDLE_TOP_CLASS) || hasCornerTopLeftClass || hasCornerTopRightClass,\n      left: $target.hasClass(RESIZABLE_HANDLE_LEFT_CLASS) || hasCornerTopLeftClass || hasCornerBottomLeftClass,\n      bottom: $target.hasClass(RESIZABLE_HANDLE_BOTTOM_CLASS) || hasCornerBottomLeftClass || hasCornerBottomRightClass,\n      right: $target.hasClass(RESIZABLE_HANDLE_RIGHT_CLASS) || hasCornerTopRightClass || hasCornerBottomRightClass\n    };\n  },\n  _getArea: function () {\n    var area = this.option(\"area\");\n\n    if (isFunction(area)) {\n      area = area.call(this);\n    }\n\n    if (isPlainObject(area)) {\n      return this._getAreaFromObject(area);\n    }\n\n    return this._getAreaFromElement(area);\n  },\n  _getAreaScrollOffset: function () {\n    var area = this.option(\"area\");\n    var isElement = !isFunction(area) && !isPlainObject(area);\n    var scrollOffset = {\n      scrollY: 0,\n      scrollX: 0\n    };\n\n    if (isElement) {\n      var areaElement = $(area)[0];\n\n      if (isWindow(areaElement)) {\n        scrollOffset.scrollX = areaElement.pageXOffset;\n        scrollOffset.scrollY = areaElement.pageYOffset;\n      }\n    }\n\n    return scrollOffset;\n  },\n  _getAreaFromObject: function (area) {\n    var result = {\n      width: area.right - area.left,\n      height: area.bottom - area.top,\n      offset: {\n        left: area.left,\n        top: area.top\n      }\n    };\n\n    this._correctAreaGeometry(result);\n\n    return result;\n  },\n  _getAreaFromElement: function (area) {\n    var $area = $(area);\n    var result;\n\n    if ($area.length) {\n      result = {\n        width: $area.innerWidth(),\n        height: $area.innerHeight(),\n        offset: extend({\n          top: 0,\n          left: 0\n        }, isWindow($area[0]) ? {} : $area.offset())\n      };\n\n      this._correctAreaGeometry(result, $area);\n    }\n\n    return result;\n  },\n  _correctAreaGeometry: function (result, $area) {\n    var areaBorderLeft = $area ? this._getBorderWidth($area, \"left\") : 0;\n    var areaBorderTop = $area ? this._getBorderWidth($area, \"top\") : 0;\n    result.offset.left += areaBorderLeft + this._getBorderWidth(this.$element(), \"left\");\n    result.offset.top += areaBorderTop + this._getBorderWidth(this.$element(), \"top\");\n    result.width -= this.$element().outerWidth() - this.$element().innerWidth();\n    result.height -= this.$element().outerHeight() - this.$element().innerHeight();\n  },\n  _dragEndHandler: function (e) {\n    var $element = this.$element();\n\n    this._resizeEndAction({\n      event: e,\n      width: $element.outerWidth(),\n      height: $element.outerHeight(),\n      handles: this._movingSides\n    });\n\n    this._toggleResizingClass(false);\n  },\n  _renderWidth: function (width) {\n    this.option(\"width\", fitIntoRange(width, this.option(\"minWidth\"), this.option(\"maxWidth\")));\n  },\n  _renderHeight: function (height) {\n    this.option(\"height\", fitIntoRange(height, this.option(\"minHeight\"), this.option(\"maxHeight\")));\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"disabled\":\n        this._toggleEventHandlers(!args.value);\n\n        this.callBase(args);\n        break;\n\n      case \"handles\":\n        this._invalidate();\n\n        break;\n\n      case \"minWidth\":\n      case \"maxWidth\":\n        hasWindow() && this._renderWidth(this.$element().outerWidth());\n        break;\n\n      case \"minHeight\":\n      case \"maxHeight\":\n        hasWindow() && this._renderHeight(this.$element().outerHeight());\n        break;\n\n      case \"onResize\":\n      case \"onResizeStart\":\n      case \"onResizeEnd\":\n        this._renderActions();\n\n        break;\n\n      case \"area\":\n      case \"stepPrecision\":\n      case \"step\":\n      case \"roundStepValue\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _clean: function () {\n    this.$element().find(\".\" + RESIZABLE_HANDLE_CLASS).remove();\n  },\n  _useTemplates: function () {\n    return false;\n  }\n});\nregisterComponent(RESIZABLE, Resizable);\nexport default Resizable;","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/node_modules/devextreme/esm/ui/resizable.js"],"names":["locate","move","registerComponent","DOMComponent","$","inArray","pairToObject","extend","each","fitIntoRange","isPlainObject","isFunction","isWindow","hasWindow","eventsEngine","start","dragEventStart","dragEventMove","end","dragEventEnd","getBoundingRect","addNamespace","triggerResizeEvent","RESIZABLE","RESIZABLE_CLASS","RESIZABLE_RESIZING_CLASS","RESIZABLE_HANDLE_CLASS","RESIZABLE_HANDLE_TOP_CLASS","RESIZABLE_HANDLE_BOTTOM_CLASS","RESIZABLE_HANDLE_LEFT_CLASS","RESIZABLE_HANDLE_RIGHT_CLASS","RESIZABLE_HANDLE_CORNER_CLASS","DRAGSTART_START_EVENT_NAME","DRAGSTART_EVENT_NAME","DRAGSTART_END_EVENT_NAME","SIDE_BORDER_WIDTH_STYLES","left","top","right","bottom","Resizable","inherit","_getDefaultOptions","callBase","handles","step","stepPrecision","area","minWidth","maxWidth","minHeight","maxHeight","onResizeStart","onResize","onResizeEnd","roundStepValue","_init","$element","addClass","_initMarkup","_renderHandles","_render","_renderActions","_resizeStartAction","_createActionByOption","_resizeEndAction","_resizeAction","_handles","option","directions","split","index","handleName","_renderHandle","_attachEventHandlers","$handle","appendTo","push","handlers","_dragStartHandler","bind","_dragHandler","_dragEndHandler","forEach","handleElement","on","direction","immediate","_detachEventHandlers","off","_toggleEventHandlers","shouldAttachEvents","e","is","cancel","_toggleResizingClass","_movingSides","_getMovingSides","_elementLocation","elementRect","get","_elementSize","width","height","_renderDragOffsets","event","targetElements","value","toggleClass","_getArea","target","closest","handleWidth","outerWidth","handleHeight","outerHeight","handleOffset","offset","areaOffset","scrollOffset","_getAreaScrollOffset","maxLeftOffset","scrollX","maxRightOffset","maxTopOffset","scrollY","maxBottomOffset","_getBorderWidth","borderWidth","css","parseInt","sides","location","size","_getOffset","x","y","_renderWidth","_renderHeight","offsetTop","offsetLeft","steps","strictPrecision","_getStrictOffset","_getSimpleOffset","h","v","xPos","yPos","newXShift","newYShift","sign","Math","isNaN","separatorOffset","isSmallOffset","abs","newOffsetX","newOffsetY","$target","hasCornerTopLeftClass","hasClass","hasCornerTopRightClass","hasCornerBottomLeftClass","hasCornerBottomRightClass","call","_getAreaFromObject","_getAreaFromElement","isElement","areaElement","pageXOffset","pageYOffset","result","_correctAreaGeometry","$area","length","innerWidth","innerHeight","areaBorderLeft","areaBorderTop","_optionChanged","args","name","_invalidate","_clean","find","remove","_useTemplates"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/resizable.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    locate,\r\n    move\r\n} from \"../animation/translator\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport DOMComponent from \"../core/dom_component\";\r\nimport $ from \"../core/renderer\";\r\nimport {\r\n    inArray\r\n} from \"../core/utils/array\";\r\nimport {\r\n    pairToObject\r\n} from \"../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    fitIntoRange\r\n} from \"../core/utils/math\";\r\nimport {\r\n    isPlainObject,\r\n    isFunction,\r\n    isWindow\r\n} from \"../core/utils/type\";\r\nimport {\r\n    hasWindow\r\n} from \"../core/utils/window\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport {\r\n    start as dragEventStart,\r\n    move as dragEventMove,\r\n    end as dragEventEnd\r\n} from \"../events/drag\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../core/utils/position\";\r\nimport {\r\n    addNamespace\r\n} from \"../events/utils/index\";\r\nimport {\r\n    triggerResizeEvent\r\n} from \"../events/visibility_change\";\r\nvar RESIZABLE = \"dxResizable\";\r\nvar RESIZABLE_CLASS = \"dx-resizable\";\r\nvar RESIZABLE_RESIZING_CLASS = \"dx-resizable-resizing\";\r\nvar RESIZABLE_HANDLE_CLASS = \"dx-resizable-handle\";\r\nvar RESIZABLE_HANDLE_TOP_CLASS = \"dx-resizable-handle-top\";\r\nvar RESIZABLE_HANDLE_BOTTOM_CLASS = \"dx-resizable-handle-bottom\";\r\nvar RESIZABLE_HANDLE_LEFT_CLASS = \"dx-resizable-handle-left\";\r\nvar RESIZABLE_HANDLE_RIGHT_CLASS = \"dx-resizable-handle-right\";\r\nvar RESIZABLE_HANDLE_CORNER_CLASS = \"dx-resizable-handle-corner\";\r\nvar DRAGSTART_START_EVENT_NAME = addNamespace(dragEventStart, RESIZABLE);\r\nvar DRAGSTART_EVENT_NAME = addNamespace(dragEventMove, RESIZABLE);\r\nvar DRAGSTART_END_EVENT_NAME = addNamespace(dragEventEnd, RESIZABLE);\r\nvar SIDE_BORDER_WIDTH_STYLES = {\r\n    left: \"borderLeftWidth\",\r\n    top: \"borderTopWidth\",\r\n    right: \"borderRightWidth\",\r\n    bottom: \"borderBottomWidth\"\r\n};\r\nvar Resizable = DOMComponent.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            handles: \"all\",\r\n            step: \"1\",\r\n            stepPrecision: \"simple\",\r\n            area: void 0,\r\n            minWidth: 30,\r\n            maxWidth: 1 / 0,\r\n            minHeight: 30,\r\n            maxHeight: 1 / 0,\r\n            onResizeStart: null,\r\n            onResize: null,\r\n            onResizeEnd: null,\r\n            roundStepValue: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(RESIZABLE_CLASS)\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._renderHandles()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderActions()\r\n    },\r\n    _renderActions: function() {\r\n        this._resizeStartAction = this._createActionByOption(\"onResizeStart\");\r\n        this._resizeEndAction = this._createActionByOption(\"onResizeEnd\");\r\n        this._resizeAction = this._createActionByOption(\"onResize\")\r\n    },\r\n    _renderHandles: function() {\r\n        this._handles = [];\r\n        var handles = this.option(\"handles\");\r\n        if (\"none\" === handles) {\r\n            return\r\n        }\r\n        var directions = \"all\" === handles ? [\"top\", \"bottom\", \"left\", \"right\"] : handles.split(\" \");\r\n        each(directions, (index, handleName) => {\r\n            this._renderHandle(handleName)\r\n        });\r\n        inArray(\"bottom\", directions) + 1 && inArray(\"right\", directions) + 1 && this._renderHandle(\"corner-bottom-right\");\r\n        inArray(\"bottom\", directions) + 1 && inArray(\"left\", directions) + 1 && this._renderHandle(\"corner-bottom-left\");\r\n        inArray(\"top\", directions) + 1 && inArray(\"right\", directions) + 1 && this._renderHandle(\"corner-top-right\");\r\n        inArray(\"top\", directions) + 1 && inArray(\"left\", directions) + 1 && this._renderHandle(\"corner-top-left\");\r\n        this._attachEventHandlers()\r\n    },\r\n    _renderHandle: function(handleName) {\r\n        var $handle = $(\"<div>\").addClass(RESIZABLE_HANDLE_CLASS).addClass(RESIZABLE_HANDLE_CLASS + \"-\" + handleName).appendTo(this.$element());\r\n        this._handles.push($handle)\r\n    },\r\n    _attachEventHandlers: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        var handlers = {};\r\n        handlers[DRAGSTART_START_EVENT_NAME] = this._dragStartHandler.bind(this);\r\n        handlers[DRAGSTART_EVENT_NAME] = this._dragHandler.bind(this);\r\n        handlers[DRAGSTART_END_EVENT_NAME] = this._dragEndHandler.bind(this);\r\n        this._handles.forEach(handleElement => {\r\n            eventsEngine.on(handleElement, handlers, {\r\n                direction: \"both\",\r\n                immediate: true\r\n            })\r\n        })\r\n    },\r\n    _detachEventHandlers: function() {\r\n        this._handles.forEach(handleElement => {\r\n            eventsEngine.off(handleElement)\r\n        })\r\n    },\r\n    _toggleEventHandlers: function(shouldAttachEvents) {\r\n        shouldAttachEvents ? this._attachEventHandlers() : this._detachEventHandlers()\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        var $element = this.$element();\r\n        if ($element.is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        this._toggleResizingClass(true);\r\n        this._movingSides = this._getMovingSides(e);\r\n        this._elementLocation = locate($element);\r\n        var elementRect = getBoundingRect($element.get(0));\r\n        this._elementSize = {\r\n            width: elementRect.width,\r\n            height: elementRect.height\r\n        };\r\n        this._renderDragOffsets(e);\r\n        this._resizeStartAction({\r\n            event: e,\r\n            width: this._elementSize.width,\r\n            height: this._elementSize.height,\r\n            handles: this._movingSides\r\n        });\r\n        e.targetElements = null\r\n    },\r\n    _toggleResizingClass: function(value) {\r\n        this.$element().toggleClass(RESIZABLE_RESIZING_CLASS, value)\r\n    },\r\n    _renderDragOffsets: function(e) {\r\n        var area = this._getArea();\r\n        if (!area) {\r\n            return\r\n        }\r\n        var $handle = $(e.target).closest(\".\" + RESIZABLE_HANDLE_CLASS);\r\n        var handleWidth = $handle.outerWidth();\r\n        var handleHeight = $handle.outerHeight();\r\n        var handleOffset = $handle.offset();\r\n        var areaOffset = area.offset;\r\n        var scrollOffset = this._getAreaScrollOffset();\r\n        e.maxLeftOffset = handleOffset.left - areaOffset.left - scrollOffset.scrollX;\r\n        e.maxRightOffset = areaOffset.left + area.width - handleOffset.left - handleWidth + scrollOffset.scrollX;\r\n        e.maxTopOffset = handleOffset.top - areaOffset.top - scrollOffset.scrollY;\r\n        e.maxBottomOffset = areaOffset.top + area.height - handleOffset.top - handleHeight + scrollOffset.scrollY\r\n    },\r\n    _getBorderWidth: function($element, direction) {\r\n        if (isWindow($element.get(0))) {\r\n            return 0\r\n        }\r\n        var borderWidth = $element.css(SIDE_BORDER_WIDTH_STYLES[direction]);\r\n        return parseInt(borderWidth) || 0\r\n    },\r\n    _dragHandler: function(e) {\r\n        var $element = this.$element();\r\n        var sides = this._movingSides;\r\n        var location = this._elementLocation;\r\n        var size = this._elementSize;\r\n        var offset = this._getOffset(e);\r\n        var width = size.width + offset.x * (sides.left ? -1 : 1);\r\n        var height = size.height + offset.y * (sides.top ? -1 : 1);\r\n        if (offset.x || \"strict\" === this.option(\"stepPrecision\")) {\r\n            this._renderWidth(width)\r\n        }\r\n        if (offset.y || \"strict\" === this.option(\"stepPrecision\")) {\r\n            this._renderHeight(height)\r\n        }\r\n        var elementRect = getBoundingRect($element.get(0));\r\n        var offsetTop = offset.y - ((elementRect.height || height) - height);\r\n        var offsetLeft = offset.x - ((elementRect.width || width) - width);\r\n        move($element, {\r\n            top: location.top + (sides.top ? offsetTop : 0),\r\n            left: location.left + (sides.left ? offsetLeft : 0)\r\n        });\r\n        this._resizeAction({\r\n            event: e,\r\n            width: this.option(\"width\") || width,\r\n            height: this.option(\"height\") || height,\r\n            handles: this._movingSides\r\n        });\r\n        triggerResizeEvent($element)\r\n    },\r\n    _getOffset: function(e) {\r\n        var offset = e.offset;\r\n        var steps = pairToObject(this.option(\"step\"), !this.option(\"roundStepValue\"));\r\n        var sides = this._getMovingSides(e);\r\n        var strictPrecision = \"strict\" === this.option(\"stepPrecision\");\r\n        if (!sides.left && !sides.right) {\r\n            offset.x = 0\r\n        }\r\n        if (!sides.top && !sides.bottom) {\r\n            offset.y = 0\r\n        }\r\n        return strictPrecision ? this._getStrictOffset(offset, steps, sides) : this._getSimpleOffset(offset, steps)\r\n    },\r\n    _getSimpleOffset: function(offset, steps) {\r\n        return {\r\n            x: offset.x - offset.x % steps.h,\r\n            y: offset.y - offset.y % steps.v\r\n        }\r\n    },\r\n    _getStrictOffset: function(offset, steps, sides) {\r\n        var location = this._elementLocation;\r\n        var size = this._elementSize;\r\n        var xPos = sides.left ? location.left : location.left + size.width;\r\n        var yPos = sides.top ? location.top : location.top + size.height;\r\n        var newXShift = (xPos + offset.x) % steps.h;\r\n        var newYShift = (yPos + offset.y) % steps.v;\r\n        var sign = Math.sign || (x => {\r\n            x = +x;\r\n            if (0 === x || isNaN(x)) {\r\n                return x\r\n            }\r\n            return x > 0 ? 1 : -1\r\n        });\r\n        var separatorOffset = (steps, offset) => (1 + .2 * sign(offset)) % 1 * steps;\r\n        var isSmallOffset = (offset, steps) => Math.abs(offset) < .2 * steps;\r\n        var newOffsetX = offset.x - newXShift;\r\n        var newOffsetY = offset.y - newYShift;\r\n        if (newXShift > separatorOffset(steps.h, offset.x)) {\r\n            newOffsetX += steps.h\r\n        }\r\n        if (newYShift > separatorOffset(steps.v, offset.y)) {\r\n            newOffsetY += steps.v\r\n        }\r\n        return {\r\n            x: (sides.left || sides.right) && !isSmallOffset(offset.x, steps.h) ? newOffsetX : 0,\r\n            y: (sides.top || sides.bottom) && !isSmallOffset(offset.y, steps.v) ? newOffsetY : 0\r\n        }\r\n    },\r\n    _getMovingSides: function(e) {\r\n        var $target = $(e.target);\r\n        var hasCornerTopLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-left\");\r\n        var hasCornerTopRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-right\");\r\n        var hasCornerBottomLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-left\");\r\n        var hasCornerBottomRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-right\");\r\n        return {\r\n            top: $target.hasClass(RESIZABLE_HANDLE_TOP_CLASS) || hasCornerTopLeftClass || hasCornerTopRightClass,\r\n            left: $target.hasClass(RESIZABLE_HANDLE_LEFT_CLASS) || hasCornerTopLeftClass || hasCornerBottomLeftClass,\r\n            bottom: $target.hasClass(RESIZABLE_HANDLE_BOTTOM_CLASS) || hasCornerBottomLeftClass || hasCornerBottomRightClass,\r\n            right: $target.hasClass(RESIZABLE_HANDLE_RIGHT_CLASS) || hasCornerTopRightClass || hasCornerBottomRightClass\r\n        }\r\n    },\r\n    _getArea: function() {\r\n        var area = this.option(\"area\");\r\n        if (isFunction(area)) {\r\n            area = area.call(this)\r\n        }\r\n        if (isPlainObject(area)) {\r\n            return this._getAreaFromObject(area)\r\n        }\r\n        return this._getAreaFromElement(area)\r\n    },\r\n    _getAreaScrollOffset: function() {\r\n        var area = this.option(\"area\");\r\n        var isElement = !isFunction(area) && !isPlainObject(area);\r\n        var scrollOffset = {\r\n            scrollY: 0,\r\n            scrollX: 0\r\n        };\r\n        if (isElement) {\r\n            var areaElement = $(area)[0];\r\n            if (isWindow(areaElement)) {\r\n                scrollOffset.scrollX = areaElement.pageXOffset;\r\n                scrollOffset.scrollY = areaElement.pageYOffset\r\n            }\r\n        }\r\n        return scrollOffset\r\n    },\r\n    _getAreaFromObject: function(area) {\r\n        var result = {\r\n            width: area.right - area.left,\r\n            height: area.bottom - area.top,\r\n            offset: {\r\n                left: area.left,\r\n                top: area.top\r\n            }\r\n        };\r\n        this._correctAreaGeometry(result);\r\n        return result\r\n    },\r\n    _getAreaFromElement: function(area) {\r\n        var $area = $(area);\r\n        var result;\r\n        if ($area.length) {\r\n            result = {\r\n                width: $area.innerWidth(),\r\n                height: $area.innerHeight(),\r\n                offset: extend({\r\n                    top: 0,\r\n                    left: 0\r\n                }, isWindow($area[0]) ? {} : $area.offset())\r\n            };\r\n            this._correctAreaGeometry(result, $area)\r\n        }\r\n        return result\r\n    },\r\n    _correctAreaGeometry: function(result, $area) {\r\n        var areaBorderLeft = $area ? this._getBorderWidth($area, \"left\") : 0;\r\n        var areaBorderTop = $area ? this._getBorderWidth($area, \"top\") : 0;\r\n        result.offset.left += areaBorderLeft + this._getBorderWidth(this.$element(), \"left\");\r\n        result.offset.top += areaBorderTop + this._getBorderWidth(this.$element(), \"top\");\r\n        result.width -= this.$element().outerWidth() - this.$element().innerWidth();\r\n        result.height -= this.$element().outerHeight() - this.$element().innerHeight()\r\n    },\r\n    _dragEndHandler: function(e) {\r\n        var $element = this.$element();\r\n        this._resizeEndAction({\r\n            event: e,\r\n            width: $element.outerWidth(),\r\n            height: $element.outerHeight(),\r\n            handles: this._movingSides\r\n        });\r\n        this._toggleResizingClass(false)\r\n    },\r\n    _renderWidth: function(width) {\r\n        this.option(\"width\", fitIntoRange(width, this.option(\"minWidth\"), this.option(\"maxWidth\")))\r\n    },\r\n    _renderHeight: function(height) {\r\n        this.option(\"height\", fitIntoRange(height, this.option(\"minHeight\"), this.option(\"maxHeight\")))\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"disabled\":\r\n                this._toggleEventHandlers(!args.value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"handles\":\r\n                this._invalidate();\r\n                break;\r\n            case \"minWidth\":\r\n            case \"maxWidth\":\r\n                hasWindow() && this._renderWidth(this.$element().outerWidth());\r\n                break;\r\n            case \"minHeight\":\r\n            case \"maxHeight\":\r\n                hasWindow() && this._renderHeight(this.$element().outerHeight());\r\n                break;\r\n            case \"onResize\":\r\n            case \"onResizeStart\":\r\n            case \"onResizeEnd\":\r\n                this._renderActions();\r\n                break;\r\n            case \"area\":\r\n            case \"stepPrecision\":\r\n            case \"step\":\r\n            case \"roundStepValue\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        this.$element().find(\".\" + RESIZABLE_HANDLE_CLASS).remove()\r\n    },\r\n    _useTemplates: function() {\r\n        return false\r\n    }\r\n});\r\nregisterComponent(RESIZABLE, Resizable);\r\nexport default Resizable;\r\n"]},"metadata":{},"sourceType":"module"}