{"ast":null,"code":"var _jsxFileName = \"/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/src/components/reset-password-form/reset-password-form.js\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport Form, { Item, Label, ButtonItem, ButtonOptions, RequiredRule, EmailRule } from 'devextreme-react/form';\nimport LoadIndicator from 'devextreme-react/load-indicator';\nimport notify from 'devextreme/ui/notify';\nimport { resetPassword } from '../../api/auth';\nimport './reset-password-form.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst notificationText = 'We\\'ve sent a link to reset your password. Check your inbox.';\nexport default function (props) {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const formData = useRef({});\n  const onSubmit = useCallback(async e => {\n    e.preventDefault();\n    const {\n      email\n    } = formData.current;\n    setLoading(true);\n    const result = await resetPassword(email);\n    setLoading(false);\n\n    if (result.isOk) {\n      history.push('/login');\n      notify(notificationText, 'success', 2500);\n    } else {\n      notify(result.message, 'error', 2000);\n    }\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: 'reset-password-form',\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      formData: formData.current,\n      disabled: loading,\n      children: [/*#__PURE__*/_jsxDEV(Item, {\n        dataField: 'email',\n        editorType: 'dxTextBox',\n        editorOptions: emailEditorOptions,\n        children: [/*#__PURE__*/_jsxDEV(RequiredRule, {\n          message: \"Email is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EmailRule, {\n          message: \"Email is invalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          visible: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonItem, {\n        children: /*#__PURE__*/_jsxDEV(ButtonOptions, {\n          elementAttr: submitButtonAttributes,\n          width: '100%',\n          type: 'default',\n          useSubmitBehavior: true,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dx-button-text\",\n            children: loading ? /*#__PURE__*/_jsxDEV(LoadIndicator, {\n              width: '24px',\n              height: '24px',\n              visible: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this) : 'Reset my password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Item, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'login-link',\n          children: [\"Return to \", /*#__PURE__*/_jsxDEV(Link, {\n            to: '/login',\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\nconst emailEditorOptions = {\n  stylingMode: 'filled',\n  placeholder: 'Email',\n  mode: 'email'\n};\nconst submitButtonAttributes = {\n  class: 'submit-button'\n};","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/src/components/reset-password-form/reset-password-form.js"],"names":["React","useState","useRef","useCallback","Link","useHistory","Form","Item","Label","ButtonItem","ButtonOptions","RequiredRule","EmailRule","LoadIndicator","notify","resetPassword","notificationText","props","history","loading","setLoading","formData","onSubmit","e","preventDefault","email","current","result","isOk","push","message","emailEditorOptions","submitButtonAttributes","stylingMode","placeholder","mode","class"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport Form, {\n  Item,\n  Label,\n  ButtonItem,\n  ButtonOptions,\n  RequiredRule,\n  EmailRule\n} from 'devextreme-react/form';\nimport LoadIndicator from 'devextreme-react/load-indicator';\nimport notify from 'devextreme/ui/notify';\nimport { resetPassword } from '../../api/auth';\nimport './reset-password-form.scss';\n\nconst notificationText = 'We\\'ve sent a link to reset your password. Check your inbox.';\n\nexport default function (props) {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const formData = useRef({});\n\n  const onSubmit = useCallback(async (e) => {\n    e.preventDefault();\n    const { email } = formData.current;\n    setLoading(true);\n\n    const result = await resetPassword(email);\n    setLoading(false);\n\n    if (result.isOk) {\n      history.push('/login');\n      notify(notificationText, 'success', 2500);\n    } else {\n      notify(result.message, 'error', 2000);\n    }\n  }, [history]);\n\n  return (\n    <form className={'reset-password-form'} onSubmit={onSubmit}>\n      <Form formData={formData.current} disabled={loading}>\n        <Item\n          dataField={'email'}\n          editorType={'dxTextBox'}\n          editorOptions={emailEditorOptions}\n        >\n          <RequiredRule message=\"Email is required\" />\n          <EmailRule message=\"Email is invalid\" />\n          <Label visible={false} />\n        </Item>\n        <ButtonItem>\n          <ButtonOptions\n            elementAttr={submitButtonAttributes}\n            width={'100%'}\n            type={'default'}\n            useSubmitBehavior={true}\n          >\n            <span className=\"dx-button-text\">\n              {\n                loading\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\n                  : 'Reset my password'\n              }\n            </span>\n          </ButtonOptions>\n        </ButtonItem>\n        <Item>\n          <div className={'login-link'}>\n            Return to <Link to={'/login'}>Sign In</Link>\n          </div>\n        </Item>\n      </Form>\n    </form>\n  );\n}\n\nconst emailEditorOptions = { stylingMode: 'filled', placeholder: 'Email', mode: 'email' };\nconst submitButtonAttributes = { class: 'submit-button' };\n"]},"metadata":{},"sourceType":"module"}