{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_view.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport { getWindow } from \"../../core/utils/window\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { data as elementData } from \"../../core/element_data\";\nimport pointerEvents from \"../../events/pointer\";\nimport { name as clickEventName } from \"../../events/click\";\nimport { name as dblclickEvent } from \"../../events/double_click\";\nimport browser from \"../../core/utils/browser\";\nimport { noop } from \"../../core/utils/common\";\nimport { setWidth } from \"../../core/utils/style\";\nimport { getPublicElement } from \"../../core/element\";\nimport { isRenderer, isFunction, isString, isDefined, isNumeric } from \"../../core/utils/type\";\nimport { getBoundingRect, getDefaultAlignment } from \"../../core/utils/position\";\nimport * as iteratorUtils from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport modules from \"./ui.grid_core.modules\";\nimport gridCoreUtils from \"./ui.grid_core.utils\";\nimport columnStateMixin from \"./ui.grid_core.column_state_mixin\";\nimport { when, Deferred } from \"../../core/utils/deferred\";\nimport { nativeScrolling } from \"../../core/utils/support\";\nvar SCROLL_CONTAINER_CLASS = \"scroll-container\";\nvar SCROLLABLE_SIMULATED_CLASS = \"scrollable-simulated\";\nvar GROUP_SPACE_CLASS = \"group-space\";\nvar CONTENT_CLASS = \"content\";\nvar TABLE_CLASS = \"table\";\nvar TABLE_FIXED_CLASS = \"table-fixed\";\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\nvar ROW_CLASS = \"dx-row\";\nvar GROUP_ROW_CLASS = \"dx-group-row\";\nvar DETAIL_ROW_CLASS = \"dx-master-detail-row\";\nvar FILTER_ROW_CLASS = \"filter-row\";\nvar CELL_UPDATED_ANIMATION_CLASS = \"cell-updated-animation\";\nvar HIDDEN_COLUMNS_WIDTH = \"0.0001px\";\nvar CELL_HINT_VISIBLE = \"dxCellHintVisible\";\nvar FORM_FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\nvar appendElementTemplate = {\n  render: function (options) {\n    options.container.append(options.content);\n  }\n};\n\nvar subscribeToRowEvents = function (that, $table) {\n  var touchTarget;\n  var touchCurrentTarget;\n  var timeoutId;\n\n  function clearTouchTargets(timeout) {\n    return setTimeout(function () {\n      touchTarget = touchCurrentTarget = null;\n    }, timeout);\n  }\n\n  eventsEngine.on($table, \"touchstart touchend\", \".dx-row\", function (e) {\n    clearTimeout(timeoutId);\n\n    if (\"touchstart\" === e.type) {\n      touchTarget = e.target;\n      touchCurrentTarget = e.currentTarget;\n      timeoutId = clearTouchTargets(1e3);\n    } else {\n      timeoutId = clearTouchTargets();\n    }\n  });\n  eventsEngine.on($table, [clickEventName, dblclickEvent, pointerEvents.down].join(\" \"), \".dx-row\", {\n    useNative: that._isNativeClick()\n  }, that.createAction(function (e) {\n    var event = e.event;\n\n    if (touchTarget) {\n      event.target = touchTarget;\n      event.currentTarget = touchCurrentTarget;\n    }\n\n    if (!$(event.target).closest(\"a\").length) {\n      e.rowIndex = that.getRowIndex(event.currentTarget);\n\n      if (e.rowIndex >= 0) {\n        e.rowElement = getPublicElement($(event.currentTarget));\n        e.columns = that.getColumns();\n\n        if (event.type === pointerEvents.down) {\n          that._rowPointerDown(e);\n        } else if (event.type === clickEventName) {\n          that._rowClick(e);\n        } else {\n          that._rowDblClick(e);\n        }\n      }\n    }\n  }));\n};\n\nvar getWidthStyle = function (width) {\n  if (\"auto\" === width) {\n    return \"\";\n  }\n\n  return isNumeric(width) ? width + \"px\" : width;\n};\n\nvar setCellWidth = function (cell, column, width) {\n  cell.style.width = cell.style.maxWidth = \"auto\" === column.width ? \"\" : width;\n};\n\nvar copyAttributes = function (element, newElement) {\n  if (!element || !newElement) {\n    return;\n  }\n\n  var oldAttributes = element.attributes;\n  var newAttributes = newElement.attributes;\n  var i;\n\n  for (i = 0; i < oldAttributes.length; i++) {\n    var name = oldAttributes[i].nodeName;\n\n    if (!newElement.hasAttribute(name)) {\n      element.removeAttribute(name);\n    }\n  }\n\n  for (i = 0; i < newAttributes.length; i++) {\n    element.setAttribute(newAttributes[i].nodeName, newAttributes[i].nodeValue);\n  }\n};\n\nexport var ColumnsView = modules.View.inherit(columnStateMixin).inherit({\n  _createScrollableOptions: function () {\n    var scrollingOptions = this.option(\"scrolling\");\n    var useNativeScrolling = this.option(\"scrolling.useNative\");\n    var options = extend({}, scrollingOptions, {\n      direction: \"both\",\n      bounceEnabled: false,\n      useKeyboard: false\n    });\n\n    if (void 0 === useNativeScrolling) {\n      useNativeScrolling = true;\n    }\n\n    if (\"auto\" === useNativeScrolling) {\n      delete options.useNative;\n      delete options.useSimulatedScrollbar;\n    } else {\n      options.useNative = !!useNativeScrolling;\n      options.useSimulatedScrollbar = !useNativeScrolling;\n    }\n\n    return options;\n  },\n  _updateCell: function ($cell, parameters) {\n    if (parameters.rowType) {\n      this._cellPrepared($cell, parameters);\n    }\n  },\n  _createCell: function (options) {\n    var column = options.column;\n    var alignment = column.alignment || getDefaultAlignment(this.option(\"rtlEnabled\"));\n    var cell = domAdapter.createElement(\"td\");\n    cell.style.textAlign = alignment;\n    var $cell = $(cell);\n\n    if (\"data\" === options.rowType && column.headerId && !column.type) {\n      if (this.component.option(\"showColumnHeaders\")) {\n        this.setAria(\"describedby\", column.headerId, $cell);\n      }\n    }\n\n    if (column.cssClass) {\n      $cell.addClass(column.cssClass);\n    }\n\n    if (\"expand\" === column.command) {\n      $cell.addClass(column.cssClass);\n      $cell.addClass(this.addWidgetPrefix(GROUP_SPACE_CLASS));\n    }\n\n    if (column.colspan > 1) {\n      $cell.attr(\"colSpan\", column.colspan);\n    } else if (!column.isBand && \"auto\" !== column.visibleWidth && this.option(\"columnAutoWidth\")) {\n      if (column.width || column.minWidth) {\n        cell.style.minWidth = getWidthStyle(column.minWidth || column.width);\n      }\n\n      if (column.width) {\n        setCellWidth(cell, column, getWidthStyle(column.width));\n      }\n    }\n\n    return $cell;\n  },\n  _createRow: function (rowObject) {\n    var $element = $(\"<tr>\").addClass(ROW_CLASS);\n    this.setAria(\"role\", \"row\", $element);\n    return $element;\n  },\n  _isAltRow: function (row) {\n    return row && row.dataIndex % 2 === 1;\n  },\n  _createTable: function (columns, isAppend) {\n    var that = this;\n    var $table = $(\"<table>\").addClass(that.addWidgetPrefix(TABLE_CLASS)).addClass(that.addWidgetPrefix(TABLE_FIXED_CLASS));\n\n    if (columns && !isAppend) {\n      $table.append(that._createColGroup(columns));\n\n      if (browser.safari) {\n        $table.append($(\"<thead>\").append(\"<tr>\"));\n      }\n\n      that.setAria(\"role\", \"presentation\", $table);\n    } else {\n      that.setAria(\"hidden\", true, $table);\n    }\n\n    this.setAria(\"role\", \"presentation\", $(\"<tbody>\").appendTo($table));\n\n    if (isAppend) {\n      return $table;\n    }\n\n    if (browser.mozilla) {\n      eventsEngine.on($table, \"mousedown\", \"td\", function (e) {\n        if (e.ctrlKey) {\n          e.preventDefault();\n        }\n      });\n    }\n\n    if (that.option(\"cellHintEnabled\")) {\n      eventsEngine.on($table, \"mousemove\", \".dx-row > td\", this.createAction(function (args) {\n        var e = args.event;\n        var $element = $(e.target);\n        var $cell = $(e.currentTarget);\n        var $row = $cell.parent();\n        var isDataRow = $row.hasClass(\"dx-data-row\");\n        var isHeaderRow = $row.hasClass(\"dx-header-row\");\n        var isGroupRow = $row.hasClass(GROUP_ROW_CLASS);\n        var isMasterDetailRow = $row.hasClass(DETAIL_ROW_CLASS);\n        var isFilterRow = $row.hasClass(that.addWidgetPrefix(FILTER_ROW_CLASS));\n\n        var visibleColumns = that._columnsController.getVisibleColumns();\n\n        var rowOptions = $row.data(\"options\");\n        var columnIndex = $cell.index();\n        var cellOptions = rowOptions && rowOptions.cells && rowOptions.cells[columnIndex];\n        var column = cellOptions ? cellOptions.column : visibleColumns[columnIndex];\n        var msieCorrection = browser.msie ? 1 : 0;\n\n        if (!isMasterDetailRow && !isFilterRow && (!isDataRow || isDataRow && column && !column.cellTemplate) && (!isHeaderRow || isHeaderRow && column && !column.headerCellTemplate) && (!isGroupRow || isGroupRow && column && (void 0 === column.groupIndex || !column.groupCellTemplate))) {\n          if ($element.data(CELL_HINT_VISIBLE)) {\n            $element.removeAttr(\"title\");\n            $element.data(CELL_HINT_VISIBLE, false);\n          }\n\n          var difference = $element[0].scrollWidth - $element[0].clientWidth - msieCorrection;\n\n          if (difference > 0 && !isDefined($element.attr(\"title\"))) {\n            $element.attr(\"title\", $element.text());\n            $element.data(CELL_HINT_VISIBLE, true);\n          }\n        }\n      }));\n    }\n\n    var getOptions = function (event) {\n      var $cell = $(event.currentTarget);\n      var $fieldItemContent = $(event.target).closest(\".\" + FORM_FIELD_ITEM_CONTENT_CLASS);\n      var rowOptions = $cell.parent().data(\"options\");\n      var options = rowOptions && rowOptions.cells && rowOptions.cells[$cell.index()];\n\n      if (!$cell.closest(\"table\").is(event.delegateTarget)) {\n        return;\n      }\n\n      var resultOptions = extend({}, options, {\n        cellElement: getPublicElement($cell),\n        event: event,\n        eventType: event.type\n      });\n\n      if ($fieldItemContent.length) {\n        var formItemOptions = $fieldItemContent.data(\"dx-form-item\");\n\n        if (formItemOptions.column) {\n          resultOptions.column = formItemOptions.column;\n          resultOptions.columnIndex = that._columnsController.getVisibleIndex(resultOptions.column.index);\n        }\n      }\n\n      return resultOptions;\n    };\n\n    eventsEngine.on($table, \"mouseover\", \".dx-row > td\", function (e) {\n      var options = getOptions(e);\n      options && that.executeAction(\"onCellHoverChanged\", options);\n    });\n    eventsEngine.on($table, \"mouseout\", \".dx-row > td\", function (e) {\n      var options = getOptions(e);\n      options && that.executeAction(\"onCellHoverChanged\", options);\n    });\n    eventsEngine.on($table, clickEventName, \".dx-row > td\", function (e) {\n      var options = getOptions(e);\n      options && that.executeAction(\"onCellClick\", options);\n    });\n    eventsEngine.on($table, dblclickEvent, \".dx-row > td\", function (e) {\n      var options = getOptions(e);\n      options && that.executeAction(\"onCellDblClick\", options);\n    });\n    subscribeToRowEvents(that, $table);\n    return $table;\n  },\n  _isNativeClick: noop,\n  _rowPointerDown: noop,\n  _rowClick: noop,\n  _rowDblClick: noop,\n  _createColGroup: function (columns) {\n    var colgroupElement = $(\"<colgroup>\");\n\n    for (var i = 0; i < columns.length; i++) {\n      var colspan = columns[i].colspan || 1;\n\n      for (var j = 0; j < colspan; j++) {\n        colgroupElement.append(this._createCol(columns[i]));\n      }\n    }\n\n    return colgroupElement;\n  },\n  _createCol: function (column) {\n    var width = column.visibleWidth || column.width;\n\n    if (\"adaptiveHidden\" === width) {\n      width = HIDDEN_COLUMNS_WIDTH;\n    }\n\n    var col = $(\"<col>\");\n    setWidth(col, width);\n    return col;\n  },\n  renderDelayedTemplates: function () {\n    var delayedTemplates = this._delayedTemplates;\n    var syncTemplates = delayedTemplates.filter(template => !template.async);\n    var asyncTemplates = delayedTemplates.filter(template => template.async);\n    this._delayedTemplates = [];\n\n    this._renderDelayedTemplatesCore(syncTemplates);\n\n    this._renderDelayedTemplatesCoreAsync(asyncTemplates);\n  },\n  _renderDelayedTemplatesCoreAsync: function (templates) {\n    var that = this;\n\n    if (templates.length) {\n      getWindow().setTimeout(function () {\n        that._renderDelayedTemplatesCore(templates, true);\n      });\n    }\n  },\n  _renderDelayedTemplatesCore: function (templates, isAsync) {\n    var date = new Date();\n\n    while (templates.length) {\n      var templateParameters = templates.shift();\n      var options = templateParameters.options;\n      var doc = domAdapter.getDocument();\n\n      if (!isAsync || $(options.container).closest(doc).length) {\n        templateParameters.template.render(options);\n      }\n\n      if (isAsync && new Date() - date > 30) {\n        this._renderDelayedTemplatesCoreAsync(templates);\n\n        break;\n      }\n    }\n\n    if (!templates.length && this._delayedTemplates.length) {\n      this.renderDelayedTemplates();\n    }\n  },\n  _processTemplate: function (template) {\n    var renderingTemplate;\n\n    if (template && template.render && !isRenderer(template)) {\n      renderingTemplate = {\n        allowRenderToDetachedContainer: template.allowRenderToDetachedContainer,\n        render: function (options) {\n          template.render(options.container, options.model);\n          options.deferred && options.deferred.resolve();\n        }\n      };\n    } else if (isFunction(template)) {\n      renderingTemplate = {\n        render: function (options) {\n          var renderedTemplate = template(getPublicElement(options.container), options.model);\n\n          if (renderedTemplate && (renderedTemplate.nodeType || isRenderer(renderedTemplate))) {\n            options.container.append(renderedTemplate);\n          }\n\n          options.deferred && options.deferred.resolve();\n        }\n      };\n    } else {\n      var templateID = isString(template) ? template : $(template).attr(\"id\");\n\n      if (!templateID) {\n        renderingTemplate = this.getTemplate(template);\n      } else {\n        if (!this._templatesCache[templateID]) {\n          this._templatesCache[templateID] = this.getTemplate(template);\n        }\n\n        renderingTemplate = this._templatesCache[templateID];\n      }\n    }\n\n    return renderingTemplate;\n  },\n  renderTemplate: function (container, template, options, allowRenderToDetachedContainer) {\n    var renderingTemplate = this._processTemplate(template, options);\n\n    var column = options.column;\n    var isDataRow = \"data\" === options.rowType;\n    var templateDeferred = new Deferred();\n    var templateOptions = {\n      container: container,\n      model: options,\n      deferred: templateDeferred,\n      onRendered: () => {\n        templateDeferred.resolve();\n      }\n    };\n\n    if (renderingTemplate) {\n      options.component = this.component;\n      var async = column && (column.renderAsync && isDataRow || this.option(\"renderAsync\") && (false !== column.renderAsync && (column.command || column.showEditorAlways) && isDataRow || \"filter\" === options.rowType));\n\n      if ((renderingTemplate.allowRenderToDetachedContainer || allowRenderToDetachedContainer) && !async) {\n        renderingTemplate.render(templateOptions);\n      } else {\n        this._delayedTemplates.push({\n          template: renderingTemplate,\n          options: templateOptions,\n          async: async\n        });\n      }\n    } else {\n      templateDeferred.reject();\n    }\n\n    return templateDeferred.promise();\n  },\n  _getBodies: function (tableElement) {\n    return $(tableElement).children(\"tbody\").not(\".dx-header\").not(\".dx-footer\");\n  },\n  _wrapRowIfNeed: function ($table, $row) {\n    var $tBodies = this.option(\"rowTemplate\") && this._getBodies(this._tableElement || $table);\n\n    if ($tBodies && $tBodies.filter(\".\" + ROW_CLASS).length) {\n      var $tbody = $(\"<tbody>\").addClass($row.attr(\"class\"));\n      this.setAria(\"role\", \"presentation\", $tbody);\n      return $tbody.append($row);\n    }\n\n    return $row;\n  },\n  _appendRow: function ($table, $row, appendTemplate) {\n    appendTemplate = appendTemplate || appendElementTemplate;\n    appendTemplate.render({\n      content: $row,\n      container: $table\n    });\n  },\n  _resizeCore: function () {\n    var scrollLeft = this._scrollLeft;\n\n    if (scrollLeft >= 0) {\n      this._scrollLeft = 0;\n      this.scrollTo({\n        left: scrollLeft\n      });\n    }\n  },\n  _renderCore: function (e) {\n    var $root = this.element().parent();\n\n    if (!$root || $root.parent().length) {\n      this.renderDelayedTemplates(e);\n    }\n  },\n  _renderTable: function (options) {\n    options = options || {};\n    options.columns = this._columnsController.getVisibleColumns();\n    var changeType = options.change && options.change.changeType;\n\n    var $table = this._createTable(options.columns, \"append\" === changeType || \"prepend\" === changeType || \"update\" === changeType);\n\n    this._renderRows($table, options);\n\n    return $table;\n  },\n  _renderRows: function ($table, options) {\n    var rows = this._getRows(options.change);\n\n    var columnIndices = options.change && options.change.columnIndices || [];\n    var changeTypes = options.change && options.change.changeTypes || [];\n\n    for (var i = 0; i < rows.length; i++) {\n      this._renderRow($table, extend({\n        row: rows[i],\n        columnIndices: columnIndices[i],\n        changeType: changeTypes[i]\n      }, options));\n    }\n  },\n  _renderRow: function ($table, options) {\n    if (!options.columnIndices) {\n      options.row.cells = [];\n    }\n\n    var $row = this._createRow(options.row);\n\n    var $wrappedRow = this._wrapRowIfNeed($table, $row);\n\n    if (\"remove\" !== options.changeType) {\n      this._renderCells($row, options);\n    }\n\n    this._appendRow($table, $wrappedRow);\n\n    var rowOptions = extend({\n      columns: options.columns\n    }, options.row);\n\n    this._addWatchMethod(rowOptions, options.row);\n\n    this._rowPrepared($wrappedRow, rowOptions, options.row);\n  },\n  _needRenderCell: function (columnIndex, columnIndices) {\n    return !columnIndices || columnIndices.indexOf(columnIndex) >= 0;\n  },\n  _renderCells: function ($row, options) {\n    var columnIndex = 0;\n    var row = options.row;\n    var columns = options.columns;\n\n    for (var i = 0; i < columns.length; i++) {\n      if (this._needRenderCell(i, options.columnIndices)) {\n        this._renderCell($row, extend({\n          column: columns[i],\n          columnIndex: columnIndex,\n          value: row.values && row.values[columnIndex],\n          oldValue: row.oldValues && row.oldValues[columnIndex]\n        }, options));\n      }\n\n      if (columns[i].colspan > 1) {\n        columnIndex += columns[i].colspan;\n      } else {\n        columnIndex++;\n      }\n    }\n  },\n  _updateCells: function ($rowElement, $newRowElement, columnIndices) {\n    var $cells = $rowElement.children();\n    var $newCells = $newRowElement.children();\n    var highlightChanges = this.option(\"highlightChanges\");\n    var cellUpdatedClass = this.addWidgetPrefix(CELL_UPDATED_ANIMATION_CLASS);\n    columnIndices.forEach(function (columnIndex, index) {\n      var $cell = $cells.eq(columnIndex);\n      var $newCell = $newCells.eq(index);\n      $cell.replaceWith($newCell);\n\n      if (highlightChanges && !$newCell.hasClass(\"dx-command-expand\")) {\n        $newCell.addClass(cellUpdatedClass);\n      }\n    });\n    copyAttributes($rowElement.get(0), $newRowElement.get(0));\n  },\n  _setCellAriaAttributes: function ($cell, cellOptions) {\n    if (\"freeSpace\" !== cellOptions.rowType) {\n      this.setAria(\"selected\", false, $cell);\n      this.setAria(\"role\", \"gridcell\", $cell);\n\n      var columnIndexOffset = this._columnsController.getColumnIndexOffset();\n\n      var ariaColIndex = cellOptions.columnIndex + columnIndexOffset + 1;\n      this.setAria(\"colindex\", ariaColIndex, $cell);\n    }\n  },\n  _renderCell: function ($row, options) {\n    var cellOptions = this._getCellOptions(options);\n\n    if (options.columnIndices) {\n      if (options.row.cells) {\n        options.row.cells[cellOptions.columnIndex] = cellOptions;\n      }\n    } else {\n      options.row.cells.push(cellOptions);\n    }\n\n    var $cell = this._createCell(cellOptions);\n\n    this._setCellAriaAttributes($cell, cellOptions);\n\n    this._renderCellContent($cell, cellOptions);\n\n    $row.get(0).appendChild($cell.get(0));\n    return $cell;\n  },\n  _renderCellContent: function ($cell, options) {\n    var template = this._getCellTemplate(options);\n\n    when(!template || this.renderTemplate($cell, template, options)).done(() => {\n      this._updateCell($cell, options);\n    });\n  },\n  _getCellTemplate: function () {},\n  _getRows: function () {\n    return [];\n  },\n  _getCellOptions: function (options) {\n    var cellOptions = {\n      column: options.column,\n      columnIndex: options.columnIndex,\n      rowType: options.row.rowType,\n      isAltRow: this._isAltRow(options.row)\n    };\n\n    this._addWatchMethod(cellOptions);\n\n    return cellOptions;\n  },\n  _addWatchMethod: function (options, source) {\n    if (!this.option(\"repaintChangesOnly\")) {\n      return;\n    }\n\n    var watchers = [];\n    source = source || options;\n\n    source.watch = source.watch || function (getter, updateFunc) {\n      var oldValue = getter(source.data);\n\n      var watcher = function (row) {\n        var newValue = getter(source.data);\n\n        if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\n          if (row) {\n            updateFunc(newValue, row);\n          }\n\n          oldValue = newValue;\n        }\n      };\n\n      watchers.push(watcher);\n      return function () {\n        var index = watchers.indexOf(watcher);\n\n        if (index >= 0) {\n          watchers.splice(index, 1);\n        }\n      };\n    };\n\n    source.update = source.update || function (row) {\n      if (row) {\n        this.data = options.data = row.data;\n        this.rowIndex = options.rowIndex = row.rowIndex;\n        this.dataIndex = options.dataIndex = row.dataIndex;\n        this.isExpanded = options.isExpanded = row.isExpanded;\n\n        if (options.row) {\n          options.row = row;\n        }\n      }\n\n      watchers.forEach(function (watcher) {\n        watcher(row);\n      });\n    };\n\n    if (source !== options) {\n      options.watch = source.watch.bind(source);\n    }\n\n    return options;\n  },\n  _cellPrepared: function (cell, options) {\n    options.cellElement = getPublicElement($(cell));\n    this.executeAction(\"onCellPrepared\", options);\n  },\n  _rowPrepared: function ($row, options) {\n    elementData($row.get(0), \"options\", options);\n    options.rowElement = getPublicElement($row);\n    this.executeAction(\"onRowPrepared\", options);\n  },\n  _columnOptionChanged: function (e) {\n    var optionNames = e.optionNames;\n\n    if (gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\"])) {\n      var visibleColumns = this._columnsController.getVisibleColumns();\n\n      var widths = iteratorUtils.map(visibleColumns, function (column) {\n        var width = column.visibleWidth || column.width;\n        return isDefined(width) ? width : \"auto\";\n      });\n      this.setColumnWidths({\n        widths: widths,\n        optionNames: optionNames\n      });\n      return;\n    }\n\n    if (!this._requireReady) {\n      this.render();\n    }\n  },\n  getCellIndex: function ($cell) {\n    var cellIndex = $cell.length ? $cell[0].cellIndex : -1;\n    return cellIndex;\n  },\n  getTableElements: function () {\n    return this._tableElement || $();\n  },\n  getTableElement: function () {\n    return this._tableElement;\n  },\n  setTableElement: function (tableElement) {\n    this._tableElement = tableElement;\n  },\n  optionChanged: function (args) {\n    this.callBase(args);\n\n    switch (args.name) {\n      case \"cellHintEnabled\":\n      case \"onCellPrepared\":\n      case \"onRowPrepared\":\n      case \"onCellHoverChanged\":\n        this._invalidate(true, true);\n\n        args.handled = true;\n    }\n  },\n  init: function () {\n    var that = this;\n    that._scrollLeft = -1;\n    that._columnsController = that.getController(\"columns\");\n    that._dataController = that.getController(\"data\");\n    that._delayedTemplates = [];\n    that._templatesCache = {};\n    that.createAction(\"onCellClick\");\n    that.createAction(\"onRowClick\");\n    that.createAction(\"onCellDblClick\");\n    that.createAction(\"onRowDblClick\");\n    that.createAction(\"onCellHoverChanged\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n    that.createAction(\"onCellPrepared\", {\n      excludeValidators: [\"disabled\", \"readOnly\"],\n      category: \"rendering\"\n    });\n    that.createAction(\"onRowPrepared\", {\n      excludeValidators: [\"disabled\", \"readOnly\"],\n      category: \"rendering\",\n      afterExecute: function (e) {\n        that._afterRowPrepared(e);\n      }\n    });\n\n    that._columnsController.columnsChanged.add(that._columnOptionChanged.bind(that));\n\n    that._dataController && that._dataController.changed.add(that._handleDataChanged.bind(that));\n  },\n  _afterRowPrepared: noop,\n  _handleDataChanged: function () {},\n  callbackNames: function () {\n    return [\"scrollChanged\"];\n  },\n  _updateScrollLeftPosition: function () {\n    var scrollLeft = this._scrollLeft;\n\n    if (scrollLeft >= 0) {\n      this._scrollLeft = 0;\n      this.scrollTo({\n        left: scrollLeft\n      });\n    }\n  },\n  scrollTo: function (pos) {\n    var $element = this.element();\n    var $scrollContainer = $element && $element.children(\".\" + this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).not(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\n\n    if (isDefined(pos) && isDefined(pos.left) && this._scrollLeft !== pos.left) {\n      this._scrollLeft = pos.left;\n      $scrollContainer && $scrollContainer.scrollLeft(pos.left);\n    }\n  },\n  _wrapTableInScrollContainer: function ($table) {\n    var $scrollContainer = $(\"<div>\");\n    var useNative = this.option(\"scrolling.useNative\");\n\n    if (false === useNative || \"auto\" === useNative && !nativeScrolling) {\n      $scrollContainer.addClass(this.addWidgetPrefix(SCROLLABLE_SIMULATED_CLASS));\n    }\n\n    eventsEngine.on($scrollContainer, \"scroll\", () => {\n      var scrollLeft = $scrollContainer.scrollLeft();\n\n      if (scrollLeft !== this._scrollLeft) {\n        this.scrollChanged.fire({\n          left: scrollLeft\n        }, this.name);\n      }\n    });\n    $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_CLASS)).addClass(this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).append($table).appendTo(this.element());\n    this.setAria(\"role\", \"presentation\", $scrollContainer);\n    return $scrollContainer;\n  },\n  _updateContent: function ($newTableElement) {\n    this.setTableElement($newTableElement);\n\n    this._wrapTableInScrollContainer($newTableElement);\n  },\n  _findContentElement: noop,\n  _getWidths: function ($cellElements) {\n    var result = [];\n    var width;\n\n    if ($cellElements) {\n      iteratorUtils.each($cellElements, function (index, item) {\n        width = item.offsetWidth;\n\n        if (item.getBoundingClientRect) {\n          var clientRect = getBoundingRect(item);\n\n          if (clientRect.width > width - 1) {\n            width = clientRect.width;\n          }\n        }\n\n        result.push(width);\n      });\n    }\n\n    return result;\n  },\n  getColumnWidths: function ($tableElement) {\n    var result = [];\n    var $rows;\n    var $cells;\n    (this.option(\"forceApplyBindings\") || noop)();\n    $tableElement = $tableElement || this.getTableElement();\n\n    if ($tableElement) {\n      $rows = $tableElement.children(\"tbody:not(.dx-header)\").children();\n\n      for (var i = 0; i < $rows.length; i++) {\n        var $row = $rows.eq(i);\n        var isRowVisible = \"none\" !== $row.get(0).style.display && !$row.hasClass(\"dx-state-invisible\");\n\n        if (!$row.is(\".\" + GROUP_ROW_CLASS) && !$row.is(\".\" + DETAIL_ROW_CLASS) && isRowVisible) {\n          $cells = $row.children(\"td\");\n          break;\n        }\n      }\n\n      result = this._getWidths($cells);\n    }\n\n    return result;\n  },\n  getVisibleColumnIndex: function (columnIndex, rowIndex) {\n    return columnIndex;\n  },\n  setColumnWidths: function (_ref) {\n    var {\n      widths: widths,\n      $tableElement: $tableElement,\n      columns: columns,\n      fixed: fixed\n    } = _ref;\n    var $cols;\n    var width;\n    var minWidth;\n    var columnIndex;\n    var columnAutoWidth = this.option(\"columnAutoWidth\");\n    $tableElement = $tableElement || this.getTableElement();\n\n    if ($tableElement && $tableElement.length && widths) {\n      columnIndex = 0;\n      $cols = $tableElement.children(\"colgroup\").children(\"col\");\n      setWidth($cols, \"auto\");\n      columns = columns || this.getColumns(null, $tableElement);\n\n      for (var i = 0; i < columns.length; i++) {\n        if (columnAutoWidth && !fixed) {\n          width = columns[i].width;\n\n          if (width && !columns[i].command) {\n            width = columns[i].visibleWidth || width;\n            width = getWidthStyle(width);\n            minWidth = getWidthStyle(columns[i].minWidth || width);\n            var $rows = $rows || $tableElement.children().children(\".dx-row\").not(\".\" + GROUP_ROW_CLASS).not(\".\" + DETAIL_ROW_CLASS);\n\n            for (var rowIndex = 0; rowIndex < $rows.length; rowIndex++) {\n              var visibleIndex = this.getVisibleColumnIndex(i, rowIndex);\n              var cell = $rows[rowIndex].cells[visibleIndex];\n\n              if (cell) {\n                setCellWidth(cell, columns[i], width);\n                cell.style.minWidth = minWidth;\n              }\n            }\n          }\n        }\n\n        if (columns[i].colspan) {\n          columnIndex += columns[i].colspan;\n          continue;\n        }\n\n        width = widths[columnIndex];\n\n        if (\"adaptiveHidden\" === width) {\n          width = HIDDEN_COLUMNS_WIDTH;\n        }\n\n        if (\"number\" === typeof width) {\n          width = width.toFixed(3) + \"px\";\n        }\n\n        setWidth($cols.eq(columnIndex), isDefined(width) ? width : \"auto\");\n        columnIndex++;\n      }\n    }\n  },\n  getCellElements: function (rowIndex) {\n    return this._getCellElementsCore(rowIndex);\n  },\n  _getCellElementsCore: function (rowIndex) {\n    var $row = this._getRowElements().eq(rowIndex);\n\n    return $row.children();\n  },\n  _getCellElement: function (rowIndex, columnIdentifier) {\n    var $cell;\n    var $cells = this.getCellElements(rowIndex);\n\n    var columnVisibleIndex = this._getVisibleColumnIndex($cells, rowIndex, columnIdentifier);\n\n    if ($cells.length && columnVisibleIndex >= 0) {\n      $cell = $cells.eq(columnVisibleIndex);\n    }\n\n    if ($cell && $cell.length) {\n      return $cell;\n    }\n  },\n  _getRowElement: function (rowIndex) {\n    var that = this;\n    var $rowElement = $();\n    var $tableElements = that.getTableElements();\n    iteratorUtils.each($tableElements, function (_, tableElement) {\n      $rowElement = $rowElement.add(that._getRowElements($(tableElement)).eq(rowIndex));\n    });\n\n    if ($rowElement.length) {\n      return $rowElement;\n    }\n  },\n  getCellElement: function (rowIndex, columnIdentifier) {\n    return getPublicElement(this._getCellElement(rowIndex, columnIdentifier));\n  },\n  getRowElement: function (rowIndex) {\n    var $rows = this._getRowElement(rowIndex);\n\n    var elements = [];\n\n    if ($rows && !getPublicElement($rows).get) {\n      for (var i = 0; i < $rows.length; i++) {\n        elements.push($rows[i]);\n      }\n    } else {\n      elements = $rows;\n    }\n\n    return elements;\n  },\n  _getVisibleColumnIndex: function ($cells, rowIndex, columnIdentifier) {\n    if (isString(columnIdentifier)) {\n      var columnIndex = this._columnsController.columnOption(columnIdentifier, \"index\");\n\n      return this._columnsController.getVisibleIndex(columnIndex);\n    }\n\n    return columnIdentifier;\n  },\n  getColumnElements: function () {},\n  getColumns: function (rowIndex) {\n    return this._columnsController.getVisibleColumns(rowIndex);\n  },\n  getCell: function (cellPosition, rows) {\n    var $rows = rows || this._getRowElements();\n\n    var $cells;\n\n    if ($rows.length > 0 && cellPosition.rowIndex >= 0) {\n      if (\"virtual\" !== this.option(\"scrolling.mode\")) {\n        cellPosition.rowIndex = cellPosition.rowIndex < $rows.length ? cellPosition.rowIndex : $rows.length - 1;\n      }\n\n      $cells = this.getCellElements(cellPosition.rowIndex);\n\n      if ($cells && $cells.length > 0) {\n        return $cells.eq($cells.length > cellPosition.columnIndex ? cellPosition.columnIndex : $cells.length - 1);\n      }\n    }\n  },\n  getRowsCount: function () {\n    var tableElement = this.getTableElement();\n\n    if (tableElement && 1 === tableElement.length) {\n      return tableElement[0].rows.length;\n    }\n\n    return 0;\n  },\n  _getRowElementsCore: function (tableElement) {\n    tableElement = tableElement || this.getTableElement();\n\n    if (tableElement) {\n      var tBodies = this.option(\"rowTemplate\") && tableElement.find(\"> tbody.\" + ROW_CLASS);\n      return tBodies && tBodies.length ? tBodies : tableElement.find(\"> tbody > .\" + ROW_CLASS + \", > .\" + ROW_CLASS);\n    }\n\n    return $();\n  },\n  _getRowElements: function (tableElement) {\n    return this._getRowElementsCore(tableElement);\n  },\n  getRowIndex: function ($row) {\n    return this._getRowElements().index($row);\n  },\n  getBoundingRect: function () {},\n  getName: function () {},\n  setScrollerSpacing: function (width) {\n    var $element = this.element();\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    $element && $element.css({\n      paddingLeft: rtlEnabled ? width : \"\",\n      paddingRight: !rtlEnabled ? width : \"\"\n    });\n  },\n  isScrollbarVisible: function (isHorizontal) {\n    var $element = this.element();\n    var $tableElement = this._tableElement;\n\n    if ($element && $tableElement) {\n      return isHorizontal ? $tableElement.outerWidth() - $element.width() > 0 : $tableElement.outerHeight() - $element.height() > 0;\n    }\n\n    return false;\n  }\n});","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_view.js"],"names":["$","domAdapter","getWindow","eventsEngine","data","elementData","pointerEvents","name","clickEventName","dblclickEvent","browser","noop","setWidth","getPublicElement","isRenderer","isFunction","isString","isDefined","isNumeric","getBoundingRect","getDefaultAlignment","iteratorUtils","extend","modules","gridCoreUtils","columnStateMixin","when","Deferred","nativeScrolling","SCROLL_CONTAINER_CLASS","SCROLLABLE_SIMULATED_CLASS","GROUP_SPACE_CLASS","CONTENT_CLASS","TABLE_CLASS","TABLE_FIXED_CLASS","CONTENT_FIXED_CLASS","ROW_CLASS","GROUP_ROW_CLASS","DETAIL_ROW_CLASS","FILTER_ROW_CLASS","CELL_UPDATED_ANIMATION_CLASS","HIDDEN_COLUMNS_WIDTH","CELL_HINT_VISIBLE","FORM_FIELD_ITEM_CONTENT_CLASS","appendElementTemplate","render","options","container","append","content","subscribeToRowEvents","that","$table","touchTarget","touchCurrentTarget","timeoutId","clearTouchTargets","timeout","setTimeout","on","e","clearTimeout","type","target","currentTarget","down","join","useNative","_isNativeClick","createAction","event","closest","length","rowIndex","getRowIndex","rowElement","columns","getColumns","_rowPointerDown","_rowClick","_rowDblClick","getWidthStyle","width","setCellWidth","cell","column","style","maxWidth","copyAttributes","element","newElement","oldAttributes","attributes","newAttributes","i","nodeName","hasAttribute","removeAttribute","setAttribute","nodeValue","ColumnsView","View","inherit","_createScrollableOptions","scrollingOptions","option","useNativeScrolling","direction","bounceEnabled","useKeyboard","useSimulatedScrollbar","_updateCell","$cell","parameters","rowType","_cellPrepared","_createCell","alignment","createElement","textAlign","headerId","component","setAria","cssClass","addClass","command","addWidgetPrefix","colspan","attr","isBand","visibleWidth","minWidth","_createRow","rowObject","$element","_isAltRow","row","dataIndex","_createTable","isAppend","_createColGroup","safari","appendTo","mozilla","ctrlKey","preventDefault","args","$row","parent","isDataRow","hasClass","isHeaderRow","isGroupRow","isMasterDetailRow","isFilterRow","visibleColumns","_columnsController","getVisibleColumns","rowOptions","columnIndex","index","cellOptions","cells","msieCorrection","msie","cellTemplate","headerCellTemplate","groupIndex","groupCellTemplate","removeAttr","difference","scrollWidth","clientWidth","text","getOptions","$fieldItemContent","is","delegateTarget","resultOptions","cellElement","eventType","formItemOptions","getVisibleIndex","executeAction","colgroupElement","j","_createCol","col","renderDelayedTemplates","delayedTemplates","_delayedTemplates","syncTemplates","filter","template","async","asyncTemplates","_renderDelayedTemplatesCore","_renderDelayedTemplatesCoreAsync","templates","isAsync","date","Date","templateParameters","shift","doc","getDocument","_processTemplate","renderingTemplate","allowRenderToDetachedContainer","model","deferred","resolve","renderedTemplate","nodeType","templateID","getTemplate","_templatesCache","renderTemplate","templateDeferred","templateOptions","onRendered","renderAsync","showEditorAlways","push","reject","promise","_getBodies","tableElement","children","not","_wrapRowIfNeed","$tBodies","_tableElement","$tbody","_appendRow","appendTemplate","_resizeCore","scrollLeft","_scrollLeft","scrollTo","left","_renderCore","$root","_renderTable","changeType","change","_renderRows","rows","_getRows","columnIndices","changeTypes","_renderRow","$wrappedRow","_renderCells","_addWatchMethod","_rowPrepared","_needRenderCell","indexOf","_renderCell","value","values","oldValue","oldValues","_updateCells","$rowElement","$newRowElement","$cells","$newCells","highlightChanges","cellUpdatedClass","forEach","eq","$newCell","replaceWith","get","_setCellAriaAttributes","columnIndexOffset","getColumnIndexOffset","ariaColIndex","_getCellOptions","_renderCellContent","appendChild","_getCellTemplate","done","isAltRow","source","watchers","watch","getter","updateFunc","watcher","newValue","JSON","stringify","splice","update","isExpanded","bind","_columnOptionChanged","optionNames","checkChanges","widths","map","setColumnWidths","_requireReady","getCellIndex","cellIndex","getTableElements","getTableElement","setTableElement","optionChanged","callBase","_invalidate","handled","init","getController","_dataController","excludeValidators","category","afterExecute","_afterRowPrepared","columnsChanged","add","changed","_handleDataChanged","callbackNames","_updateScrollLeftPosition","pos","$scrollContainer","_wrapTableInScrollContainer","scrollChanged","fire","_updateContent","$newTableElement","_findContentElement","_getWidths","$cellElements","result","each","item","offsetWidth","getBoundingClientRect","clientRect","getColumnWidths","$tableElement","$rows","isRowVisible","display","getVisibleColumnIndex","_ref","fixed","$cols","columnAutoWidth","visibleIndex","toFixed","getCellElements","_getCellElementsCore","_getRowElements","_getCellElement","columnIdentifier","columnVisibleIndex","_getVisibleColumnIndex","_getRowElement","$tableElements","_","getCellElement","getRowElement","elements","columnOption","getColumnElements","getCell","cellPosition","getRowsCount","_getRowElementsCore","tBodies","find","getName","setScrollerSpacing","rtlEnabled","css","paddingLeft","paddingRight","isScrollbarVisible","isHorizontal","outerWidth","outerHeight","height"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_view.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    data as elementData\r\n} from \"../../core/element_data\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    name as dblclickEvent\r\n} from \"../../events/double_click\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    setWidth\r\n} from \"../../core/utils/style\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    isRenderer,\r\n    isFunction,\r\n    isString,\r\n    isDefined,\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getBoundingRect,\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport * as iteratorUtils from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport columnStateMixin from \"./ui.grid_core.column_state_mixin\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    nativeScrolling\r\n} from \"../../core/utils/support\";\r\nvar SCROLL_CONTAINER_CLASS = \"scroll-container\";\r\nvar SCROLLABLE_SIMULATED_CLASS = \"scrollable-simulated\";\r\nvar GROUP_SPACE_CLASS = \"group-space\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar TABLE_CLASS = \"table\";\r\nvar TABLE_FIXED_CLASS = \"table-fixed\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar CELL_UPDATED_ANIMATION_CLASS = \"cell-updated-animation\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"0.0001px\";\r\nvar CELL_HINT_VISIBLE = \"dxCellHintVisible\";\r\nvar FORM_FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nvar appendElementTemplate = {\r\n    render: function(options) {\r\n        options.container.append(options.content)\r\n    }\r\n};\r\nvar subscribeToRowEvents = function(that, $table) {\r\n    var touchTarget;\r\n    var touchCurrentTarget;\r\n    var timeoutId;\r\n\r\n    function clearTouchTargets(timeout) {\r\n        return setTimeout((function() {\r\n            touchTarget = touchCurrentTarget = null\r\n        }), timeout)\r\n    }\r\n    eventsEngine.on($table, \"touchstart touchend\", \".dx-row\", (function(e) {\r\n        clearTimeout(timeoutId);\r\n        if (\"touchstart\" === e.type) {\r\n            touchTarget = e.target;\r\n            touchCurrentTarget = e.currentTarget;\r\n            timeoutId = clearTouchTargets(1e3)\r\n        } else {\r\n            timeoutId = clearTouchTargets()\r\n        }\r\n    }));\r\n    eventsEngine.on($table, [clickEventName, dblclickEvent, pointerEvents.down].join(\" \"), \".dx-row\", {\r\n        useNative: that._isNativeClick()\r\n    }, that.createAction((function(e) {\r\n        var event = e.event;\r\n        if (touchTarget) {\r\n            event.target = touchTarget;\r\n            event.currentTarget = touchCurrentTarget\r\n        }\r\n        if (!$(event.target).closest(\"a\").length) {\r\n            e.rowIndex = that.getRowIndex(event.currentTarget);\r\n            if (e.rowIndex >= 0) {\r\n                e.rowElement = getPublicElement($(event.currentTarget));\r\n                e.columns = that.getColumns();\r\n                if (event.type === pointerEvents.down) {\r\n                    that._rowPointerDown(e)\r\n                } else if (event.type === clickEventName) {\r\n                    that._rowClick(e)\r\n                } else {\r\n                    that._rowDblClick(e)\r\n                }\r\n            }\r\n        }\r\n    })))\r\n};\r\nvar getWidthStyle = function(width) {\r\n    if (\"auto\" === width) {\r\n        return \"\"\r\n    }\r\n    return isNumeric(width) ? width + \"px\" : width\r\n};\r\nvar setCellWidth = function(cell, column, width) {\r\n    cell.style.width = cell.style.maxWidth = \"auto\" === column.width ? \"\" : width\r\n};\r\nvar copyAttributes = function(element, newElement) {\r\n    if (!element || !newElement) {\r\n        return\r\n    }\r\n    var oldAttributes = element.attributes;\r\n    var newAttributes = newElement.attributes;\r\n    var i;\r\n    for (i = 0; i < oldAttributes.length; i++) {\r\n        var name = oldAttributes[i].nodeName;\r\n        if (!newElement.hasAttribute(name)) {\r\n            element.removeAttribute(name)\r\n        }\r\n    }\r\n    for (i = 0; i < newAttributes.length; i++) {\r\n        element.setAttribute(newAttributes[i].nodeName, newAttributes[i].nodeValue)\r\n    }\r\n};\r\nexport var ColumnsView = modules.View.inherit(columnStateMixin).inherit({\r\n    _createScrollableOptions: function() {\r\n        var scrollingOptions = this.option(\"scrolling\");\r\n        var useNativeScrolling = this.option(\"scrolling.useNative\");\r\n        var options = extend({}, scrollingOptions, {\r\n            direction: \"both\",\r\n            bounceEnabled: false,\r\n            useKeyboard: false\r\n        });\r\n        if (void 0 === useNativeScrolling) {\r\n            useNativeScrolling = true\r\n        }\r\n        if (\"auto\" === useNativeScrolling) {\r\n            delete options.useNative;\r\n            delete options.useSimulatedScrollbar\r\n        } else {\r\n            options.useNative = !!useNativeScrolling;\r\n            options.useSimulatedScrollbar = !useNativeScrolling\r\n        }\r\n        return options\r\n    },\r\n    _updateCell: function($cell, parameters) {\r\n        if (parameters.rowType) {\r\n            this._cellPrepared($cell, parameters)\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var column = options.column;\r\n        var alignment = column.alignment || getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n        var cell = domAdapter.createElement(\"td\");\r\n        cell.style.textAlign = alignment;\r\n        var $cell = $(cell);\r\n        if (\"data\" === options.rowType && column.headerId && !column.type) {\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                this.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n        }\r\n        if (column.cssClass) {\r\n            $cell.addClass(column.cssClass)\r\n        }\r\n        if (\"expand\" === column.command) {\r\n            $cell.addClass(column.cssClass);\r\n            $cell.addClass(this.addWidgetPrefix(GROUP_SPACE_CLASS))\r\n        }\r\n        if (column.colspan > 1) {\r\n            $cell.attr(\"colSpan\", column.colspan)\r\n        } else if (!column.isBand && \"auto\" !== column.visibleWidth && this.option(\"columnAutoWidth\")) {\r\n            if (column.width || column.minWidth) {\r\n                cell.style.minWidth = getWidthStyle(column.minWidth || column.width)\r\n            }\r\n            if (column.width) {\r\n                setCellWidth(cell, column, getWidthStyle(column.width))\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _createRow: function(rowObject) {\r\n        var $element = $(\"<tr>\").addClass(ROW_CLASS);\r\n        this.setAria(\"role\", \"row\", $element);\r\n        return $element\r\n    },\r\n    _isAltRow: function(row) {\r\n        return row && row.dataIndex % 2 === 1\r\n    },\r\n    _createTable: function(columns, isAppend) {\r\n        var that = this;\r\n        var $table = $(\"<table>\").addClass(that.addWidgetPrefix(TABLE_CLASS)).addClass(that.addWidgetPrefix(TABLE_FIXED_CLASS));\r\n        if (columns && !isAppend) {\r\n            $table.append(that._createColGroup(columns));\r\n            if (browser.safari) {\r\n                $table.append($(\"<thead>\").append(\"<tr>\"))\r\n            }\r\n            that.setAria(\"role\", \"presentation\", $table)\r\n        } else {\r\n            that.setAria(\"hidden\", true, $table)\r\n        }\r\n        this.setAria(\"role\", \"presentation\", $(\"<tbody>\").appendTo($table));\r\n        if (isAppend) {\r\n            return $table\r\n        }\r\n        if (browser.mozilla) {\r\n            eventsEngine.on($table, \"mousedown\", \"td\", (function(e) {\r\n                if (e.ctrlKey) {\r\n                    e.preventDefault()\r\n                }\r\n            }))\r\n        }\r\n        if (that.option(\"cellHintEnabled\")) {\r\n            eventsEngine.on($table, \"mousemove\", \".dx-row > td\", this.createAction((function(args) {\r\n                var e = args.event;\r\n                var $element = $(e.target);\r\n                var $cell = $(e.currentTarget);\r\n                var $row = $cell.parent();\r\n                var isDataRow = $row.hasClass(\"dx-data-row\");\r\n                var isHeaderRow = $row.hasClass(\"dx-header-row\");\r\n                var isGroupRow = $row.hasClass(GROUP_ROW_CLASS);\r\n                var isMasterDetailRow = $row.hasClass(DETAIL_ROW_CLASS);\r\n                var isFilterRow = $row.hasClass(that.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                var visibleColumns = that._columnsController.getVisibleColumns();\r\n                var rowOptions = $row.data(\"options\");\r\n                var columnIndex = $cell.index();\r\n                var cellOptions = rowOptions && rowOptions.cells && rowOptions.cells[columnIndex];\r\n                var column = cellOptions ? cellOptions.column : visibleColumns[columnIndex];\r\n                var msieCorrection = browser.msie ? 1 : 0;\r\n                if (!isMasterDetailRow && !isFilterRow && (!isDataRow || isDataRow && column && !column.cellTemplate) && (!isHeaderRow || isHeaderRow && column && !column.headerCellTemplate) && (!isGroupRow || isGroupRow && column && (void 0 === column.groupIndex || !column.groupCellTemplate))) {\r\n                    if ($element.data(CELL_HINT_VISIBLE)) {\r\n                        $element.removeAttr(\"title\");\r\n                        $element.data(CELL_HINT_VISIBLE, false)\r\n                    }\r\n                    var difference = $element[0].scrollWidth - $element[0].clientWidth - msieCorrection;\r\n                    if (difference > 0 && !isDefined($element.attr(\"title\"))) {\r\n                        $element.attr(\"title\", $element.text());\r\n                        $element.data(CELL_HINT_VISIBLE, true)\r\n                    }\r\n                }\r\n            })))\r\n        }\r\n        var getOptions = function(event) {\r\n            var $cell = $(event.currentTarget);\r\n            var $fieldItemContent = $(event.target).closest(\".\" + FORM_FIELD_ITEM_CONTENT_CLASS);\r\n            var rowOptions = $cell.parent().data(\"options\");\r\n            var options = rowOptions && rowOptions.cells && rowOptions.cells[$cell.index()];\r\n            if (!$cell.closest(\"table\").is(event.delegateTarget)) {\r\n                return\r\n            }\r\n            var resultOptions = extend({}, options, {\r\n                cellElement: getPublicElement($cell),\r\n                event: event,\r\n                eventType: event.type\r\n            });\r\n            if ($fieldItemContent.length) {\r\n                var formItemOptions = $fieldItemContent.data(\"dx-form-item\");\r\n                if (formItemOptions.column) {\r\n                    resultOptions.column = formItemOptions.column;\r\n                    resultOptions.columnIndex = that._columnsController.getVisibleIndex(resultOptions.column.index)\r\n                }\r\n            }\r\n            return resultOptions\r\n        };\r\n        eventsEngine.on($table, \"mouseover\", \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, \"mouseout\", \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, clickEventName, \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellClick\", options)\r\n        }));\r\n        eventsEngine.on($table, dblclickEvent, \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellDblClick\", options)\r\n        }));\r\n        subscribeToRowEvents(that, $table);\r\n        return $table\r\n    },\r\n    _isNativeClick: noop,\r\n    _rowPointerDown: noop,\r\n    _rowClick: noop,\r\n    _rowDblClick: noop,\r\n    _createColGroup: function(columns) {\r\n        var colgroupElement = $(\"<colgroup>\");\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var colspan = columns[i].colspan || 1;\r\n            for (var j = 0; j < colspan; j++) {\r\n                colgroupElement.append(this._createCol(columns[i]))\r\n            }\r\n        }\r\n        return colgroupElement\r\n    },\r\n    _createCol: function(column) {\r\n        var width = column.visibleWidth || column.width;\r\n        if (\"adaptiveHidden\" === width) {\r\n            width = HIDDEN_COLUMNS_WIDTH\r\n        }\r\n        var col = $(\"<col>\");\r\n        setWidth(col, width);\r\n        return col\r\n    },\r\n    renderDelayedTemplates: function() {\r\n        var delayedTemplates = this._delayedTemplates;\r\n        var syncTemplates = delayedTemplates.filter(template => !template.async);\r\n        var asyncTemplates = delayedTemplates.filter(template => template.async);\r\n        this._delayedTemplates = [];\r\n        this._renderDelayedTemplatesCore(syncTemplates);\r\n        this._renderDelayedTemplatesCoreAsync(asyncTemplates)\r\n    },\r\n    _renderDelayedTemplatesCoreAsync: function(templates) {\r\n        var that = this;\r\n        if (templates.length) {\r\n            getWindow().setTimeout((function() {\r\n                that._renderDelayedTemplatesCore(templates, true)\r\n            }))\r\n        }\r\n    },\r\n    _renderDelayedTemplatesCore: function(templates, isAsync) {\r\n        var date = new Date;\r\n        while (templates.length) {\r\n            var templateParameters = templates.shift();\r\n            var options = templateParameters.options;\r\n            var doc = domAdapter.getDocument();\r\n            if (!isAsync || $(options.container).closest(doc).length) {\r\n                templateParameters.template.render(options)\r\n            }\r\n            if (isAsync && new Date - date > 30) {\r\n                this._renderDelayedTemplatesCoreAsync(templates);\r\n                break\r\n            }\r\n        }\r\n        if (!templates.length && this._delayedTemplates.length) {\r\n            this.renderDelayedTemplates()\r\n        }\r\n    },\r\n    _processTemplate: function(template) {\r\n        var renderingTemplate;\r\n        if (template && template.render && !isRenderer(template)) {\r\n            renderingTemplate = {\r\n                allowRenderToDetachedContainer: template.allowRenderToDetachedContainer,\r\n                render: function(options) {\r\n                    template.render(options.container, options.model);\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else if (isFunction(template)) {\r\n            renderingTemplate = {\r\n                render: function(options) {\r\n                    var renderedTemplate = template(getPublicElement(options.container), options.model);\r\n                    if (renderedTemplate && (renderedTemplate.nodeType || isRenderer(renderedTemplate))) {\r\n                        options.container.append(renderedTemplate)\r\n                    }\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else {\r\n            var templateID = isString(template) ? template : $(template).attr(\"id\");\r\n            if (!templateID) {\r\n                renderingTemplate = this.getTemplate(template)\r\n            } else {\r\n                if (!this._templatesCache[templateID]) {\r\n                    this._templatesCache[templateID] = this.getTemplate(template)\r\n                }\r\n                renderingTemplate = this._templatesCache[templateID]\r\n            }\r\n        }\r\n        return renderingTemplate\r\n    },\r\n    renderTemplate: function(container, template, options, allowRenderToDetachedContainer) {\r\n        var renderingTemplate = this._processTemplate(template, options);\r\n        var column = options.column;\r\n        var isDataRow = \"data\" === options.rowType;\r\n        var templateDeferred = new Deferred;\r\n        var templateOptions = {\r\n            container: container,\r\n            model: options,\r\n            deferred: templateDeferred,\r\n            onRendered: () => {\r\n                templateDeferred.resolve()\r\n            }\r\n        };\r\n        if (renderingTemplate) {\r\n            options.component = this.component;\r\n            var async = column && (column.renderAsync && isDataRow || this.option(\"renderAsync\") && (false !== column.renderAsync && (column.command || column.showEditorAlways) && isDataRow || \"filter\" === options.rowType));\r\n            if ((renderingTemplate.allowRenderToDetachedContainer || allowRenderToDetachedContainer) && !async) {\r\n                renderingTemplate.render(templateOptions)\r\n            } else {\r\n                this._delayedTemplates.push({\r\n                    template: renderingTemplate,\r\n                    options: templateOptions,\r\n                    async: async\r\n                })\r\n            }\r\n        } else {\r\n            templateDeferred.reject()\r\n        }\r\n        return templateDeferred.promise()\r\n    },\r\n    _getBodies: function(tableElement) {\r\n        return $(tableElement).children(\"tbody\").not(\".dx-header\").not(\".dx-footer\")\r\n    },\r\n    _wrapRowIfNeed: function($table, $row) {\r\n        var $tBodies = this.option(\"rowTemplate\") && this._getBodies(this._tableElement || $table);\r\n        if ($tBodies && $tBodies.filter(\".\" + ROW_CLASS).length) {\r\n            var $tbody = $(\"<tbody>\").addClass($row.attr(\"class\"));\r\n            this.setAria(\"role\", \"presentation\", $tbody);\r\n            return $tbody.append($row)\r\n        }\r\n        return $row\r\n    },\r\n    _appendRow: function($table, $row, appendTemplate) {\r\n        appendTemplate = appendTemplate || appendElementTemplate;\r\n        appendTemplate.render({\r\n            content: $row,\r\n            container: $table\r\n        })\r\n    },\r\n    _resizeCore: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    _renderCore: function(e) {\r\n        var $root = this.element().parent();\r\n        if (!$root || $root.parent().length) {\r\n            this.renderDelayedTemplates(e)\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        options = options || {};\r\n        options.columns = this._columnsController.getVisibleColumns();\r\n        var changeType = options.change && options.change.changeType;\r\n        var $table = this._createTable(options.columns, \"append\" === changeType || \"prepend\" === changeType || \"update\" === changeType);\r\n        this._renderRows($table, options);\r\n        return $table\r\n    },\r\n    _renderRows: function($table, options) {\r\n        var rows = this._getRows(options.change);\r\n        var columnIndices = options.change && options.change.columnIndices || [];\r\n        var changeTypes = options.change && options.change.changeTypes || [];\r\n        for (var i = 0; i < rows.length; i++) {\r\n            this._renderRow($table, extend({\r\n                row: rows[i],\r\n                columnIndices: columnIndices[i],\r\n                changeType: changeTypes[i]\r\n            }, options))\r\n        }\r\n    },\r\n    _renderRow: function($table, options) {\r\n        if (!options.columnIndices) {\r\n            options.row.cells = []\r\n        }\r\n        var $row = this._createRow(options.row);\r\n        var $wrappedRow = this._wrapRowIfNeed($table, $row);\r\n        if (\"remove\" !== options.changeType) {\r\n            this._renderCells($row, options)\r\n        }\r\n        this._appendRow($table, $wrappedRow);\r\n        var rowOptions = extend({\r\n            columns: options.columns\r\n        }, options.row);\r\n        this._addWatchMethod(rowOptions, options.row);\r\n        this._rowPrepared($wrappedRow, rowOptions, options.row)\r\n    },\r\n    _needRenderCell: function(columnIndex, columnIndices) {\r\n        return !columnIndices || columnIndices.indexOf(columnIndex) >= 0\r\n    },\r\n    _renderCells: function($row, options) {\r\n        var columnIndex = 0;\r\n        var row = options.row;\r\n        var columns = options.columns;\r\n        for (var i = 0; i < columns.length; i++) {\r\n            if (this._needRenderCell(i, options.columnIndices)) {\r\n                this._renderCell($row, extend({\r\n                    column: columns[i],\r\n                    columnIndex: columnIndex,\r\n                    value: row.values && row.values[columnIndex],\r\n                    oldValue: row.oldValues && row.oldValues[columnIndex]\r\n                }, options))\r\n            }\r\n            if (columns[i].colspan > 1) {\r\n                columnIndex += columns[i].colspan\r\n            } else {\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    _updateCells: function($rowElement, $newRowElement, columnIndices) {\r\n        var $cells = $rowElement.children();\r\n        var $newCells = $newRowElement.children();\r\n        var highlightChanges = this.option(\"highlightChanges\");\r\n        var cellUpdatedClass = this.addWidgetPrefix(CELL_UPDATED_ANIMATION_CLASS);\r\n        columnIndices.forEach((function(columnIndex, index) {\r\n            var $cell = $cells.eq(columnIndex);\r\n            var $newCell = $newCells.eq(index);\r\n            $cell.replaceWith($newCell);\r\n            if (highlightChanges && !$newCell.hasClass(\"dx-command-expand\")) {\r\n                $newCell.addClass(cellUpdatedClass)\r\n            }\r\n        }));\r\n        copyAttributes($rowElement.get(0), $newRowElement.get(0))\r\n    },\r\n    _setCellAriaAttributes: function($cell, cellOptions) {\r\n        if (\"freeSpace\" !== cellOptions.rowType) {\r\n            this.setAria(\"selected\", false, $cell);\r\n            this.setAria(\"role\", \"gridcell\", $cell);\r\n            var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n            var ariaColIndex = cellOptions.columnIndex + columnIndexOffset + 1;\r\n            this.setAria(\"colindex\", ariaColIndex, $cell)\r\n        }\r\n    },\r\n    _renderCell: function($row, options) {\r\n        var cellOptions = this._getCellOptions(options);\r\n        if (options.columnIndices) {\r\n            if (options.row.cells) {\r\n                options.row.cells[cellOptions.columnIndex] = cellOptions\r\n            }\r\n        } else {\r\n            options.row.cells.push(cellOptions)\r\n        }\r\n        var $cell = this._createCell(cellOptions);\r\n        this._setCellAriaAttributes($cell, cellOptions);\r\n        this._renderCellContent($cell, cellOptions);\r\n        $row.get(0).appendChild($cell.get(0));\r\n        return $cell\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        var template = this._getCellTemplate(options);\r\n        when(!template || this.renderTemplate($cell, template, options)).done(() => {\r\n            this._updateCell($cell, options)\r\n        })\r\n    },\r\n    _getCellTemplate: function() {},\r\n    _getRows: function() {\r\n        return []\r\n    },\r\n    _getCellOptions: function(options) {\r\n        var cellOptions = {\r\n            column: options.column,\r\n            columnIndex: options.columnIndex,\r\n            rowType: options.row.rowType,\r\n            isAltRow: this._isAltRow(options.row)\r\n        };\r\n        this._addWatchMethod(cellOptions);\r\n        return cellOptions\r\n    },\r\n    _addWatchMethod: function(options, source) {\r\n        if (!this.option(\"repaintChangesOnly\")) {\r\n            return\r\n        }\r\n        var watchers = [];\r\n        source = source || options;\r\n        source.watch = source.watch || function(getter, updateFunc) {\r\n            var oldValue = getter(source.data);\r\n            var watcher = function(row) {\r\n                var newValue = getter(source.data);\r\n                if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\r\n                    if (row) {\r\n                        updateFunc(newValue, row)\r\n                    }\r\n                    oldValue = newValue\r\n                }\r\n            };\r\n            watchers.push(watcher);\r\n            return function() {\r\n                var index = watchers.indexOf(watcher);\r\n                if (index >= 0) {\r\n                    watchers.splice(index, 1)\r\n                }\r\n            }\r\n        };\r\n        source.update = source.update || function(row) {\r\n            if (row) {\r\n                this.data = options.data = row.data;\r\n                this.rowIndex = options.rowIndex = row.rowIndex;\r\n                this.dataIndex = options.dataIndex = row.dataIndex;\r\n                this.isExpanded = options.isExpanded = row.isExpanded;\r\n                if (options.row) {\r\n                    options.row = row\r\n                }\r\n            }\r\n            watchers.forEach((function(watcher) {\r\n                watcher(row)\r\n            }))\r\n        };\r\n        if (source !== options) {\r\n            options.watch = source.watch.bind(source)\r\n        }\r\n        return options\r\n    },\r\n    _cellPrepared: function(cell, options) {\r\n        options.cellElement = getPublicElement($(cell));\r\n        this.executeAction(\"onCellPrepared\", options)\r\n    },\r\n    _rowPrepared: function($row, options) {\r\n        elementData($row.get(0), \"options\", options);\r\n        options.rowElement = getPublicElement($row);\r\n        this.executeAction(\"onRowPrepared\", options)\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\"])) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var widths = iteratorUtils.map(visibleColumns, (function(column) {\r\n                var width = column.visibleWidth || column.width;\r\n                return isDefined(width) ? width : \"auto\"\r\n            }));\r\n            this.setColumnWidths({\r\n                widths: widths,\r\n                optionNames: optionNames\r\n            });\r\n            return\r\n        }\r\n        if (!this._requireReady) {\r\n            this.render()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var cellIndex = $cell.length ? $cell[0].cellIndex : -1;\r\n        return cellIndex\r\n    },\r\n    getTableElements: function() {\r\n        return this._tableElement || $()\r\n    },\r\n    getTableElement: function() {\r\n        return this._tableElement\r\n    },\r\n    setTableElement: function(tableElement) {\r\n        this._tableElement = tableElement\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        switch (args.name) {\r\n            case \"cellHintEnabled\":\r\n            case \"onCellPrepared\":\r\n            case \"onRowPrepared\":\r\n            case \"onCellHoverChanged\":\r\n                this._invalidate(true, true);\r\n                args.handled = true\r\n        }\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that._scrollLeft = -1;\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._dataController = that.getController(\"data\");\r\n        that._delayedTemplates = [];\r\n        that._templatesCache = {};\r\n        that.createAction(\"onCellClick\");\r\n        that.createAction(\"onRowClick\");\r\n        that.createAction(\"onCellDblClick\");\r\n        that.createAction(\"onRowDblClick\");\r\n        that.createAction(\"onCellHoverChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        that.createAction(\"onCellPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        that.createAction(\"onRowPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\",\r\n            afterExecute: function(e) {\r\n                that._afterRowPrepared(e)\r\n            }\r\n        });\r\n        that._columnsController.columnsChanged.add(that._columnOptionChanged.bind(that));\r\n        that._dataController && that._dataController.changed.add(that._handleDataChanged.bind(that))\r\n    },\r\n    _afterRowPrepared: noop,\r\n    _handleDataChanged: function() {},\r\n    callbackNames: function() {\r\n        return [\"scrollChanged\"]\r\n    },\r\n    _updateScrollLeftPosition: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    scrollTo: function(pos) {\r\n        var $element = this.element();\r\n        var $scrollContainer = $element && $element.children(\".\" + this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).not(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if (isDefined(pos) && isDefined(pos.left) && this._scrollLeft !== pos.left) {\r\n            this._scrollLeft = pos.left;\r\n            $scrollContainer && $scrollContainer.scrollLeft(pos.left)\r\n        }\r\n    },\r\n    _wrapTableInScrollContainer: function($table) {\r\n        var $scrollContainer = $(\"<div>\");\r\n        var useNative = this.option(\"scrolling.useNative\");\r\n        if (false === useNative || \"auto\" === useNative && !nativeScrolling) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(SCROLLABLE_SIMULATED_CLASS))\r\n        }\r\n        eventsEngine.on($scrollContainer, \"scroll\", () => {\r\n            var scrollLeft = $scrollContainer.scrollLeft();\r\n            if (scrollLeft !== this._scrollLeft) {\r\n                this.scrollChanged.fire({\r\n                    left: scrollLeft\r\n                }, this.name)\r\n            }\r\n        });\r\n        $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_CLASS)).addClass(this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).append($table).appendTo(this.element());\r\n        this.setAria(\"role\", \"presentation\", $scrollContainer);\r\n        return $scrollContainer\r\n    },\r\n    _updateContent: function($newTableElement) {\r\n        this.setTableElement($newTableElement);\r\n        this._wrapTableInScrollContainer($newTableElement)\r\n    },\r\n    _findContentElement: noop,\r\n    _getWidths: function($cellElements) {\r\n        var result = [];\r\n        var width;\r\n        if ($cellElements) {\r\n            iteratorUtils.each($cellElements, (function(index, item) {\r\n                width = item.offsetWidth;\r\n                if (item.getBoundingClientRect) {\r\n                    var clientRect = getBoundingRect(item);\r\n                    if (clientRect.width > width - 1) {\r\n                        width = clientRect.width\r\n                    }\r\n                }\r\n                result.push(width)\r\n            }))\r\n        }\r\n        return result\r\n    },\r\n    getColumnWidths: function($tableElement) {\r\n        var result = [];\r\n        var $rows;\r\n        var $cells;\r\n        (this.option(\"forceApplyBindings\") || noop)();\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if ($tableElement) {\r\n            $rows = $tableElement.children(\"tbody:not(.dx-header)\").children();\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                var $row = $rows.eq(i);\r\n                var isRowVisible = \"none\" !== $row.get(0).style.display && !$row.hasClass(\"dx-state-invisible\");\r\n                if (!$row.is(\".\" + GROUP_ROW_CLASS) && !$row.is(\".\" + DETAIL_ROW_CLASS) && isRowVisible) {\r\n                    $cells = $row.children(\"td\");\r\n                    break\r\n                }\r\n            }\r\n            result = this._getWidths($cells)\r\n        }\r\n        return result\r\n    },\r\n    getVisibleColumnIndex: function(columnIndex, rowIndex) {\r\n        return columnIndex\r\n    },\r\n    setColumnWidths: function(_ref) {\r\n        var {\r\n            widths: widths,\r\n            $tableElement: $tableElement,\r\n            columns: columns,\r\n            fixed: fixed\r\n        } = _ref;\r\n        var $cols;\r\n        var width;\r\n        var minWidth;\r\n        var columnIndex;\r\n        var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if ($tableElement && $tableElement.length && widths) {\r\n            columnIndex = 0;\r\n            $cols = $tableElement.children(\"colgroup\").children(\"col\");\r\n            setWidth($cols, \"auto\");\r\n            columns = columns || this.getColumns(null, $tableElement);\r\n            for (var i = 0; i < columns.length; i++) {\r\n                if (columnAutoWidth && !fixed) {\r\n                    width = columns[i].width;\r\n                    if (width && !columns[i].command) {\r\n                        width = columns[i].visibleWidth || width;\r\n                        width = getWidthStyle(width);\r\n                        minWidth = getWidthStyle(columns[i].minWidth || width);\r\n                        var $rows = $rows || $tableElement.children().children(\".dx-row\").not(\".\" + GROUP_ROW_CLASS).not(\".\" + DETAIL_ROW_CLASS);\r\n                        for (var rowIndex = 0; rowIndex < $rows.length; rowIndex++) {\r\n                            var visibleIndex = this.getVisibleColumnIndex(i, rowIndex);\r\n                            var cell = $rows[rowIndex].cells[visibleIndex];\r\n                            if (cell) {\r\n                                setCellWidth(cell, columns[i], width);\r\n                                cell.style.minWidth = minWidth\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (columns[i].colspan) {\r\n                    columnIndex += columns[i].colspan;\r\n                    continue\r\n                }\r\n                width = widths[columnIndex];\r\n                if (\"adaptiveHidden\" === width) {\r\n                    width = HIDDEN_COLUMNS_WIDTH\r\n                }\r\n                if (\"number\" === typeof width) {\r\n                    width = width.toFixed(3) + \"px\"\r\n                }\r\n                setWidth($cols.eq(columnIndex), isDefined(width) ? width : \"auto\");\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    getCellElements: function(rowIndex) {\r\n        return this._getCellElementsCore(rowIndex)\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var $row = this._getRowElements().eq(rowIndex);\r\n        return $row.children()\r\n    },\r\n    _getCellElement: function(rowIndex, columnIdentifier) {\r\n        var $cell;\r\n        var $cells = this.getCellElements(rowIndex);\r\n        var columnVisibleIndex = this._getVisibleColumnIndex($cells, rowIndex, columnIdentifier);\r\n        if ($cells.length && columnVisibleIndex >= 0) {\r\n            $cell = $cells.eq(columnVisibleIndex)\r\n        }\r\n        if ($cell && $cell.length) {\r\n            return $cell\r\n        }\r\n    },\r\n    _getRowElement: function(rowIndex) {\r\n        var that = this;\r\n        var $rowElement = $();\r\n        var $tableElements = that.getTableElements();\r\n        iteratorUtils.each($tableElements, (function(_, tableElement) {\r\n            $rowElement = $rowElement.add(that._getRowElements($(tableElement)).eq(rowIndex))\r\n        }));\r\n        if ($rowElement.length) {\r\n            return $rowElement\r\n        }\r\n    },\r\n    getCellElement: function(rowIndex, columnIdentifier) {\r\n        return getPublicElement(this._getCellElement(rowIndex, columnIdentifier))\r\n    },\r\n    getRowElement: function(rowIndex) {\r\n        var $rows = this._getRowElement(rowIndex);\r\n        var elements = [];\r\n        if ($rows && !getPublicElement($rows).get) {\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                elements.push($rows[i])\r\n            }\r\n        } else {\r\n            elements = $rows\r\n        }\r\n        return elements\r\n    },\r\n    _getVisibleColumnIndex: function($cells, rowIndex, columnIdentifier) {\r\n        if (isString(columnIdentifier)) {\r\n            var columnIndex = this._columnsController.columnOption(columnIdentifier, \"index\");\r\n            return this._columnsController.getVisibleIndex(columnIndex)\r\n        }\r\n        return columnIdentifier\r\n    },\r\n    getColumnElements: function() {},\r\n    getColumns: function(rowIndex) {\r\n        return this._columnsController.getVisibleColumns(rowIndex)\r\n    },\r\n    getCell: function(cellPosition, rows) {\r\n        var $rows = rows || this._getRowElements();\r\n        var $cells;\r\n        if ($rows.length > 0 && cellPosition.rowIndex >= 0) {\r\n            if (\"virtual\" !== this.option(\"scrolling.mode\")) {\r\n                cellPosition.rowIndex = cellPosition.rowIndex < $rows.length ? cellPosition.rowIndex : $rows.length - 1\r\n            }\r\n            $cells = this.getCellElements(cellPosition.rowIndex);\r\n            if ($cells && $cells.length > 0) {\r\n                return $cells.eq($cells.length > cellPosition.columnIndex ? cellPosition.columnIndex : $cells.length - 1)\r\n            }\r\n        }\r\n    },\r\n    getRowsCount: function() {\r\n        var tableElement = this.getTableElement();\r\n        if (tableElement && 1 === tableElement.length) {\r\n            return tableElement[0].rows.length\r\n        }\r\n        return 0\r\n    },\r\n    _getRowElementsCore: function(tableElement) {\r\n        tableElement = tableElement || this.getTableElement();\r\n        if (tableElement) {\r\n            var tBodies = this.option(\"rowTemplate\") && tableElement.find(\"> tbody.\" + ROW_CLASS);\r\n            return tBodies && tBodies.length ? tBodies : tableElement.find(\"> tbody > .\" + ROW_CLASS + \", > .\" + ROW_CLASS)\r\n        }\r\n        return $()\r\n    },\r\n    _getRowElements: function(tableElement) {\r\n        return this._getRowElementsCore(tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        return this._getRowElements().index($row)\r\n    },\r\n    getBoundingRect: function() {},\r\n    getName: function() {},\r\n    setScrollerSpacing: function(width) {\r\n        var $element = this.element();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        $element && $element.css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    },\r\n    isScrollbarVisible: function(isHorizontal) {\r\n        var $element = this.element();\r\n        var $tableElement = this._tableElement;\r\n        if ($element && $tableElement) {\r\n            return isHorizontal ? $tableElement.outerWidth() - $element.width() > 0 : $tableElement.outerHeight() - $element.height() > 0\r\n        }\r\n        return false\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}