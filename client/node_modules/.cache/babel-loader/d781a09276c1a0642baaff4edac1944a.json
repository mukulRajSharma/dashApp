{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { getWindow } from \"../../core/utils/window\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport browser from \"../../core/utils/browser\";\nimport positionUtils from \"../../animation/position\";\nimport { each } from \"../../core/utils/iterator\";\nimport Class from \"../../core/class\";\nimport { Deferred } from \"../../core/utils/deferred\";\nimport Callbacks from \"../../core/utils/callbacks\";\nimport { VirtualDataLoader } from \"./ui.grid.core.virtual_data_loader\";\nvar SCROLLING_MODE_INFINITE = \"infinite\";\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\nvar NEW_SCROLLING_MODE = \"scrolling.newMode\";\n\nvar _isVirtualMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL || that._isVirtual;\n\nvar _isAppendMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE && !that._isVirtual;\n\nexport var getPixelRatio = window => window.devicePixelRatio || 1;\nexport function getContentHeightLimit(browser) {\n  if (browser.msie) {\n    return 4e6;\n  } else if (browser.mozilla) {\n    return 8e6;\n  }\n\n  return 15e6 / getPixelRatio(getWindow());\n}\nexport function subscribeToExternalScrollers($element, scrollChangedHandler, $targetElement) {\n  var $scrollElement;\n  var scrollableArray = [];\n  var scrollToArray = [];\n  var disposeArray = [];\n  $targetElement = $targetElement || $element;\n\n  function getElementOffset(scrollable) {\n    var $scrollableElement = scrollable.element ? scrollable.$element() : scrollable;\n    var scrollableOffset = positionUtils.offset($scrollableElement);\n\n    if (!scrollableOffset) {\n      return $element.offset().top;\n    }\n\n    return scrollable.scrollTop() - (scrollableOffset.top - $element.offset().top);\n  }\n\n  var widgetScrollStrategy = {\n    on: function (scrollable, eventName, handler) {\n      scrollable.on(\"scroll\", handler);\n    },\n    off: function (scrollable, eventName, handler) {\n      scrollable.off(\"scroll\", handler);\n    }\n  };\n\n  function subscribeToScrollEvents($scrollElement) {\n    var isDocument = \"#document\" === $scrollElement.get(0).nodeName;\n    var scrollable = $scrollElement.data(\"dxScrollable\");\n    var eventsStrategy = widgetScrollStrategy;\n\n    if (!scrollable) {\n      scrollable = isDocument && $(getWindow()) || \"auto\" === $scrollElement.css(\"overflowY\") && $scrollElement;\n      eventsStrategy = eventsEngine;\n\n      if (!scrollable) {\n        return;\n      }\n    }\n\n    var handler = function (scrollable) {\n      return function () {\n        var scrollTop = scrollable.scrollTop() - getElementOffset(scrollable);\n        scrollTop = scrollTop > 0 ? scrollTop : 0;\n        scrollChangedHandler(scrollTop);\n      };\n    }(scrollable);\n\n    eventsStrategy.on(scrollable, \"scroll\", handler);\n    scrollToArray.push(function (pos) {\n      var topOffset = getElementOffset(scrollable);\n      var scrollMethod = scrollable.scrollTo ? \"scrollTo\" : \"scrollTop\";\n\n      if (pos - topOffset >= 0) {\n        scrollable[scrollMethod](pos + topOffset);\n      }\n    });\n    scrollableArray.push(scrollable);\n    disposeArray.push(function () {\n      eventsStrategy.off(scrollable, \"scroll\", handler);\n    });\n  }\n\n  for ($scrollElement = $targetElement.parent(); $scrollElement.length; $scrollElement = $scrollElement.parent()) {\n    subscribeToScrollEvents($scrollElement);\n  }\n\n  return {\n    scrollTo: function (pos) {\n      each(scrollToArray, function (_, scrollTo) {\n        scrollTo(pos);\n      });\n    },\n    dispose: function () {\n      each(disposeArray, function (_, dispose) {\n        dispose();\n      });\n    }\n  };\n}\nexport var VirtualScrollController = Class.inherit(function () {\n  var members = {\n    ctor: function (component, dataOptions, isVirtual) {\n      this._dataOptions = dataOptions;\n      this.component = component;\n      this._viewportSize = 0;\n      this._viewportItemSize = 20;\n      this._viewportItemIndex = 0;\n      this._contentSize = 0;\n      this._itemSizes = {};\n      this._sizeRatio = 1;\n      this._isVirtual = isVirtual;\n      this.positionChanged = Callbacks();\n      this._dataLoader = new VirtualDataLoader(this, this._dataOptions);\n    },\n    getItemSizes: function () {\n      return this._itemSizes;\n    },\n    option: function () {\n      return this.component.option.apply(this.component, arguments);\n    },\n    isVirtual: function () {\n      return this._isVirtual;\n    },\n    virtualItemsCount: function () {\n      if (_isVirtualMode(this)) {\n        var totalItemsCount = this._dataOptions.totalItemsCount();\n\n        if (this.option(NEW_SCROLLING_MODE) && -1 !== totalItemsCount) {\n          var viewportParams = this.getViewportParams();\n          var endItemsCount = totalItemsCount - (viewportParams.skip + viewportParams.take);\n          return {\n            begin: viewportParams.skip,\n            end: endItemsCount\n          };\n        }\n\n        return this._dataLoader.virtualItemsCount.apply(this._dataLoader, arguments);\n      }\n    },\n    setViewportPosition: function (position) {\n      var result = new Deferred();\n      var scrollingTimeout = Math.min(this.option(\"scrolling.timeout\") || 0, this._dataOptions.changingDuration());\n\n      if (scrollingTimeout < this.option(\"scrolling.renderingThreshold\")) {\n        scrollingTimeout = this.option(\"scrolling.minTimeout\") || 0;\n      }\n\n      clearTimeout(this._scrollTimeoutID);\n\n      if (scrollingTimeout > 0) {\n        this._scrollTimeoutID = setTimeout(() => {\n          this._setViewportPositionCore(position);\n\n          result.resolve();\n        }, scrollingTimeout);\n      } else {\n        this._setViewportPositionCore(position);\n\n        result.resolve();\n      }\n\n      return result.promise();\n    },\n    getViewportPosition: function () {\n      return this._position || 0;\n    },\n    getItemIndexByPosition: function () {\n      var position = this._position;\n      var defaultItemSize = this.getItemSize();\n      var offset = 0;\n      var itemOffset = 0;\n      var itemOffsetsWithSize = Object.keys(this._itemSizes).concat(-1);\n\n      for (var i = 0; i < itemOffsetsWithSize.length && offset < position; i++) {\n        var itemOffsetWithSize = parseInt(itemOffsetsWithSize[i]);\n        var itemOffsetDiff = (position - offset) / defaultItemSize;\n\n        if (itemOffsetWithSize < 0 || itemOffset + itemOffsetDiff < itemOffsetWithSize) {\n          itemOffset += itemOffsetDiff;\n          break;\n        } else {\n          itemOffsetDiff = itemOffsetWithSize - itemOffset;\n          offset += itemOffsetDiff * defaultItemSize;\n          itemOffset += itemOffsetDiff;\n        }\n\n        var itemSize = this._itemSizes[itemOffsetWithSize];\n        offset += itemSize;\n        itemOffset += offset < position ? 1 : (position - offset + itemSize) / itemSize;\n      }\n\n      return Math.round(50 * itemOffset) / 50;\n    },\n    _setViewportPositionCore: function (position) {\n      this._position = position;\n      var itemIndex = this.getItemIndexByPosition();\n      var result = this.setViewportItemIndex(itemIndex);\n      this.positionChanged.fire();\n      return result;\n    },\n    setContentItemSizes: function (sizes) {\n      var virtualItemsCount = this.virtualItemsCount();\n      this._contentSize = sizes.reduce((a, b) => a + b, 0);\n\n      if (virtualItemsCount) {\n        sizes.forEach((size, index) => {\n          this._itemSizes[virtualItemsCount.begin + index] = size;\n        });\n\n        var virtualContentSize = (virtualItemsCount.begin + virtualItemsCount.end + this.itemsCount()) * this._viewportItemSize;\n\n        var contentHeightLimit = getContentHeightLimit(browser);\n\n        if (virtualContentSize > contentHeightLimit) {\n          this._sizeRatio = contentHeightLimit / virtualContentSize;\n        } else {\n          this._sizeRatio = 1;\n        }\n      }\n    },\n    getItemSize: function () {\n      return this._viewportItemSize * this._sizeRatio;\n    },\n    getItemOffset: function (itemIndex, isEnd) {\n      var virtualItemsCount = this.virtualItemsCount();\n      var itemCount = itemIndex;\n\n      if (!virtualItemsCount) {\n        return 0;\n      }\n\n      var offset = 0;\n\n      var totalItemsCount = this._dataOptions.totalItemsCount();\n\n      Object.keys(this._itemSizes).forEach(currentItemIndex => {\n        if (!itemCount) {\n          return;\n        }\n\n        if (isEnd ? currentItemIndex >= totalItemsCount - itemIndex : currentItemIndex < itemIndex) {\n          offset += this._itemSizes[currentItemIndex];\n          itemCount--;\n        }\n      });\n      return Math.floor(offset + itemCount * this._viewportItemSize * this._sizeRatio);\n    },\n    getContentOffset: function (type) {\n      var isEnd = \"end\" === type;\n      var virtualItemsCount = this.virtualItemsCount();\n\n      if (!virtualItemsCount) {\n        return 0;\n      }\n\n      return this.getItemOffset(isEnd ? virtualItemsCount.end : virtualItemsCount.begin, isEnd);\n    },\n    getVirtualContentSize: function () {\n      var virtualItemsCount = this.virtualItemsCount();\n      return virtualItemsCount ? this.getContentOffset(\"begin\") + this.getContentOffset(\"end\") + this._contentSize : 0;\n    },\n    getViewportItemIndex: function () {\n      return this._viewportItemIndex;\n    },\n    setViewportItemIndex: function (itemIndex) {\n      this._viewportItemIndex = itemIndex;\n\n      if (this.option(NEW_SCROLLING_MODE)) {\n        return;\n      }\n\n      return this._dataLoader.viewportItemIndexChanged.apply(this._dataLoader, arguments);\n    },\n    viewportItemSize: function (size) {\n      if (void 0 !== size) {\n        this._viewportItemSize = size;\n      }\n\n      return this._viewportItemSize;\n    },\n    viewportSize: function (size) {\n      if (void 0 !== size) {\n        this._viewportSize = size;\n      }\n\n      return this._viewportSize;\n    },\n    reset: function (isRefresh) {\n      this._dataLoader.reset();\n\n      if (!isRefresh) {\n        this._itemSizes = {};\n      }\n    },\n    subscribeToWindowScrollEvents: function ($element) {\n      this._windowScroll = this._windowScroll || subscribeToExternalScrollers($element, scrollTop => {\n        if (this.viewportItemSize()) {\n          this.setViewportPosition(scrollTop);\n        }\n      });\n    },\n    dispose: function () {\n      clearTimeout(this._scrollTimeoutID);\n      this._windowScroll && this._windowScroll.dispose();\n      this._windowScroll = null;\n    },\n    scrollTo: function (pos) {\n      this._windowScroll && this._windowScroll.scrollTo(pos);\n    },\n    isVirtualMode: function () {\n      return _isVirtualMode(this);\n    },\n    isAppendMode: function () {\n      return _isAppendMode(this);\n    },\n    getViewportParams: function () {\n      var topIndex = this._viewportItemIndex;\n      var bottomIndex = this._viewportSize + topIndex;\n      var maxGap = this.pageSize();\n      var minGap = this.option(\"scrolling.minGap\");\n      var virtualMode = this.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL;\n      var skip = Math.floor(Math.max(0, topIndex - minGap) / maxGap) * maxGap;\n      var take = Math.ceil((bottomIndex + minGap) / maxGap) * maxGap - skip;\n\n      if (virtualMode) {\n        var remainedItems = this._dataOptions.totalItemsCount() - skip;\n        take = Math.min(take, remainedItems);\n      }\n\n      return {\n        skip: skip,\n        take: take\n      };\n    }\n  };\n  [\"pageIndex\", \"beginPageIndex\", \"endPageIndex\", \"pageSize\", \"load\", \"loadIfNeed\", \"handleDataChanged\", \"itemsCount\", \"getDelayDeferred\"].forEach(function (name) {\n    members[name] = function () {\n      return this._dataLoader[name].apply(this._dataLoader, arguments);\n    };\n  });\n  return members;\n}());","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js"],"names":["$","getWindow","eventsEngine","browser","positionUtils","each","Class","Deferred","Callbacks","VirtualDataLoader","SCROLLING_MODE_INFINITE","SCROLLING_MODE_VIRTUAL","NEW_SCROLLING_MODE","_isVirtualMode","that","option","_isVirtual","_isAppendMode","getPixelRatio","window","devicePixelRatio","getContentHeightLimit","msie","mozilla","subscribeToExternalScrollers","$element","scrollChangedHandler","$targetElement","$scrollElement","scrollableArray","scrollToArray","disposeArray","getElementOffset","scrollable","$scrollableElement","element","scrollableOffset","offset","top","scrollTop","widgetScrollStrategy","on","eventName","handler","off","subscribeToScrollEvents","isDocument","get","nodeName","data","eventsStrategy","css","push","pos","topOffset","scrollMethod","scrollTo","parent","length","_","dispose","VirtualScrollController","inherit","members","ctor","component","dataOptions","isVirtual","_dataOptions","_viewportSize","_viewportItemSize","_viewportItemIndex","_contentSize","_itemSizes","_sizeRatio","positionChanged","_dataLoader","getItemSizes","apply","arguments","virtualItemsCount","totalItemsCount","viewportParams","getViewportParams","endItemsCount","skip","take","begin","end","setViewportPosition","position","result","scrollingTimeout","Math","min","changingDuration","clearTimeout","_scrollTimeoutID","setTimeout","_setViewportPositionCore","resolve","promise","getViewportPosition","_position","getItemIndexByPosition","defaultItemSize","getItemSize","itemOffset","itemOffsetsWithSize","Object","keys","concat","i","itemOffsetWithSize","parseInt","itemOffsetDiff","itemSize","round","itemIndex","setViewportItemIndex","fire","setContentItemSizes","sizes","reduce","a","b","forEach","size","index","virtualContentSize","itemsCount","contentHeightLimit","getItemOffset","isEnd","itemCount","currentItemIndex","floor","getContentOffset","type","getVirtualContentSize","getViewportItemIndex","viewportItemIndexChanged","viewportItemSize","viewportSize","reset","isRefresh","subscribeToWindowScrollEvents","_windowScroll","isVirtualMode","isAppendMode","topIndex","bottomIndex","maxGap","pageSize","minGap","virtualMode","max","ceil","remainedItems","name"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    VirtualDataLoader\r\n} from \"./ui.grid.core.virtual_data_loader\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar NEW_SCROLLING_MODE = \"scrolling.newMode\";\r\nvar _isVirtualMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL || that._isVirtual;\r\nvar _isAppendMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE && !that._isVirtual;\r\nexport var getPixelRatio = window => window.devicePixelRatio || 1;\r\nexport function getContentHeightLimit(browser) {\r\n    if (browser.msie) {\r\n        return 4e6\r\n    } else if (browser.mozilla) {\r\n        return 8e6\r\n    }\r\n    return 15e6 / getPixelRatio(getWindow())\r\n}\r\nexport function subscribeToExternalScrollers($element, scrollChangedHandler, $targetElement) {\r\n    var $scrollElement;\r\n    var scrollableArray = [];\r\n    var scrollToArray = [];\r\n    var disposeArray = [];\r\n    $targetElement = $targetElement || $element;\r\n\r\n    function getElementOffset(scrollable) {\r\n        var $scrollableElement = scrollable.element ? scrollable.$element() : scrollable;\r\n        var scrollableOffset = positionUtils.offset($scrollableElement);\r\n        if (!scrollableOffset) {\r\n            return $element.offset().top\r\n        }\r\n        return scrollable.scrollTop() - (scrollableOffset.top - $element.offset().top)\r\n    }\r\n    var widgetScrollStrategy = {\r\n        on: function(scrollable, eventName, handler) {\r\n            scrollable.on(\"scroll\", handler)\r\n        },\r\n        off: function(scrollable, eventName, handler) {\r\n            scrollable.off(\"scroll\", handler)\r\n        }\r\n    };\r\n\r\n    function subscribeToScrollEvents($scrollElement) {\r\n        var isDocument = \"#document\" === $scrollElement.get(0).nodeName;\r\n        var scrollable = $scrollElement.data(\"dxScrollable\");\r\n        var eventsStrategy = widgetScrollStrategy;\r\n        if (!scrollable) {\r\n            scrollable = isDocument && $(getWindow()) || \"auto\" === $scrollElement.css(\"overflowY\") && $scrollElement;\r\n            eventsStrategy = eventsEngine;\r\n            if (!scrollable) {\r\n                return\r\n            }\r\n        }\r\n        var handler = function(scrollable) {\r\n            return function() {\r\n                var scrollTop = scrollable.scrollTop() - getElementOffset(scrollable);\r\n                scrollTop = scrollTop > 0 ? scrollTop : 0;\r\n                scrollChangedHandler(scrollTop)\r\n            }\r\n        }(scrollable);\r\n        eventsStrategy.on(scrollable, \"scroll\", handler);\r\n        scrollToArray.push((function(pos) {\r\n            var topOffset = getElementOffset(scrollable);\r\n            var scrollMethod = scrollable.scrollTo ? \"scrollTo\" : \"scrollTop\";\r\n            if (pos - topOffset >= 0) {\r\n                scrollable[scrollMethod](pos + topOffset)\r\n            }\r\n        }));\r\n        scrollableArray.push(scrollable);\r\n        disposeArray.push((function() {\r\n            eventsStrategy.off(scrollable, \"scroll\", handler)\r\n        }))\r\n    }\r\n    for ($scrollElement = $targetElement.parent(); $scrollElement.length; $scrollElement = $scrollElement.parent()) {\r\n        subscribeToScrollEvents($scrollElement)\r\n    }\r\n    return {\r\n        scrollTo: function(pos) {\r\n            each(scrollToArray, (function(_, scrollTo) {\r\n                scrollTo(pos)\r\n            }))\r\n        },\r\n        dispose: function() {\r\n            each(disposeArray, (function(_, dispose) {\r\n                dispose()\r\n            }))\r\n        }\r\n    }\r\n}\r\nexport var VirtualScrollController = Class.inherit(function() {\r\n    var members = {\r\n        ctor: function(component, dataOptions, isVirtual) {\r\n            this._dataOptions = dataOptions;\r\n            this.component = component;\r\n            this._viewportSize = 0;\r\n            this._viewportItemSize = 20;\r\n            this._viewportItemIndex = 0;\r\n            this._contentSize = 0;\r\n            this._itemSizes = {};\r\n            this._sizeRatio = 1;\r\n            this._isVirtual = isVirtual;\r\n            this.positionChanged = Callbacks();\r\n            this._dataLoader = new VirtualDataLoader(this, this._dataOptions)\r\n        },\r\n        getItemSizes: function() {\r\n            return this._itemSizes\r\n        },\r\n        option: function() {\r\n            return this.component.option.apply(this.component, arguments)\r\n        },\r\n        isVirtual: function() {\r\n            return this._isVirtual\r\n        },\r\n        virtualItemsCount: function() {\r\n            if (_isVirtualMode(this)) {\r\n                var totalItemsCount = this._dataOptions.totalItemsCount();\r\n                if (this.option(NEW_SCROLLING_MODE) && -1 !== totalItemsCount) {\r\n                    var viewportParams = this.getViewportParams();\r\n                    var endItemsCount = totalItemsCount - (viewportParams.skip + viewportParams.take);\r\n                    return {\r\n                        begin: viewportParams.skip,\r\n                        end: endItemsCount\r\n                    }\r\n                }\r\n                return this._dataLoader.virtualItemsCount.apply(this._dataLoader, arguments)\r\n            }\r\n        },\r\n        setViewportPosition: function(position) {\r\n            var result = new Deferred;\r\n            var scrollingTimeout = Math.min(this.option(\"scrolling.timeout\") || 0, this._dataOptions.changingDuration());\r\n            if (scrollingTimeout < this.option(\"scrolling.renderingThreshold\")) {\r\n                scrollingTimeout = this.option(\"scrolling.minTimeout\") || 0\r\n            }\r\n            clearTimeout(this._scrollTimeoutID);\r\n            if (scrollingTimeout > 0) {\r\n                this._scrollTimeoutID = setTimeout(() => {\r\n                    this._setViewportPositionCore(position);\r\n                    result.resolve()\r\n                }, scrollingTimeout)\r\n            } else {\r\n                this._setViewportPositionCore(position);\r\n                result.resolve()\r\n            }\r\n            return result.promise()\r\n        },\r\n        getViewportPosition: function() {\r\n            return this._position || 0\r\n        },\r\n        getItemIndexByPosition: function() {\r\n            var position = this._position;\r\n            var defaultItemSize = this.getItemSize();\r\n            var offset = 0;\r\n            var itemOffset = 0;\r\n            var itemOffsetsWithSize = Object.keys(this._itemSizes).concat(-1);\r\n            for (var i = 0; i < itemOffsetsWithSize.length && offset < position; i++) {\r\n                var itemOffsetWithSize = parseInt(itemOffsetsWithSize[i]);\r\n                var itemOffsetDiff = (position - offset) / defaultItemSize;\r\n                if (itemOffsetWithSize < 0 || itemOffset + itemOffsetDiff < itemOffsetWithSize) {\r\n                    itemOffset += itemOffsetDiff;\r\n                    break\r\n                } else {\r\n                    itemOffsetDiff = itemOffsetWithSize - itemOffset;\r\n                    offset += itemOffsetDiff * defaultItemSize;\r\n                    itemOffset += itemOffsetDiff\r\n                }\r\n                var itemSize = this._itemSizes[itemOffsetWithSize];\r\n                offset += itemSize;\r\n                itemOffset += offset < position ? 1 : (position - offset + itemSize) / itemSize\r\n            }\r\n            return Math.round(50 * itemOffset) / 50\r\n        },\r\n        _setViewportPositionCore: function(position) {\r\n            this._position = position;\r\n            var itemIndex = this.getItemIndexByPosition();\r\n            var result = this.setViewportItemIndex(itemIndex);\r\n            this.positionChanged.fire();\r\n            return result\r\n        },\r\n        setContentItemSizes: function(sizes) {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            this._contentSize = sizes.reduce((a, b) => a + b, 0);\r\n            if (virtualItemsCount) {\r\n                sizes.forEach((size, index) => {\r\n                    this._itemSizes[virtualItemsCount.begin + index] = size\r\n                });\r\n                var virtualContentSize = (virtualItemsCount.begin + virtualItemsCount.end + this.itemsCount()) * this._viewportItemSize;\r\n                var contentHeightLimit = getContentHeightLimit(browser);\r\n                if (virtualContentSize > contentHeightLimit) {\r\n                    this._sizeRatio = contentHeightLimit / virtualContentSize\r\n                } else {\r\n                    this._sizeRatio = 1\r\n                }\r\n            }\r\n        },\r\n        getItemSize: function() {\r\n            return this._viewportItemSize * this._sizeRatio\r\n        },\r\n        getItemOffset: function(itemIndex, isEnd) {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            var itemCount = itemIndex;\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            var offset = 0;\r\n            var totalItemsCount = this._dataOptions.totalItemsCount();\r\n            Object.keys(this._itemSizes).forEach(currentItemIndex => {\r\n                if (!itemCount) {\r\n                    return\r\n                }\r\n                if (isEnd ? currentItemIndex >= totalItemsCount - itemIndex : currentItemIndex < itemIndex) {\r\n                    offset += this._itemSizes[currentItemIndex];\r\n                    itemCount--\r\n                }\r\n            });\r\n            return Math.floor(offset + itemCount * this._viewportItemSize * this._sizeRatio)\r\n        },\r\n        getContentOffset: function(type) {\r\n            var isEnd = \"end\" === type;\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            return this.getItemOffset(isEnd ? virtualItemsCount.end : virtualItemsCount.begin, isEnd)\r\n        },\r\n        getVirtualContentSize: function() {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            return virtualItemsCount ? this.getContentOffset(\"begin\") + this.getContentOffset(\"end\") + this._contentSize : 0\r\n        },\r\n        getViewportItemIndex: function() {\r\n            return this._viewportItemIndex\r\n        },\r\n        setViewportItemIndex: function(itemIndex) {\r\n            this._viewportItemIndex = itemIndex;\r\n            if (this.option(NEW_SCROLLING_MODE)) {\r\n                return\r\n            }\r\n            return this._dataLoader.viewportItemIndexChanged.apply(this._dataLoader, arguments)\r\n        },\r\n        viewportItemSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportItemSize = size\r\n            }\r\n            return this._viewportItemSize\r\n        },\r\n        viewportSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportSize = size\r\n            }\r\n            return this._viewportSize\r\n        },\r\n        reset: function(isRefresh) {\r\n            this._dataLoader.reset();\r\n            if (!isRefresh) {\r\n                this._itemSizes = {}\r\n            }\r\n        },\r\n        subscribeToWindowScrollEvents: function($element) {\r\n            this._windowScroll = this._windowScroll || subscribeToExternalScrollers($element, scrollTop => {\r\n                if (this.viewportItemSize()) {\r\n                    this.setViewportPosition(scrollTop)\r\n                }\r\n            })\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._scrollTimeoutID);\r\n            this._windowScroll && this._windowScroll.dispose();\r\n            this._windowScroll = null\r\n        },\r\n        scrollTo: function(pos) {\r\n            this._windowScroll && this._windowScroll.scrollTo(pos)\r\n        },\r\n        isVirtualMode: function() {\r\n            return _isVirtualMode(this)\r\n        },\r\n        isAppendMode: function() {\r\n            return _isAppendMode(this)\r\n        },\r\n        getViewportParams: function() {\r\n            var topIndex = this._viewportItemIndex;\r\n            var bottomIndex = this._viewportSize + topIndex;\r\n            var maxGap = this.pageSize();\r\n            var minGap = this.option(\"scrolling.minGap\");\r\n            var virtualMode = this.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL;\r\n            var skip = Math.floor(Math.max(0, topIndex - minGap) / maxGap) * maxGap;\r\n            var take = Math.ceil((bottomIndex + minGap) / maxGap) * maxGap - skip;\r\n            if (virtualMode) {\r\n                var remainedItems = this._dataOptions.totalItemsCount() - skip;\r\n                take = Math.min(take, remainedItems)\r\n            }\r\n            return {\r\n                skip: skip,\r\n                take: take\r\n            }\r\n        }\r\n    };\r\n    [\"pageIndex\", \"beginPageIndex\", \"endPageIndex\", \"pageSize\", \"load\", \"loadIfNeed\", \"handleDataChanged\", \"itemsCount\", \"getDelayDeferred\"].forEach((function(name) {\r\n        members[name] = function() {\r\n            return this._dataLoader[name].apply(this._dataLoader, arguments)\r\n        }\r\n    }));\r\n    return members\r\n}());\r\n"]},"metadata":{},"sourceType":"module"}