{"ast":null,"code":"/**\r\n * DevExtreme (esm/data/odata/query_adapter.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isFunction } from \"../../core/utils/type\";\nimport { each } from \"../../core/utils/iterator\";\nimport config from \"../../core/config\";\nimport { extend } from \"../../core/utils/extend\";\nimport queryAdapters from \"../query_adapters\";\nimport { sendRequest, generateSelect, generateExpand, serializeValue, convertPrimitiveValue, serializePropName } from \"./utils\";\nimport { errors } from \"../errors\";\nimport { isConjunctiveOperator, normalizeBinaryCriterion, isUnaryOperation } from \"../utils\";\nvar DEFAULT_PROTOCOL_VERSION = 2;\nvar STRING_FUNCTIONS = [\"contains\", \"notcontains\", \"startswith\", \"endswith\"];\n\nvar compileCriteria = (() => {\n  var protocolVersion;\n  var forceLowerCase;\n  var fieldTypes;\n\n  var createBinaryOperationFormatter = op => (prop, val) => \"\".concat(prop, \" \").concat(op, \" \").concat(val);\n\n  var createStringFuncFormatter = (op, reverse) => (prop, val) => {\n    var bag = [op, \"(\"];\n\n    if (forceLowerCase) {\n      prop = -1 === prop.indexOf(\"tolower(\") ? \"tolower(\".concat(prop, \")\") : prop;\n      val = val.toLowerCase();\n    }\n\n    if (reverse) {\n      bag.push(val, \",\", prop);\n    } else {\n      bag.push(prop, \",\", val);\n    }\n\n    bag.push(\")\");\n    return bag.join(\"\");\n  };\n\n  var formatters = {\n    \"=\": createBinaryOperationFormatter(\"eq\"),\n    \"<>\": createBinaryOperationFormatter(\"ne\"),\n    \">\": createBinaryOperationFormatter(\"gt\"),\n    \">=\": createBinaryOperationFormatter(\"ge\"),\n    \"<\": createBinaryOperationFormatter(\"lt\"),\n    \"<=\": createBinaryOperationFormatter(\"le\"),\n    startswith: createStringFuncFormatter(\"startswith\"),\n    endswith: createStringFuncFormatter(\"endswith\")\n  };\n  var formattersV2 = extend({}, formatters, {\n    contains: createStringFuncFormatter(\"substringof\", true),\n    notcontains: createStringFuncFormatter(\"not substringof\", true)\n  });\n  var formattersV4 = extend({}, formatters, {\n    contains: createStringFuncFormatter(\"contains\"),\n    notcontains: createStringFuncFormatter(\"not contains\")\n  });\n\n  var compileBinary = criteria => {\n    var _fieldTypes;\n\n    criteria = normalizeBinaryCriterion(criteria);\n    var op = criteria[1];\n    var fieldName = criteria[0];\n    var fieldType = fieldTypes && fieldTypes[fieldName];\n\n    if (fieldType && (name = op, STRING_FUNCTIONS.some(funcName => funcName === name)) && \"String\" !== fieldType) {\n      throw new errors.Error(\"E4024\", op, fieldName, fieldType);\n    }\n\n    var name;\n    var formatters = 4 === protocolVersion ? formattersV4 : formattersV2;\n    var formatter = formatters[op.toLowerCase()];\n\n    if (!formatter) {\n      throw errors.Error(\"E4003\", op);\n    }\n\n    var value = criteria[2];\n\n    if (null !== (_fieldTypes = fieldTypes) && void 0 !== _fieldTypes && _fieldTypes[fieldName]) {\n      value = convertPrimitiveValue(fieldTypes[fieldName], value);\n    }\n\n    return formatter(serializePropName(fieldName), serializeValue(value, protocolVersion));\n  };\n\n  var compileGroup = criteria => {\n    var bag = [];\n    var groupOperator;\n    var nextGroupOperator;\n    each(criteria, function (index, criterion) {\n      if (Array.isArray(criterion)) {\n        if (bag.length > 1 && groupOperator !== nextGroupOperator) {\n          throw new errors.Error(\"E4019\");\n        }\n\n        bag.push(\"(\".concat(compileCore(criterion), \")\"));\n        groupOperator = nextGroupOperator;\n        nextGroupOperator = \"and\";\n      } else {\n        nextGroupOperator = isConjunctiveOperator(this) ? \"and\" : \"or\";\n      }\n    });\n    return bag.join(\" \".concat(groupOperator, \" \"));\n  };\n\n  var compileCore = criteria => {\n    if (Array.isArray(criteria[0])) {\n      return compileGroup(criteria);\n    }\n\n    if (isUnaryOperation(criteria)) {\n      return (criteria => {\n        var op = criteria[0];\n        var crit = compileCore(criteria[1]);\n\n        if (\"!\" === op) {\n          return \"not (\".concat(crit, \")\");\n        }\n\n        throw errors.Error(\"E4003\", op);\n      })(criteria);\n    }\n\n    return compileBinary(criteria);\n  };\n\n  return (criteria, version, types, filterToLower) => {\n    fieldTypes = types;\n    forceLowerCase = null !== filterToLower && void 0 !== filterToLower ? filterToLower : config().oDataFilterToLower;\n    protocolVersion = version;\n    return compileCore(criteria);\n  };\n})();\n\nvar createODataQueryAdapter = queryOptions => {\n  var _sorting = [];\n  var _criteria = [];\n  var _expand = queryOptions.expand;\n\n  var _select;\n\n  var _skip;\n\n  var _take;\n\n  var _countQuery;\n\n  var _oDataVersion = queryOptions.version || DEFAULT_PROTOCOL_VERSION;\n\n  var hasSlice = () => _skip || void 0 !== _take;\n\n  var hasFunction = criterion => {\n    for (var i = 0; i < criterion.length; i++) {\n      if (isFunction(criterion[i])) {\n        return true;\n      }\n\n      if (Array.isArray(criterion[i]) && hasFunction(criterion[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  var requestData = () => {\n    var result = {};\n\n    if (!_countQuery) {\n      if (_sorting.length) {\n        result.$orderby = _sorting.join(\",\");\n      }\n\n      if (_skip) {\n        result.$skip = _skip;\n      }\n\n      if (void 0 !== _take) {\n        result.$top = _take;\n      }\n\n      result.$select = generateSelect(_oDataVersion, _select) || void 0;\n      result.$expand = generateExpand(_oDataVersion, _expand, _select) || void 0;\n    }\n\n    if (_criteria.length) {\n      var criteria = _criteria.length < 2 ? _criteria[0] : _criteria;\n      var fieldTypes = null === queryOptions || void 0 === queryOptions ? void 0 : queryOptions.fieldTypes;\n      var filterToLower = null === queryOptions || void 0 === queryOptions ? void 0 : queryOptions.filterToLower;\n      result.$filter = compileCriteria(criteria, _oDataVersion, fieldTypes, filterToLower);\n    }\n\n    if (_countQuery) {\n      result.$top = 0;\n    }\n\n    if (queryOptions.requireTotalCount || _countQuery) {\n      if (4 !== _oDataVersion) {\n        result.$inlinecount = \"allpages\";\n      } else {\n        result.$count = \"true\";\n      }\n    }\n\n    return result;\n  };\n\n  return {\n    optimize: tasks => {\n      var selectIndex = -1;\n\n      for (var i = 0; i < tasks.length; i++) {\n        if (\"select\" === tasks[i].name) {\n          selectIndex = i;\n          break;\n        }\n      }\n\n      if (selectIndex < 0 || !isFunction(tasks[selectIndex].args[0])) {\n        return;\n      }\n\n      var nextTask = tasks[1 + selectIndex];\n\n      if (!nextTask || \"slice\" !== nextTask.name) {\n        return;\n      }\n\n      tasks[1 + selectIndex] = tasks[selectIndex];\n      tasks[selectIndex] = nextTask;\n    },\n    exec: url => sendRequest(_oDataVersion, {\n      url: url,\n      params: extend(requestData(), null === queryOptions || void 0 === queryOptions ? void 0 : queryOptions.params)\n    }, {\n      beforeSend: queryOptions.beforeSend,\n      jsonp: queryOptions.jsonp,\n      withCredentials: queryOptions.withCredentials,\n      countOnly: _countQuery,\n      deserializeDates: queryOptions.deserializeDates,\n      fieldTypes: queryOptions.fieldTypes,\n      isPaged: isFinite(_take)\n    }),\n\n    multiSort(args) {\n      var rules;\n\n      if (hasSlice()) {\n        return false;\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        var getter = args[i][0];\n        var desc = !!args[i][1];\n        var rule = void 0;\n\n        if (\"string\" !== typeof getter) {\n          return false;\n        }\n\n        rule = serializePropName(getter);\n\n        if (desc) {\n          rule += \" desc\";\n        }\n\n        rules = rules || [];\n        rules.push(rule);\n      }\n\n      _sorting = rules;\n    },\n\n    slice(skipCount, takeCount) {\n      if (hasSlice()) {\n        return false;\n      }\n\n      _skip = skipCount;\n      _take = takeCount;\n    },\n\n    filter(criterion) {\n      if (hasSlice()) {\n        return false;\n      }\n\n      if (!Array.isArray(criterion)) {\n        criterion = [].slice.call(arguments);\n      }\n\n      if (hasFunction(criterion)) {\n        return false;\n      }\n\n      if (_criteria.length) {\n        _criteria.push(\"and\");\n      }\n\n      _criteria.push(criterion);\n    },\n\n    select(expr) {\n      if (_select || isFunction(expr)) {\n        return false;\n      }\n\n      if (!Array.isArray(expr)) {\n        expr = [].slice.call(arguments);\n      }\n\n      _select = expr;\n    },\n\n    count: () => _countQuery = true\n  };\n};\n\nqueryAdapters.odata = createODataQueryAdapter;\nexport var odata = createODataQueryAdapter;","map":{"version":3,"sources":["/home/mukulsharma/Desktop/CyAmast/PortIntel/dashApp/node_modules/devextreme/esm/data/odata/query_adapter.js"],"names":["isFunction","each","config","extend","queryAdapters","sendRequest","generateSelect","generateExpand","serializeValue","convertPrimitiveValue","serializePropName","errors","isConjunctiveOperator","normalizeBinaryCriterion","isUnaryOperation","DEFAULT_PROTOCOL_VERSION","STRING_FUNCTIONS","compileCriteria","protocolVersion","forceLowerCase","fieldTypes","createBinaryOperationFormatter","op","prop","val","concat","createStringFuncFormatter","reverse","bag","indexOf","toLowerCase","push","join","formatters","startswith","endswith","formattersV2","contains","notcontains","formattersV4","compileBinary","criteria","_fieldTypes","fieldName","fieldType","name","some","funcName","Error","formatter","value","compileGroup","groupOperator","nextGroupOperator","index","criterion","Array","isArray","length","compileCore","crit","version","types","filterToLower","oDataFilterToLower","createODataQueryAdapter","queryOptions","_sorting","_criteria","_expand","expand","_select","_skip","_take","_countQuery","_oDataVersion","hasSlice","hasFunction","i","requestData","result","$orderby","$skip","$top","$select","$expand","$filter","requireTotalCount","$inlinecount","$count","optimize","tasks","selectIndex","args","nextTask","exec","url","params","beforeSend","jsonp","withCredentials","countOnly","deserializeDates","isPaged","isFinite","multiSort","rules","getter","desc","rule","slice","skipCount","takeCount","filter","call","arguments","select","expr","count","odata"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/data/odata/query_adapter.js)\r\n * Version: 21.1.5\r\n * Build date: Mon Aug 02 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport config from \"../../core/config\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport queryAdapters from \"../query_adapters\";\r\nimport {\r\n    sendRequest,\r\n    generateSelect,\r\n    generateExpand,\r\n    serializeValue,\r\n    convertPrimitiveValue,\r\n    serializePropName\r\n} from \"./utils\";\r\nimport {\r\n    errors\r\n} from \"../errors\";\r\nimport {\r\n    isConjunctiveOperator,\r\n    normalizeBinaryCriterion,\r\n    isUnaryOperation\r\n} from \"../utils\";\r\nvar DEFAULT_PROTOCOL_VERSION = 2;\r\nvar STRING_FUNCTIONS = [\"contains\", \"notcontains\", \"startswith\", \"endswith\"];\r\nvar compileCriteria = (() => {\r\n    var protocolVersion;\r\n    var forceLowerCase;\r\n    var fieldTypes;\r\n    var createBinaryOperationFormatter = op => (prop, val) => \"\".concat(prop, \" \").concat(op, \" \").concat(val);\r\n    var createStringFuncFormatter = (op, reverse) => (prop, val) => {\r\n        var bag = [op, \"(\"];\r\n        if (forceLowerCase) {\r\n            prop = -1 === prop.indexOf(\"tolower(\") ? \"tolower(\".concat(prop, \")\") : prop;\r\n            val = val.toLowerCase()\r\n        }\r\n        if (reverse) {\r\n            bag.push(val, \",\", prop)\r\n        } else {\r\n            bag.push(prop, \",\", val)\r\n        }\r\n        bag.push(\")\");\r\n        return bag.join(\"\")\r\n    };\r\n    var formatters = {\r\n        \"=\": createBinaryOperationFormatter(\"eq\"),\r\n        \"<>\": createBinaryOperationFormatter(\"ne\"),\r\n        \">\": createBinaryOperationFormatter(\"gt\"),\r\n        \">=\": createBinaryOperationFormatter(\"ge\"),\r\n        \"<\": createBinaryOperationFormatter(\"lt\"),\r\n        \"<=\": createBinaryOperationFormatter(\"le\"),\r\n        startswith: createStringFuncFormatter(\"startswith\"),\r\n        endswith: createStringFuncFormatter(\"endswith\")\r\n    };\r\n    var formattersV2 = extend({}, formatters, {\r\n        contains: createStringFuncFormatter(\"substringof\", true),\r\n        notcontains: createStringFuncFormatter(\"not substringof\", true)\r\n    });\r\n    var formattersV4 = extend({}, formatters, {\r\n        contains: createStringFuncFormatter(\"contains\"),\r\n        notcontains: createStringFuncFormatter(\"not contains\")\r\n    });\r\n    var compileBinary = criteria => {\r\n        var _fieldTypes;\r\n        criteria = normalizeBinaryCriterion(criteria);\r\n        var op = criteria[1];\r\n        var fieldName = criteria[0];\r\n        var fieldType = fieldTypes && fieldTypes[fieldName];\r\n        if (fieldType && (name = op, STRING_FUNCTIONS.some(funcName => funcName === name)) && \"String\" !== fieldType) {\r\n            throw new errors.Error(\"E4024\", op, fieldName, fieldType)\r\n        }\r\n        var name;\r\n        var formatters = 4 === protocolVersion ? formattersV4 : formattersV2;\r\n        var formatter = formatters[op.toLowerCase()];\r\n        if (!formatter) {\r\n            throw errors.Error(\"E4003\", op)\r\n        }\r\n        var value = criteria[2];\r\n        if (null !== (_fieldTypes = fieldTypes) && void 0 !== _fieldTypes && _fieldTypes[fieldName]) {\r\n            value = convertPrimitiveValue(fieldTypes[fieldName], value)\r\n        }\r\n        return formatter(serializePropName(fieldName), serializeValue(value, protocolVersion))\r\n    };\r\n    var compileGroup = criteria => {\r\n        var bag = [];\r\n        var groupOperator;\r\n        var nextGroupOperator;\r\n        each(criteria, (function(index, criterion) {\r\n            if (Array.isArray(criterion)) {\r\n                if (bag.length > 1 && groupOperator !== nextGroupOperator) {\r\n                    throw new errors.Error(\"E4019\")\r\n                }\r\n                bag.push(\"(\".concat(compileCore(criterion), \")\"));\r\n                groupOperator = nextGroupOperator;\r\n                nextGroupOperator = \"and\"\r\n            } else {\r\n                nextGroupOperator = isConjunctiveOperator(this) ? \"and\" : \"or\"\r\n            }\r\n        }));\r\n        return bag.join(\" \".concat(groupOperator, \" \"))\r\n    };\r\n    var compileCore = criteria => {\r\n        if (Array.isArray(criteria[0])) {\r\n            return compileGroup(criteria)\r\n        }\r\n        if (isUnaryOperation(criteria)) {\r\n            return (criteria => {\r\n                var op = criteria[0];\r\n                var crit = compileCore(criteria[1]);\r\n                if (\"!\" === op) {\r\n                    return \"not (\".concat(crit, \")\")\r\n                }\r\n                throw errors.Error(\"E4003\", op)\r\n            })(criteria)\r\n        }\r\n        return compileBinary(criteria)\r\n    };\r\n    return (criteria, version, types, filterToLower) => {\r\n        fieldTypes = types;\r\n        forceLowerCase = null !== filterToLower && void 0 !== filterToLower ? filterToLower : config().oDataFilterToLower;\r\n        protocolVersion = version;\r\n        return compileCore(criteria)\r\n    }\r\n})();\r\nvar createODataQueryAdapter = queryOptions => {\r\n    var _sorting = [];\r\n    var _criteria = [];\r\n    var _expand = queryOptions.expand;\r\n    var _select;\r\n    var _skip;\r\n    var _take;\r\n    var _countQuery;\r\n    var _oDataVersion = queryOptions.version || DEFAULT_PROTOCOL_VERSION;\r\n    var hasSlice = () => _skip || void 0 !== _take;\r\n    var hasFunction = criterion => {\r\n        for (var i = 0; i < criterion.length; i++) {\r\n            if (isFunction(criterion[i])) {\r\n                return true\r\n            }\r\n            if (Array.isArray(criterion[i]) && hasFunction(criterion[i])) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    };\r\n    var requestData = () => {\r\n        var result = {};\r\n        if (!_countQuery) {\r\n            if (_sorting.length) {\r\n                result.$orderby = _sorting.join(\",\")\r\n            }\r\n            if (_skip) {\r\n                result.$skip = _skip\r\n            }\r\n            if (void 0 !== _take) {\r\n                result.$top = _take\r\n            }\r\n            result.$select = generateSelect(_oDataVersion, _select) || void 0;\r\n            result.$expand = generateExpand(_oDataVersion, _expand, _select) || void 0\r\n        }\r\n        if (_criteria.length) {\r\n            var criteria = _criteria.length < 2 ? _criteria[0] : _criteria;\r\n            var fieldTypes = null === queryOptions || void 0 === queryOptions ? void 0 : queryOptions.fieldTypes;\r\n            var filterToLower = null === queryOptions || void 0 === queryOptions ? void 0 : queryOptions.filterToLower;\r\n            result.$filter = compileCriteria(criteria, _oDataVersion, fieldTypes, filterToLower)\r\n        }\r\n        if (_countQuery) {\r\n            result.$top = 0\r\n        }\r\n        if (queryOptions.requireTotalCount || _countQuery) {\r\n            if (4 !== _oDataVersion) {\r\n                result.$inlinecount = \"allpages\"\r\n            } else {\r\n                result.$count = \"true\"\r\n            }\r\n        }\r\n        return result\r\n    };\r\n    return {\r\n        optimize: tasks => {\r\n            var selectIndex = -1;\r\n            for (var i = 0; i < tasks.length; i++) {\r\n                if (\"select\" === tasks[i].name) {\r\n                    selectIndex = i;\r\n                    break\r\n                }\r\n            }\r\n            if (selectIndex < 0 || !isFunction(tasks[selectIndex].args[0])) {\r\n                return\r\n            }\r\n            var nextTask = tasks[1 + selectIndex];\r\n            if (!nextTask || \"slice\" !== nextTask.name) {\r\n                return\r\n            }\r\n            tasks[1 + selectIndex] = tasks[selectIndex];\r\n            tasks[selectIndex] = nextTask\r\n        },\r\n        exec: url => sendRequest(_oDataVersion, {\r\n            url: url,\r\n            params: extend(requestData(), null === queryOptions || void 0 === queryOptions ? void 0 : queryOptions.params)\r\n        }, {\r\n            beforeSend: queryOptions.beforeSend,\r\n            jsonp: queryOptions.jsonp,\r\n            withCredentials: queryOptions.withCredentials,\r\n            countOnly: _countQuery,\r\n            deserializeDates: queryOptions.deserializeDates,\r\n            fieldTypes: queryOptions.fieldTypes,\r\n            isPaged: isFinite(_take)\r\n        }),\r\n        multiSort(args) {\r\n            var rules;\r\n            if (hasSlice()) {\r\n                return false\r\n            }\r\n            for (var i = 0; i < args.length; i++) {\r\n                var getter = args[i][0];\r\n                var desc = !!args[i][1];\r\n                var rule = void 0;\r\n                if (\"string\" !== typeof getter) {\r\n                    return false\r\n                }\r\n                rule = serializePropName(getter);\r\n                if (desc) {\r\n                    rule += \" desc\"\r\n                }\r\n                rules = rules || [];\r\n                rules.push(rule)\r\n            }\r\n            _sorting = rules\r\n        },\r\n        slice(skipCount, takeCount) {\r\n            if (hasSlice()) {\r\n                return false\r\n            }\r\n            _skip = skipCount;\r\n            _take = takeCount\r\n        },\r\n        filter(criterion) {\r\n            if (hasSlice()) {\r\n                return false\r\n            }\r\n            if (!Array.isArray(criterion)) {\r\n                criterion = [].slice.call(arguments)\r\n            }\r\n            if (hasFunction(criterion)) {\r\n                return false\r\n            }\r\n            if (_criteria.length) {\r\n                _criteria.push(\"and\")\r\n            }\r\n            _criteria.push(criterion)\r\n        },\r\n        select(expr) {\r\n            if (_select || isFunction(expr)) {\r\n                return false\r\n            }\r\n            if (!Array.isArray(expr)) {\r\n                expr = [].slice.call(arguments)\r\n            }\r\n            _select = expr\r\n        },\r\n        count: () => _countQuery = true\r\n    }\r\n};\r\nqueryAdapters.odata = createODataQueryAdapter;\r\nexport var odata = createODataQueryAdapter;\r\n"]},"metadata":{},"sourceType":"module"}